<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title> Class and Data Tool </title>
<script type="text/javascript" src="open_parent.js"></script>
<link rel="stylesheet" type="text/css" href="pkc.css">
<link rel="stylesheet" type="text/css" href="stylesheet.css">
<meta name="description" content="Online Help for Configuration Workbench for Singleview Process Engine 9.1 ">
<script language="javascript" type="text/javascript" src="dhtml_toc.js"></script>
<script language="JavaScript">
<!--

document.onkeydown = checkChangePage;
function checkChangePage(e)
{
   if (!e) var e = window.event;
   // Don't put the following into the first page
   if ((e.ctrlKey && (e.keyCode == 37))) {
      // Ctrl-Left Arrow was pressed or Page up key pressed at the top of the page
      document.location.href = "39911.htm";
   } else
   // Don't put the following into the late page for a document
   if ((e.ctrlKey && (e.keyCode == 39))) {
      // Ctrl-Right Arrow was pressed or Page down key pressed and at the bottom of the page
      document.location.href = "10088.htm";
   }
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function printpage()
{
	window.print();
}
//-->
</script>
</head>
<body onload="loadParent();MM_preloadImages('left_down.gif','right_down.gif','index_down.gif','contents_down.gif','search_down.gif','print_down.gif');if (isTOCLoaded()) {expand('10987');highlight('11418')}">
<div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="39911.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="10088.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Online Help for Configuration Workbench for Singleview Process Engine 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%">
<h2 class="heading2">Class and Data Tool</h2>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'Class and Data Tool' (11418)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="bodytext">The Class and Data Tool is used to set up the data model and reference data.</p>
<table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%"><a name="o11413"></a><h3 class="heading3">Detail Tab Attributes</h3>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'Detail Tab Attributes' (11413)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="bodytext">The following table lists <span class="fieldname">Detail</span> tab attributes.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="note">Unless there is additional information specific to this tool, <a id="h39913" class="jump" title="Common Attributes" href="39911.htm" target="_self">attributes displayed on all tools are not included in this table</a>.</p></td></tr></table>
<p class="bodytext">&nbsp;</p>
<p class="caption">Detail Tab Attributes</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<th class="tableheading" style="border:1px solid #010101;" width="156"><p class="tableheading">Attribute</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="540"><p class="tableheading">Description</p>
</th>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">Description</span> field</p>
</td>
<td style="border:1px solid #010101;" width="540"><table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote">It is recommended that for:</p><ul class="tablenotelistbullet"><li class="tablenotelistbullet">Remote classes, the class description contain a reference to the remote entity to which the class is mapped (for example, the Convergent Billing entity).</li><li class="tablenotelistbullet">Classes mapped to Convergent Billing reference types or derived attribute tables, the class description contain the name and ID of the Convergent Billing reference type or derived attribute table.  </li></td></tr></table></ul></td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">Security Group</span> drop-down list</p>
</td>
<td style="border:1px solid #010101;" width="540"><p class="tablebodytext">Mandatory.</p>
<p class="tablebodytext">Specifies the security group that has access to the class's data and objects.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">External</span> check box</p>
</td>
<td style="border:1px solid #010101;" width="540"><p class="tablebodytext">Specifies that the class contains data that is retrieved from an external system.</p>
<p class="tablebodytext">If selected, the <span class="fieldname">Dynamic</span> check box is automatically selected, and the <span class="fieldname">Admin Static</span>, <span class="fieldname">Shared</span>, <span class="fieldname">Structured</span>, and <span class="fieldname">Cached</span> check boxes are disabled.</p>

<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><ul class="tablenotelistbullet"><li class="tablenotelistbullet">External classes are always dynamic classes.  External classes cannot be changed to internal classes after the class is saved and committed.</li><li class="tablenotelistbullet">Differences between external and shared classes are described in the <span class="referrals">Configuration Guide for Singleview Process Engine</span>.</li></td></tr></table></ul></td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">Dynamic</span> check box</p>
</td>
<td style="border:1px solid #010101;" width="540"><p class="tablebodytext">Determines whether the class is dynamic (see the <span class="referrals">Configuration Guide for Singleview Process Engine</span>).</p>
<p class="tablebodytext">If not selected, the class is static.  The default setting for all new classes is static.</p>
<p class="tablebodytext">If selected, the <span class="fieldname">Admin Static</span>, <span class="fieldname">Structured</span>, and <span class="fieldname">Cached</span> check boxes are disabled.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote">A dynamic class cannot be changed to a static, admin static, or external class after it is saved and committed.</p></td></tr></table>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">AdminStatic</span> check box</p>
</td>
<td style="border:1px solid #010101;" width="540"><p class="tablebodytext">Determines whether the class is admin static (see the <span class="referrals">Configuration Guide for Singleview Process Engine</span>).</p>
<p class="tablebodytext">If selected, the <span class="fieldname">External</span> and <span class="fieldname">Dynamic</span> check boxes are disabled.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">Shared</span> check box</p>
</td>
<td style="border:1px solid #010101;" width="540"><p class="tablebodytext">Determines whether a class is shared (see the <span class="referrals">Configuration Guide for Singleview Process Engine</span>).</p>
<p class="tablebodytext">That is, a remote table or view is accessed and allows read access to data that is maintained external to Process Engine.</p>
<p class="tablebodytext">If selected, the <span class="fieldname">External</span> check box is disabled.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote">A shared class cannot be changed to a local or external class after it is saved and committed.</p></td></tr></table>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">Structured</span> check box</p>
</td>
<td style="border:1px solid #010101;" width="540"><p class="tablebodytext">Specifies that the class contains a structured hierarchy of facts for use in a structured list.</p>
<p class="tablebodytext">It only applies to structured classes.</p>
<p class="tablebodytext">If selected, the <span class="fieldname">External</span> and <span class="fieldname">Dynamic</span> check boxes are disabled.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">Cached</span> check box</p>
</td>
<td style="border:1px solid #010101;" width="540"><p class="tablebodytext">Determines whether a static class's data is cached locally on the PC on which Process Engine web client runs, or stored and retrieved from the Process Engine server when required.</p>
<p class="tablebodytext">If a class is cached (see the <span class="referrals">Configuration Guide for Singleview Process Engine</span>), the data is loaded onto the local PC when the user logs into Process Engine web client.</p>
<p class="tablebodytext">If selected, the <span class="fieldname">External</span> and <span class="fieldname">Dynamic</span> check boxes are disabled.</p>
<p class="tablebodytext">Cached classes improve performance because the data does not have to be retrieved from the Process Engine server.</p>
<p class="tablebodytext">Local static classes accessed on a daily basis should be cached.  If the local static class is not constantly used, it should not be cached.</p>
<p class="tablebodytext">Generally, admin static or shared static classes are not cached.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote">It is only editable for static and admin static classes.  The cache setting for core static and core admin static classes cannot be changed.</p></td></tr></table>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">Key Adjusted</span> check box</p>
</td>
<td style="border:1px solid #010101;" width="540"><p class="tablebodytext">Specifies that the object key offset be added to object keys when they are passed to the Process Engine server.</p>
<p class="tablebodytext">Object keys must be positive when passed to the Process Engine server; therefore, adjusting the key is necessary when object keys in shared classes have negative values (for example, Convergent Billing reference codes values, which can be zero or negative).</p>
<p class="tablebodytext">It only applies to shared static and shared admin static classes.</p>
<p class="tablebodytext">The value of the offset is specified in the <span class="unixoutputc"><a id="h13343" class="jump" title="Configuration Tab Attributes" href="58949.htm" target="_self">ObjKey_Offset</a></span><a id="h13343_2" class="jump" title="Configuration Tab Attributes" href="58949.htm" target="_self"> configuration item</a> (see the <span class="referrals">Configuration Guide for Singleview Process Engine</span>).</p>
<p class="tablebodytext">It can also be set using the <span class="unixoutputc">pe_moveclass</span> server utility (see the <span class="referrals">System Reference Guide for Singleview</span>).</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote">It is strongly recommended that only classes mapping to Convergent Billing reference types be key adjusted.</p></td></tr></table>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">Last Modified Details</span> check box</p>
</td>
<td style="border:1px solid #010101;" width="540"><p class="tablebodytext">Specifies that the Last_Modified and Last_Mod_User facts be created for dynamic classes.</p>
<p class="tablebodytext">It is read-only and selected by default for all static and admin static classes.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">Association 1</span> field</p>
</td>
<td style="border:1px solid #010101;" width="540"><p class="tablebodytext">Specifies the fact that is used to define a simple (one-to-many) association between classes. </p>
<p class="tablebodytext">The field applies to dynamic, static, and admin static classes.</p>
<p class="tablebodytext">Clicking the arrow displays the <span class="formname">Class Association</span> window.</p>
<p class="tablebodytext"><img src="10077_classassociation.png" alt="Class Association Window" height="246" width="421" vspace="2" hspace="2" align="bottom" border="0"></p>
<p class="tablebodytext">When creating an association, storage is created for a reference subset fact by default.  If no storage is to be allocated, the <span class="fieldname">No Storage</span> check box must be selected when creating a reference subset fact.</p>
<p class="tablebodytext">All associations to shared classes must have the <span class="fieldname">No Storage</span> check box selected.  Stored reference subset facts have negative performance impacts if data is being archived and purged from the class.  While data is being purged, Process Engine must rebuild the reference subset facts if they are stored.</p>
<p class="tablebodytext">For more information on reference subset facts in simple associations, refer to the <span class="referrals">Configuration Guide for Singleview Process Engine</span>.</p>
<p class="tablebodytext">Facts from the Association 1 class can be used in a layout. </p>

<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><ul class="tablenotelistbullet"><li class="tablenotelistbullet">Associations cannot be modified after the class is saved and committed.</li><li class="tablenotelistbullet">While configuring expressions and EPM functions, the fact specified in the Association1 field is called the AssocRefA fact.  At all other times, it is called the Association 1 fact.</li></td></tr></table></ul></td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">Association 2</span> field</p>
</td>
<td style="border:1px solid #010101;" width="540"><p class="tablebodytext">Used in conjunction with the Association 1 field, and specifies the fact used to define a complex (many-to-many) association.</p>
<p class="tablebodytext">The field applies to dynamic, static, and admin static classes.</p>
<p class="tablebodytext">For more information about reference subset facts in complex associations, refer to the <span class="referrals">Configuration Guide for Singleview Process Engine</span>.</p>
<p class="tablebodytext">Facts from the Association 2 class can be used in a layout.</p>

<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><ul class="tablenotelistbullet"><li class="tablenotelistbullet">Associations cannot be modified after the class is saved and committed.</li><li class="tablenotelistbullet">While configuring expressions and EPM functions, the fact specified in the Association 2 field is called the AssocRefB fact.  At all other times, it is called the Association 2 fact.</li></td></tr></table></ul></td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">Description Fact</span> check box</p>
</td>
<td style="border:1px solid #010101;" width="540"><p class="tablebodytext">Determines whether a Description fact for the class is automatically created.</p>
<p class="tablebodytext">It is recommended that all static and admin static classes have a Description fact.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote">A Description fact can be manually added to the class after the class is saved and committed.</p></td></tr></table>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">Display Name Fact</span> drop-down list</p>
</td>
<td style="border:1px solid #010101;" width="540"><p class="tablebodytext">Specifies the name of the fact in the class that contains the display name for all the class's objects. </p>
<p class="tablebodytext">For example, the Contact class has a Display Name fact of OfficialName_X.  The derivation expression for OfficialName_X concatenates the first and last name of the contact.  The value of OfficialName_X (that is, the first and last name of the contact) is displayed in the title bar of the <span class="formname">Contact</span> view.</p>
<p class="tablebodytext">For more information, refer to the <span class="referrals">Internationalisation Configuration Guide for Singleview</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">Local Table Name</span> field</p>
</td>
<td style="border:1px solid #010101;" width="540"><p class="tablebodytext">Specifies the physical database table used for the class.</p>
<p class="tablebodytext">The class usage type determines the default table for class storage. The table below displays default table names for each class type.</p>
<p class="tablebodytext">The <span class="unixoutputc">pe_createtable</span> server utility is used to create a user-defined table that can be used as an alternative to the default table. </p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote">A user-defined table can store only one class.  The field cannot be changed after the class is saved and committed.  The <span class="unixoutputc">pe_moveclass</span> server utility can be used to move a class to another table.</p></td></tr></table>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">Debug Option Include Config</span> check box</p>
</td>
<td style="border:1px solid #010101;" width="540"><p class="tablebodytext">Selecting the check box displays additional classes available only for debugging purposes. The list of classes is refreshed to include all classes.</p>
<p class="tablebodytext">The configuration classes must be updated from the relevant tool and not in the Class and Data Tool; for example, a status class must be updated from the Status Tool.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">Use Type Fact</span> check box</p>
</td>
<td style="border:1px solid #010101;" width="540"><p class="tablebodytext">Specifies whether the class includes a Type fact for specifying a type for objects in the class.</p>
<p class="tablebodytext">When selected, the <span class="fieldname">Type Fact</span> drop-down list is mandatory.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">Type Fact</span> drop-down list</p>
</td>
<td style="border:1px solid #010101;" width="540"><p class="tablebodytext">Enabled when the <span class="fieldname">Use Type Fact</span> check box is selected.</p>
<p class="tablebodytext">Specifies the Type fact for the class.  A Type fact is a reference fact to a class containing a list of types for the object. A Type fact can only reference static classes.</p>
<p class="tablebodytext">The drop-down list contains all reference facts belonging to the class.  Only reference facts with an <span class="fieldname">Initial State</span> of Mandatory can be selected as the Type fact.</p>
<p class="tablebodytext">To define a Type fact, select &lt;new&gt; and click the arrow to open the Fact Tool and create a reference fact with an <span class="fieldname">Initial State</span> of Mandatory.</p>
<p class="tablebodytext">Type facts allow flexibility.  For example, the Issue class has a Type fact that specifies the following issue types:</p>
<ul class="tablelistbullet"><li class="tablelistbullet">Troubleshooting</li><li class="tablelistbullet">Billing inquiry</li><li class="tablelistbullet">Customer service</li><li class="tablelistbullet">Account adjustment.</li></ul><p class="tablebodytext">Different screen layouts and security can be defined for each type in a class.  For example, security can be defined so that only Business users can work with contacts with a Type fact of Business.  Type facts allow gathering of different information for different issue types.  For more information about how a Type fact is used in specifying layouts, refer to the <span class="referrals">Configuration Guide for Singleview Process Engine</span>.</p>
<p class="tablebodytext">When a Type fact is used in a class, a static class defining the types must be created.  For example, the Issue class has a Type fact referencing the Issue_Type class that defines the valid issue types.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote">If required, a Type fact must be created when a dynamic class is created because it cannot be added after the class is saved and committed.  However, the Type fact for a class can be updated after saving.</p></td></tr></table>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">Status Fact</span> drop-down list</p>
</td>
<td style="border:1px solid #010101;" width="540"><p class="tablebodytext">Specifies the Status fact used for each object in the class.</p>
<p class="tablebodytext">The Status fact is a reference fact to the Status class.  Statuses are defined using the Status Tool.  For example, objects in the Case class can have a status of Open or Closed.  The Open and Closed values are objects stored in the Status fact.  Status facts apply only to dynamic and admin static classes. </p>
<p class="tablebodytext">Use the arrow to define the Status fact, if required.  The fact can be defined at any time (that is, it does not have to be defined when the class is defined).</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">Use Categories Fact</span> check box</p>
</td>
<td style="border:1px solid #010101;" width="540"><p class="tablebodytext">Specifies whether the class includes a Categories fact for categorising objects. </p>
<p class="tablebodytext">A Categories fact can be defined for all non-core, fact-based classes. Non-fact-based classes have a Categories attribute.</p>
<p class="tablebodytext">It is read-only and is automatically:</p>
<ul class="tablelistbullet"><li class="tablelistbullet">Checked for local classes</li><li class="tablelistbullet">Unchecked for dynamic classes.</li></ul></td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">Categories Fact</span> drop-down list</p>
</td>
<td style="border:1px solid #010101;" width="540"><p class="tablebodytext">Enabled when the <span class="fieldname">Use Categories Fact</span> check box is selected.</p>
<p class="tablebodytext">Specifies the Categories fact for the class. A Categories fact can be any text fact belonging to the class.</p>
<p class="tablebodytext">To define a Categories fact, select either of the following:</p>
<ul class="tablelistbullet"><li class="tablelistbullet">&lt;new&gt;, and click the <strong class="buttons">Zoom to Tool</strong> button to open the Fact Tool and create a string fact.</li><li class="tablelistbullet">One of the listed text facts.</li></ul><p class="tablebodytext">If a Categories fact has not been created when a Static or Admin Static class is saved, a fact called Categories is created and associated to the class automatically.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote">Categories facts cannot be removed from core classes.  They are usually applied to configuration classes, but can be defined for any class.</p></td></tr></table>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">Use Version Fact</span> check box</p>
</td>
<td style="border:1px solid #010101;" width="540"><p class="tablebodytext">Reserved for future use.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">Version Fact</span> drop-down list</p>
</td>
<td style="border:1px solid #010101;" width="540"><p class="tablebodytext">Reserved for future use.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">System Generated</span> check box</p>
</td>
<td style="border:1px solid #010101;" width="540"><p class="tablebodytext">If selected, Process Engine automatically generates alias values for the Name fact for the class's objects.</p>
<p class="tablebodytext">If aliases are automatically generated, the rules for their generation must be specified in the <span class="fieldname">String Expression</span> and <span class="fieldname">Integer Padding</span> fields.</p>
<p class="tablebodytext">Unless it is essential that a sequential number be allocated for each object in the class, it is recommended that this check box not be selected and the Name fact in the class be defined as Derived, and stored with a derivation expression; for example:</p>
<p class="tablebodytext"><span class="unixoutputc">alias([Type].[Name],{This_&lt;classname&gt;}, 1)</span></p>
<p class="tablebodytext">It is read-only after the class is saved and committed; that is, it can only be selected when creating a class. </p>
<p class="tablebodytext">The term 'alias' also relates to a field that names each combination of possible values in a structured class.  </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">String Expression</span> field</p>
</td>
<td style="border:1px solid #010101;" width="540"><p class="tablebodytext">Specifies the format of the first portion of system-generated aliases.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="156"><p class="tablebodytext"><span class="fieldname">Integer Padding</span> field</p>
</td>
<td style="border:1px solid #010101;" width="540"><p class="tablebodytext">Specifies the minimum number of characters to be used in the numeric part of system-generated aliases.</p>
<p class="tablebodytext">If necessary, the generated number is zero-padded to the left to meet this specification.</p>
</td>
</tr>

</table>
<p class="tablebodytext">&nbsp;</p>
<p class="bodytext">The following table lists default table names for each class type.</p>
<p class="tablebodytext">&nbsp;</p>
<p class="caption">Default Database Table by Class Type</p>
<table class="tableintopic" width="306" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<th class="tableheading" style="border:1px solid #010101;" width="114"><p class="tableheading">Class Type</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="192"><p class="tableheading">Table</p>
</th>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext">Static</p>
</td>
<td style="border:1px solid #010101;" width="192"><p class="tablebodytext"><span class="unixoutputc">UDOC_VAL</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext">Admin Static</p>
</td>
<td style="border:1px solid #010101;" width="192"><p class="tablebodytext"><span class="unixoutputc">UDOC_ADMIN_VAL</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext">Dynamic</p>
</td>
<td style="border:1px solid #010101;" width="192"><p class="tablebodytext"><span class="unixoutputc">UDOC_DYNAMIC_VAL</span></p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%"><a name="o11415"></a><h3 class="heading3">Structure Tab Attributes</h3>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'Structure Tab Attributes' (11415)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="bodytext">Table 1 lists attributes on the <span class="fieldname">Structure</span> tab.</p>
<p class="bodytext">&nbsp;</p>
<p class="caption">Table 1  Structure Tab Attributes</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<th class="tableheading" style="border:1px solid #010101;" width="144"><p class="tableheading">Attribute</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="552"><p class="tableheading">Description</p>
</th>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="fieldname">Available Fact</span> field</p>
</td>
<td style="border:1px solid #010101;" width="552"><p class="tablebodytext">Lists the facts in the class available for inclusion in the structure.</p>
<p class="tablebodytext">Facts must be designated as available for the structure when they are defined in the Fact Tool.  Only text facts can be used in a structured hierarchy.</p>
<p class="tablebodytext">Facts can be moved from the <span class="fieldname">Available Fact</span> field to the <span class="fieldname">Alias Fact</span> or <span class="fieldname">Structured Level</span> fields, as applicable, using drag and drop or the arrow buttons.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="fieldname">Alias Fact</span> field</p>
</td>
<td style="border:1px solid #010101;" width="552"><p class="tablebodytext">Fact used as the name for each group of permissible values in the structure.</p>
<p class="tablebodytext">It is displayed in the client as the name for each set of values.</p>
<p class="tablebodytext">It defaults to the Name fact.  It is recommended that the Name fact be used because it is unique for each object; that is, each set of values.</p>
<p class="tablebodytext">The fact to be used as the structure's alias can be moved from the <span class="fieldname">Available Fact</span> list.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote">The term 'alias' also relates to deriving a unique value for a fact in a class using the <span class="fieldname"><a id="h13344" class="jump" title="Detail Tab Attributes" href="11418.htm#o11413" target="_self">System Generated</a></span> check box.  </p></td></tr></table>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="fieldname">Structured Level</span> field</p>
</td>
<td style="border:1px solid #010101;" width="552"><p class="tablebodytext">Allows facts to be included in the structure and their positions in the hierarchy to be specified.</p>
<p class="tablebodytext">Facts to be included in the structure can be moved from the <span class="fieldname">Available Fact</span> list.</p>
<p class="tablebodytext">The fact at the top of the <span class="fieldname">Structured Levels</span> list is the fact at the top of the hierarchy.  The following buttons to the right of the list allow a selected fact's position in the hierarchy to be moved:</p>
<ul class="tablelistbullet"><li class="tablelistbullet"><strong class="buttons">Top</strong> moves the fact to the top of the hierarchy.</li><li class="tablelistbullet"><strong class="buttons">Up</strong> moves the fact up one position.</li><li class="tablelistbullet"><strong class="buttons">Down</strong> moves the fact down one position.</li><li class="tablelistbullet"><strong class="buttons">Bottom</strong> moves the fact to the bottom of the hierarchy.</li></ul><p class="tablebodytext">Levels can be changed after the class is in use; however, a warning message is displayed indicating that the change will make the existing data invalid.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote">Structured classes cannot be made unstructured after the class is saved.</p></td></tr></table>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%"><a name="o11416"></a><h3 class="heading3">Local Storage Tab Attributes</h3>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'Local Storage Tab Attributes' (11416)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="bodytext">The following table lists attributes on the <span class="fieldname">Local Storage</span> tab.</p>
<p class="bodytext">&nbsp;</p>
<p class="caption">Local Storage Tab Attributes</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<th class="tableheading" style="border:1px solid #010101;" width="84"><p class="tableheading">Column</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="612"><p class="tableheading">Description</p>
</th>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="84"><p class="tablebodytext"><span class="fieldname">Row Key</span></p>
</td>
<td style="border:1px solid #010101;" width="612"><p class="tablebodytext">Column displaying the RowKey value for all facts in the row.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="84"><p class="tablebodytext"><span class="fieldname">Text</span></p>
</td>
<td style="border:1px solid #010101;" width="612"><p class="tablebodytext">Group of columns in which facts with a type of Text are stored.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="84"><p class="tablebodytext"><span class="fieldname">Decimal</span></p>
</td>
<td style="border:1px solid #010101;" width="612"><p class="tablebodytext">Group of columns in which facts with a type of Decimal, Date Time, Duration, Currency, or Percentage are stored.</p>
<p class="tablebodytext">If no date columns are configured, all Date Time facts are stored in decimal columns.  System-generated Date Time facts are always stored in decimal columns even if date columns exist and cannot be moved to a date column.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="84"><p class="tablebodytext"><span class="fieldname">Integer</span></p>
</td>
<td style="border:1px solid #010101;" width="612"><p class="tablebodytext">Group of columns in which facts with a type of Integer, Boolean, or Reference are stored.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="84"><p class="tablebodytext"><span class="fieldname">Date</span></p>
</td>
<td style="border:1px solid #010101;" width="612"><p class="tablebodytext">Group of columns in which facts with a type of Date Time are stored.</p>
<p class="tablebodytext">Date columns are optional and by default, the <span class="fieldname">Storage</span> tab only contains a placeholder for date columns. Add date columns using the <span class="unixoutputc">pe_addtablecols</span> server utility (see the <span class="referrals">Configuration Guide for Singleview Process Engine</span>).</p>
<p class="tablebodytext">If date columns exist, user-defined Date Time facts are stored in these columns.  Otherwise, Date Time facts are stored in decimal columns.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>


<br><div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="39911.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="10088.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Online Help for Configuration Workbench for Singleview Process Engine 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div></body>
</html>


