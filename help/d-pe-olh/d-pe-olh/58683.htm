<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title> ClientParamGet$() </title>
<script type="text/javascript" src="open_parent.js"></script>
<link rel="stylesheet" type="text/css" href="pkc.css">
<link rel="stylesheet" type="text/css" href="stylesheet.css">
<meta name="description" content="Online Help for Configuration Workbench for Singleview Process Engine 9.1 ">
<script language="javascript" type="text/javascript" src="dhtml_toc.js"></script>
<script language="JavaScript">
<!--

document.onkeydown = checkChangePage;
function checkChangePage(e)
{
   if (!e) var e = window.event;
   // Don't put the following into the first page
   if ((e.ctrlKey && (e.keyCode == 37))) {
      // Ctrl-Left Arrow was pressed or Page up key pressed at the top of the page
      document.location.href = "39892.htm";
   } else
   // Don't put the following into the late page for a document
   if ((e.ctrlKey && (e.keyCode == 39))) {
      // Ctrl-Right Arrow was pressed or Page down key pressed and at the bottom of the page
      document.location.href = "39893.htm";
   }
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function printpage()
{
	window.print();
}
//-->
</script>
</head>
<body onload="loadParent();MM_preloadImages('left_down.gif','right_down.gif','index_down.gif','contents_down.gif','search_down.gif','print_down.gif');if (isTOCLoaded()) {expand('57331');expand('11011');highlight('58683')}">
<div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="39892.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="39893.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Online Help for Configuration Workbench for Singleview Process Engine 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%">
<h3 class="heading3">ClientParamGet$()</h3>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'ClientParamGet$()' (58683)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="syntaxheading">Syntax</p>
<pre class="unixinputp">ClientParamGet$(    Index&amp;)</pre>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Description</p>
<p class="bodytext">Returns the value of a client parameter and is only valid for On Client Request triggers.</p>
<p class="syntaxheading">Parameter</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td class="tableheading" style="border:1px solid #010101;" width="114"><p class="tableheading">Parameter</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="582"><p class="tableheading">Description</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">Index&amp;</span></p>
</td>
<td style="border:1px solid #010101;" width="582"><p class="tablebodytext">Integer value specifying the index of a client parameter to be retrieved from the array of client parameters.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Returns</p>
<p class="bodytext">Value of the client parameter if successful; if <span class="unixoutputc">Index&amp;</span> is out of range, an exception is raised.</p>
<p class="syntaxheading">Remarks</p>
<p class="bodytext">The client initiating the trigger determines the values of the parameters.  Process Engine web client provides appropriate parameters when initiating configured operations.</p>
<p class="bodytext">Client parameters for triggers on Zoom and NewObj operations are populated from the view created by the operation, not the view on which the operation was invoked.</p>
<p class="bodytext">If the trigger is invoked by objects being dropped on a hierarchy tree, client parameters in Table 22 are available; otherwise, client parameters in Table 21 are available, depending on the configuration.  </p>

<table width="100%" class="tipstyle"><tr><td><p class="tip">Tip:</p><ul class="tiplistbullet"><li class="tiplistbullet">Client parameters are listed in the tables in the order in which they are stored in the client parameters array; however, positions of client parameters may change.  It is recommended that a client parameter be found by indexing through elements in the array, and searching the returned string for the appropriate <span class="unixoutputc">PARAM:</span> ID.  Details of the client parameter can then be retrieved using index values for subsequent elements.</li><li class="tiplistbullet">To increase portability of the EPM, use the name of the layout group template to determine the layout group template key, rather than hardcoding the layout group template key.  The layout group template object is in the Layout_Group_Template class (see the <span class="referrals">Configuration Workbench Tools Guide for Singleview Process Engine</span>).</li></td></tr></table></ul><p class="bodytext">&nbsp;</p>
<p class="caption">Table 21  Client Parameters Array for Other Than Hierarchy Tree Drop Event</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<th class="tableheading" style="border:1px solid #010101;" width="222"><p class="tableheading">Value</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="474"><p class="tableheading">Description</p>
</th>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">PARAM:CONTEXT_OBJ</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Hardcoded text string.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote">The <span class="unixoutputc">PARAM:CONTEXT_OBJ</span> parameters are only included if there is a context class configured on the operation, and a layout group matches the context class that displays an object.</p></td></tr></table>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">&lt;Class Key&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Class key of the context object.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">&lt;Object Key&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Object key of the context object.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">PARAM:END</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Hardcoded text string.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">PARAM:BASEVIEW_ID</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Hardcoded text string.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote">The <span class="unixoutputc">PARAM:BASEVIEW_ID</span> parameters are only included if there is a base view.  The base view is the view from which the On Client Request trigger was invoked.</p></td></tr></table>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">&lt;Base View ID&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Number that identifies a base view instance.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">PARAM:END</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Hardcoded text string.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">PARAM:CURRENT_OBJ</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Hardcoded text string.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote">The <span class="unixoutputc">PARAM:CURRENT_OBJ</span> parameters are the view's main object if the operation is configured on the view's toolbar, or the focused tab's main object (if one exists) if the operation is configured on the tab's toolbar.</p></td></tr></table>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">&lt;Class Key&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Class key of the current object.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">&lt;Object Key&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Object key of the current object.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">PARAM:END</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Hardcoded text string.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">PARAM:LIST_SECTION</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Hardcoded text string.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote">The <span class="unixoutputc">PARAM:LIST_SECTION</span> parameters are only included if the <span class="fieldname">List Section Objects</span> attribute is set in the toolbar tabs in the Interface Design Tool, or on the Menu<span class="formname"> Operation Configuration</span> window in the Menu Tool.</p></td></tr></table>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">&lt;Class Key&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Class key of the view.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">&lt;Object Key&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Object key of an object in the <span class="fieldname">List</span> section.</p>
<p class="tablebodytext">It is repeated for each object in the <span class="fieldname">List</span> section.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">PARAM:END</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Hardcoded text string.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">PARAM:ALL_ACTIVE_OBJ</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Hardcoded text string.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">&lt;Class Key&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Class key of the selected object.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">&lt;Object Key&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Object key of the selected object.</p>
<p class="tablebodytext">Class key and Object key are repeated for each selected object.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">PARAM:END</span> </p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Hardcoded text string.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">PARAM:ALL_ACTIVE_TREE_OBJ</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Hardcoded text string.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">&lt;Class Key&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Class key of the active tree object.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">&lt;Object Key&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Object of the tree object.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">&lt;Layout Group Key&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Key for the layout group template of the tree where the object is selected.</p>
<p class="tablebodytext">Class key, Object key and Layout Group key are repeated for each active tree object.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">PARAM:END</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Hardcoded text string.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">PARAM:OPERATION_NAME</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Hardcoded text string.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">&lt;Operation Name&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Name of the operation which initiated the On Client Request trigger.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="222"><p class="tablebodytext"><span class="unixoutputc">PARAM:END</span></p>
</td>
<td style="border:1px solid #010101;" width="474"><p class="tablebodytext">Hardcoded text string.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="caption">Table 22  Client Parameters Array for Hierarchy Tree Drop Event</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<th class="tableheading" style="border:1px solid #010101;" width="216"><p class="tableheading">Value</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="480"><p class="tableheading">Description</p>
</th>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">PARAM:MOVE</span>_<span class="unixoutputc">COPY</span></p>
</td>
<td style="border:1px solid #010101;" width="480"><p class="tablebodytext">Hardcoded text string.</p>
<p class="tablebodytext">Start of the move or copy operation parameters initiated by a drag and drop on a hierarchy tree (see the <span class="referrals">Configuration Workbench Tools Guide for Singleview Process Engine</span>).</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">&lt;Operation&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="480"><p class="tablebodytext">Type of operation requested.</p>
<p class="tablebodytext">Either MOVE or COPY.  The COPY operation is not supported and may be used in future functionality.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">&lt;Destination Class Key&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="480"><p class="tablebodytext">Class key of destination object, or 0 for the root node.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">&lt;Destination Object Key&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="480"><p class="tablebodytext">Object key of destination object, or 0 for the root node.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">&lt;Source Reference Subset Fact&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="480"><p class="tablebodytext">Reference subset fact for the source tree, or NULL for an association hierarchy tree.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">&lt;Destination Reference Subset Fact&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="480"><p class="tablebodytext">Reference subset fact for the destination tree, or NULL for an association hierarchy tree.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">&lt;Source Parent&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="480"><p class="tablebodytext">Parent fact for the source tree, or NULL for an association hierarchy tree.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">&lt;Destination Parent&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="480"><p class="tablebodytext">Parent fact for the destination tree.</p>
<p class="tablebodytext">For association hierarchy trees, the destination parent fact is the parent fact of the affected reference subset fact definition.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">&lt;Source Tree Parent Class&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="480"><p class="tablebodytext">Class key of the parent object of the source tree; 0 if no parent object exists.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">&lt;Source Tree Parent Object&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="480"><p class="tablebodytext">Object key of the parent object of the source tree; 0 if no parent object exists.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">&lt;Destination Tree Parent Class&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="480"><p class="tablebodytext">Class key of the parent object of the destination tree; 0 if no parent object exists.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">&lt;Destination Tree Parent Object&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="480"><p class="tablebodytext">Object key of the parent object of the destination tree; 0 if no parent object exists.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">&lt;Start Timestamp&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="480"><p class="tablebodytext">Start date-time for the change if the object is date ranged, in the format ddmmyyyyhhnnss.</p>
<p class="tablebodytext">It only contains a value if the destination object is date ranged, and one or more of the source objects are date ranged; otherwise is set to 0).</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">&lt;End Timestamp&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="480"><p class="tablebodytext">End date-time for change if the object is date ranged, in the format ddmmyyyyhhnnss.</p>
<p class="tablebodytext">It only contains a value if the destination object is date ranged, and one or more of the source objects are date ranged; otherwise is set to 0.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">START:SRC_OBJ</span></p>
</td>
<td style="border:1px solid #010101;" width="480"><p class="tablebodytext">Hardcoded text string.  Start of the source object list.</p>
<p class="tablebodytext">The list is terminated by the <span class="unixoutputc">END:SRC_OBJ</span> client parameter.</p>
<p class="tablebodytext">The group of <span class="unixoutputc">&lt;Source Class Key&gt;</span>, <span class="unixoutputc">&lt;Source Object Key&gt;</span>, <span class="unixoutputc">&lt;Source Parent Class Key&gt;</span>, <span class="unixoutputc">&lt;Source Parent Object Key&gt;</span>, and <span class="unixoutputc">&lt;Source Reference Subset Fact Key&gt;</span> elements are repeated for each selected object in the hierarchy tree.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">&lt;Source Class Key&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="480"><p class="tablebodytext">Class Key for selected object.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">&lt;Source Object Key&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="480"><p class="tablebodytext">Object Key for the selected object.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">&lt;Source Parent Class Key&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="480"><p class="tablebodytext">Class Key for the selected object's parent node (used for association hierarchy trees); 0 if not an association hierarchy tree.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">&lt;Source Parent Object Key&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="480"><p class="tablebodytext">Object Key for the selected object's parent node, used for association hierarchy trees; 0 if not an association hierarchy tree.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">&lt;Source Reference Subset Fact Key&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="480"><p class="tablebodytext">Reference subset fact key used to create the source node, used for association hierarchy trees; 0 if not an association hierarchy tree.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">END:SRC_OBJ</span></p>
</td>
<td style="border:1px solid #010101;" width="480"><p class="tablebodytext">Hardcoded text string.  End of the source object list.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">PARAM:END</span></p>
</td>
<td style="border:1px solid #010101;" width="480"><p class="tablebodytext">Hardcoded text string.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">PARAM:OPERATION_NAME</span></p>
</td>
<td style="border:1px solid #010101;" width="480"><p class="tablebodytext">Hardcoded text string.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">&lt;Operation Name&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="480"><p class="tablebodytext">Name of the operation which initiated the On Client Request trigger.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">PARAM:END</span></p>
</td>
<td style="border:1px solid #010101;" width="480"><p class="tablebodytext">Hardcoded text string.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Example</p>
<p class="bodytext">On Client Request trigger for a sales order:</p>
<pre class="unixoutputp">{<br>    # the current object should be the highlighted<br>    # entry in the Available Products grid<br>    # which references the ProdStruc Class</pre>
<pre class="unixoutputp">    var Count&amp; := 1;<br>    var OrderCount&amp; := 0;</pre>
<pre class="unixoutputp">    # find the context object parameter<br>    while ClientParamGet$(Count&amp;) &lt;&gt; 'PARAM:CONTEXT_OBJ' do{<br>        Count&amp;++;<br>    }</pre>
<pre class="unixoutputp">    # get the context object<br>    Count&amp;++;<br>    var SelectedProduct@ := <br>        to_objid@(to_integer(ClientParamGet$(Count&amp;)),<br>        to_integer(ClientParamGet$(Count&amp;+1)));<br>    Count&amp; += 2;</pre>
<pre class="unixoutputp">    # find the active object parameter<br>    while ClientParamGet$(Count&amp;) &lt;&gt; 'PARAM:ALL_ACTIVE_OBJ' do{<br>        Count&amp;++;<br>    }<br>    Count&amp;++;</pre>
<pre class="unixoutputp">    # get the number of Orders in the active objects list<br>    while ClientParamGet$(Count&amp;) &lt;&gt; 'PARAM:END' do {<br>        var ObjId@ := to_objid@(to_integer(ClientParamGet$(Count&amp;)),<br>          to_integer(ClientParamGet$(Count&amp;+1)));<br>        var Class@ :=  ClassGet@(ObjId@);<br>        if (Class@ = Class:Order@) then {<br>            OrderCount&amp; ++;<br>        }</pre>
<pre class="unixoutputp">        # move to the next class/key pair in the active object list<br>        Count&amp; += 2;<br>    }<br>}</pre>


<br><div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="39892.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="39893.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Online Help for Configuration Workbench for Singleview Process Engine 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div></body>
</html>


