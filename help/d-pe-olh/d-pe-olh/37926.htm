<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title> ObjectGetByName@() </title>
<script type="text/javascript" src="open_parent.js"></script>
<link rel="stylesheet" type="text/css" href="pkc.css">
<link rel="stylesheet" type="text/css" href="stylesheet.css">
<meta name="description" content="Online Help for Configuration Workbench for Singleview Process Engine 9.1 ">
<script language="javascript" type="text/javascript" src="dhtml_toc.js"></script>
<script language="JavaScript">
<!--

document.onkeydown = checkChangePage;
function checkChangePage(e)
{
   if (!e) var e = window.event;
   // Don't put the following into the first page
   if ((e.ctrlKey && (e.keyCode == 37))) {
      // Ctrl-Left Arrow was pressed or Page up key pressed at the top of the page
      document.location.href = "52838.htm";
   } else
   // Don't put the following into the late page for a document
   if ((e.ctrlKey && (e.keyCode == 39))) {
      // Ctrl-Right Arrow was pressed or Page down key pressed and at the bottom of the page
      document.location.href = "9425.htm";
   }
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function printpage()
{
	window.print();
}
//-->
</script>
</head>
<body onload="loadParent();MM_preloadImages('left_down.gif','right_down.gif','index_down.gif','contents_down.gif','search_down.gif','print_down.gif');if (isTOCLoaded()) {expand('57331');expand('11011');highlight('37926')}">
<div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="52838.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="9425.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Online Help for Configuration Workbench for Singleview Process Engine 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%">
<h3 class="heading3">ObjectGetByName@()</h3>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'ObjectGetByName@()' (37926)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="syntaxheading">Syntax</p>
<pre class="unixinputp">ObjectGetByName@(    ClassOid@,    FactOid@,    ObjectName$)</pre>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Description</p>
<p class="bodytext">Retrieves the ID of the object with the specified value (<span class="unixoutputc">ObjectName$</span>) for the specified text fact (<span class="unixoutputc">FactOid@</span>) and its class object ID (<span class="unixoutputc">ClassOid@</span>).</p>
<p class="syntaxheading">Parameters</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td class="tableheading" style="border:1px solid #010101;" width="120"><p class="tableheading">Parameter</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="576"><p class="tableheading">Description</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext"><span class="unixoutputc">ClassOid@</span></p>
</td>
<td style="border:1px solid #010101;" width="576"><p class="tablebodytext">OID of the class in which to look up the object.</p>
<p class="tablebodytext">Specify the <span class="unixoutputc">CLS_FACT</span> constant to use the <span class="unixoutputc">ObjectName$</span> parameter to retrieve facts objects.</p>
<p class="tablebodytext">The OID of the class is not mandatory when retrieving fact-based objects.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext"><span class="unixoutputc">FactOid@</span></p>
</td>
<td style="border:1px solid #010101;" width="576"><p class="tablebodytext">OID of the fact in which to look up the value of <span class="unixoutputc">ObjectName$</span> in and must reference a text fact.</p>
<p class="tablebodytext">If <span class="unixoutputc">null@</span> is specified, the Name fact of the given class is used. <span class="unixoutputc">null@</span> is usually specified for <span class="unixoutputc">FactOid@</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext"><span class="unixoutputc">ObjectName$</span></p>
</td>
<td style="border:1px solid #010101;" width="576"><p class="tablebodytext">Name of the object to look up.</p>
<p class="tablebodytext">If <span class="unixoutputc">CLS_FACT</span> is specified in the <span class="unixoutputc">ClassOid@</span> parameter, <span class="unixoutputc">ObjectName$</span> must be specified using the format <span class="unixoutputc">Class.Fact</span> to retrieve a fact object (for example, <span class="unixoutputc">Contact.Account_Balance</span>).</p>
<p class="tablebodytext">It is valid to specify a <span class="unixoutputc">null$</span> or empty string.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Returns</p>
<p class="bodytext">OID of the found object.  If the object is not found, the function call is successful, but no object is returned and result is <span class="unixoutputc">null@</span>.  If more than one object is found, an exception is raised.</p>
<p class="syntaxheading">Remarks</p>
<p class="bodytext">The function can be used for both non-fact-based and fact-based classes, but excludes remote keyless classes.</p>
<p class="bodytext">If the <span class="unixoutputc">FactOid@</span> and <span class="unixoutputc">ObjectName$</span> parameters are null, the function searches for an object that has an empty Name fact.</p>
<p class="bodytext">If the object belongs to a remote keyless class, an exception is raised and an error message is registered.  The exception may be caught in a try-except expression, if necessary.</p>
<p class="syntaxheading">Examples</p>
<p class="bodytext">Retrieve a fact object (for example, the Account_Balance fact object in the Contact class):</p>
<pre class="unixoutputp">{<br>    var ResultOid@;<br>    var ClassOid@;<br>    try{<br>        # Get the 'Contact' object's 'Account_Balance' fact<br>        ResultOid@ := ObjectGetByName@(Class:Fact@, null@, 'Contact.Account_Balance');<br>        if (ResultOid@ != null@){<br>            print(to_string(ResultOid@));<br>            print('ObjectGetByName successful');<br>        } else {<br>            print('Object not found');<br>        }<br>    }except {<br>            print('ObjectGetByName failed');<br>            print(error_message());<br>    }<br>}</pre>
<p class="bodytext">Retrieve a non-fact-based object (for example, the <span class="unixoutputc">Case</span> class object):</p>
<pre class="unixoutputp">{<br>    var ResultOid@;<br>    var ClassOid@;<br>    try{<br>        # Get the class object by name 'Case'<br>        ResultOid@ :=ObjectGetByName@(Class:Class@, null@, 'Case');<br>        if (ResultOid@!=null@){<br>            print(to_string(ResultOid@));<br>            print('ObjectGetByName successful');<br>        } else {<br>            print('Object not found');<br>        }<br>    } except {<br>            print('ObjectGetByName failed');<br>            print(error_message());<br>    }<br>}</pre>
<p class="bodytext">Retrieve a fact-based object (for example, the object in the Language class where <span class="unixoutputc">ISO_Code</span> equal 'en'):</p>
<pre class="unixoutputp">{<br>    var ResultOid@;<br>    var ClassOid@;<br>    try{<br>        # Get the language object where ISO_Code equals english<br>        ResultOid@ :=ObjectGetByName@(null@, Fact:Language.ISO_Code@, 'en');<br>        if (ResultOid@!=null@){<br>            print(to_string(ResultOid@)); <br>            print('ObjectGetByName successful');<br>        } else {<br>            print('Object not found');<br>        }<br>    } except {<br>            print('ObjectGetByName failed');<br>            print(error_message());<br>    }<br>}</pre>
<p class="bodytext">Retrieve a dynamic object (for example, the Case object):</p>
<pre class="unixoutputp">{<br>    var ResultOid@;<br>    var ObjOid@;<br>    try{<br>        # Get the case object by name 'C\51'<br>        ResultOid@ :=ObjectGetByName@(null@, Fact:Case.Name@, 'C\51');<br>        if (ResultOid@!=null@){<br>            print(to_string(ResultOid@));<br>            print('ObjectGetByName successful');<br>        } else {<br>            print('Object not found');<br>        }<br>    } except {<br>        print('ObjectGetByName failed');<br>        print(error_message());<br>    }<br>}</pre>


<br><div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="52838.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="9425.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Online Help for Configuration Workbench for Singleview Process Engine 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div></body>
</html>


