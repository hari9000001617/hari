<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title> EPM Function Syntax </title>
<script type="text/javascript" src="open_parent.js"></script>
<link rel="stylesheet" type="text/css" href="pkc.css">
<link rel="stylesheet" type="text/css" href="stylesheet.css">
<meta name="description" content="Online Help for Singleview Convergent Billing 9.1 ">
<script language="javascript" type="text/javascript" src="dhtml_toc.js"></script>
<script language="JavaScript">
<!--

document.onkeydown = checkChangePage;
function checkChangePage(e)
{
   if (!e) var e = window.event;
   // Don't put the following into the first page
   if ((e.ctrlKey && (e.keyCode == 37))) {
      // Ctrl-Left Arrow was pressed or Page up key pressed at the top of the page
      document.location.href = "1633.htm";
   } else
   // Don't put the following into the late page for a document
   if ((e.ctrlKey && (e.keyCode == 39))) {
      // Ctrl-Right Arrow was pressed or Page down key pressed and at the bottom of the page
      document.location.href = "1637.htm";
   }
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function printpage()
{
	window.print();
}
//-->
</script>
</head>
<body onload="loadParent();MM_preloadImages('left_down.gif','right_down.gif','index_down.gif','contents_down.gif','search_down.gif','print_down.gif');if (isTOCLoaded()) {expand('1633');expand('4501');highlight('1635')}">
<div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="1633.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="1637.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Online Help for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%">
<h3 class="heading3">EPM Function Syntax</h3>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'EPM Function Syntax' (1635)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="bodytext">The syntax for defining a function is:</p>
<pre class="unixinputp">FunctionName&lt;T&gt;([param1&lt;T1&gt;, param2&lt;T2&gt;, …, paramN&lt;Tn&gt;]) = FunctionBody</pre>
<p class="bodytext">where:</p>
<table class="tableintopic" width="636" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext"><span class="unixoutputc">FunctionName</span></p>
</td>
<td style="border:1px solid #010101;" width="504"><p class="tablebodytext">Name for the function.  Excluding all return type characters, the name can have a length of up to 64 characters.  The first character of a function name must be an upper or lower case letter or the '<span class="unixoutputc">_</span>' character.  Subsequent characters can also include numbers, and the '<span class="unixoutputc">.</span>' and '<span class="unixoutputc">:</span>' characters.</p>
<p class="tablebodytext">The name must be unique for the date range of the function when compared to all other variables (for example, functions, derived attributes, subtotals, tariffs, and direct variables).  The rules for naming are:</p>
<ul class="tablelistbullet"><li class="tablelistbullet">For a scalar data type: <ul class="tablelistdashbullet2"><li class="tablelistdashbullet2">The name, data type, and interface number combination must be unique when compared to other functions.</li><li class="tablelistdashbullet2">The name and data type combination must be unique when compared to other (non-function) variables.</li></ul></li><li class="tablelistbullet">For a hash type, the name (excluding the data type) must be unique when compared to other hash type variables.</li><li class="tablelistbullet">For an array type, the name (excluding the data type) must be unique when compared to other array type variables.</li></ul></td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext"><span class="unixoutputc">&lt;T&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="504"><p class="tablebodytext">Type declaration character that indicates the <a id="h1638" class="jump" title="Data Types" href="1639.htm" target="_self">type of data</a> the function returns.  A <span class="unixoutputc">&lt;T&gt;</span> in a documented function name, instead of a return character, indicates that more than one function exists with this function name, each having a different return type.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext"><span class="unixoutputc">(param1</span></p>
<p class="tablebodytext"><span class="unixoutputc">&lt;T1&gt;, ..)</span></p>
</td>
<td style="border:1px solid #010101;" width="504"><p class="tablebodytext">A function may take zero or more parameters.  The parentheses <span class="unixoutputc">( )</span> are always required, even if no parameters are passed.  The parameter type is indicated by the <span class="unixoutputc">&lt;Tn&gt;</span> character.</p>
<p class="tablebodytext">If a function is documented as:</p>
<pre class="unixoutputp"><span class="unixoutputc">MyFunction</span></pre>
<pre class="unixoutputp"><span class="unixoutputc">&amp;(const param1$, const param2&lt;T&gt;)</span></pre>
<p class="tablebodytext">at least two functions exist with the name <span class="unixoutputc">MyFunction&amp;</span>, but with different interfaces (that is, overloaded).  The description for <span class="unixoutputc">param2&lt;T&gt;</span> gives the possible parameter types.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext"><span class="unixoutputc">FunctionBody</span></p>
</td>
<td style="border:1px solid #010101;" width="504"><p class="tablebodytext">Expression block.  The data type returned by the final expression to be evaluated (either the last expression in the function or the expression immediately following the optional return keyword) must match the function's return type.  The function's return type is defined by the function's type declaration character.  </p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="bodytext"><a id="h1636" class="jump" title="Example" href="1637.htm" target="_self">Example</a></p>
<p class="bodytext"><a id="h1650" class="jump" title="Function Overloading" href="1651.htm" target="_self">Functions can be overloaded</a>.</p>


<br><div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="1633.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="1637.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Online Help for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div></body>
</html>


