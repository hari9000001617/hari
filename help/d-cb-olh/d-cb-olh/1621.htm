<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title> Arithmetic Operators </title>
<script type="text/javascript" src="open_parent.js"></script>
<link rel="stylesheet" type="text/css" href="pkc.css">
<link rel="stylesheet" type="text/css" href="stylesheet.css">
<meta name="description" content="Online Help for Singleview Convergent Billing 9.1 ">
<script language="javascript" type="text/javascript" src="dhtml_toc.js"></script>
<script language="JavaScript">
<!--

document.onkeydown = checkChangePage;
function checkChangePage(e)
{
   if (!e) var e = window.event;
   // Don't put the following into the first page
   if ((e.ctrlKey && (e.keyCode == 37))) {
      // Ctrl-Left Arrow was pressed or Page up key pressed at the top of the page
      document.location.href = "4495.htm";
   } else
   // Don't put the following into the late page for a document
   if ((e.ctrlKey && (e.keyCode == 39))) {
      // Ctrl-Right Arrow was pressed or Page down key pressed and at the bottom of the page
      document.location.href = "1647.htm";
   }
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function printpage()
{
	window.print();
}
//-->
</script>
</head>
<body onload="loadParent();MM_preloadImages('left_down.gif','right_down.gif','index_down.gif','contents_down.gif','search_down.gif','print_down.gif');if (isTOCLoaded()) {expand('4501');highlight('1621')}">
<div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="4495.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="1647.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Online Help for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%">
<h2 class="heading2">Arithmetic Operators</h2>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'Arithmetic Operators' (1621)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="syntaxheading">Arithmetic Operators for Scalar Types</p>
<table class="tableintopic" width="642" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<th class="tableheading" style="border:1px solid #010101;" width="84"><p class="tableheading">Operator</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="102"><p class="tableheading">Integer</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="120"><p class="tableheading">Real</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="114"><p class="tableheading">String</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="108"><p class="tableheading">Date</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="114"><p class="tableheading">Blob</p>
</th>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="84"><p class="tablebodytext"><span class="unixoutputc">+</span>, <span class="unixoutputc">+=</span></p>
</td>
<td style="border:1px solid #010101;" width="102"><p class="tablebodytext">Addition</p>
</td>
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">Addition</p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext">Concatenation</p>
</td>
<td style="border:1px solid #010101;" width="108"><p class="tablebodytext">Addition</p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext">Concatenation</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="84"><p class="tablebodytext"><span class="unixoutputc">++</span></p>
</td>
<td style="border:1px solid #010101;" width="102"><p class="tablebodytext">Increment</p>
</td>
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">Increment</p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext">&nbsp;</p>
</td>
<td style="border:1px solid #010101;" width="108"><p class="tablebodytext">&nbsp;</p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="84"><p class="tablebodytext"><span class="unixoutputc">-</span>, <span class="unixoutputc">-=</span></p>
</td>
<td style="border:1px solid #010101;" width="102"><p class="tablebodytext">Subtraction</p>
</td>
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">Subtraction</p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext">&nbsp;</p>
</td>
<td style="border:1px solid #010101;" width="108"><p class="tablebodytext">Subtraction</p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="84"><p class="tablebodytext"><span class="unixoutputc">--</span></p>
</td>
<td style="border:1px solid #010101;" width="102"><p class="tablebodytext">Decrement</p>
</td>
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">Decrement</p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext">&nbsp;</p>
</td>
<td style="border:1px solid #010101;" width="108"><p class="tablebodytext">&nbsp;</p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="84"><p class="tablebodytext"><span class="unixoutputc">*</span>, <span class="unixoutputc">*=</span></p>
</td>
<td style="border:1px solid #010101;" width="102"><p class="tablebodytext">Multiplication</p>
</td>
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">Multiplication</p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext">&nbsp;</p>
</td>
<td style="border:1px solid #010101;" width="108"><p class="tablebodytext">&nbsp;</p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="84"><p class="tablebodytext"><span class="unixoutputc">/</span>, <span class="unixoutputc">/=</span></p>
</td>
<td style="border:1px solid #010101;" width="102"><p class="tablebodytext">Division</p>
</td>
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">Division</p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext">&nbsp;</p>
</td>
<td style="border:1px solid #010101;" width="108"><p class="tablebodytext">&nbsp;</p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="84"><p class="tablebodytext"><span class="unixoutputc">%</span>, <span class="unixoutputc">%=</span></p>
</td>
<td style="border:1px solid #010101;" width="102"><p class="tablebodytext">Modulus</p>
</td>
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">Modulus</p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext">&nbsp;</p>
</td>
<td style="border:1px solid #010101;" width="108"><p class="tablebodytext">&nbsp;</p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="84"><p class="tablebodytext"><span class="unixoutputc">^</span>, <span class="unixoutputc">^=</span></p>
</td>
<td style="border:1px solid #010101;" width="102"><p class="tablebodytext">Power</p>
</td>
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">Power</p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext">&nbsp;</p>
</td>
<td style="border:1px solid #010101;" width="108"><p class="tablebodytext">&nbsp;</p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="84"><p class="tablebodytext"><span class="unixoutputc">::=</span></p>
</td>
<td style="border:1px solid #010101;" width="102"><p class="tablebodytext">Equivalence</p>
</td>
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">Equivalence</p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext">Equivalence</p>
</td>
<td style="border:1px solid #010101;" width="108"><p class="tablebodytext">Equivalence</p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext">Equivalence</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="note">The '++' and '--' operators work in the same way as in the C programming language.  That is, if placed before a variable, they increment or decrement the variable before returning the value, and if placed after the variable, increment or decrement the variable after returning the value. </p></td></tr></table>
<p class="syntaxheading">Notes on the Equivalence Operator</p>
<p class="bodytext">The equivalence operator makes the local variable on the left-hand side of the operator equivalent to the expression on the right-hand side.  Subsequent accesses or assignments to the local variable are equivalent to accessing or assigning to the expression on the right-hand side.</p>
<p class="bodytext">The following restrictions apply to the reference operator:</p>
<ul class="listbullet"><li class="listbullet">The left-hand side must be a local variable.</li><li class="listbullet">The right-hand side must be an expression that returns a variable reference.</li><li class="listbullet">The data types of the left-hand and right-hand sides must match exactly.</li></ul><table class="cautionstyle" width="100%"><tr><td><p class="caution">Caution:</p><p class="caution">An object referenced by an equivalence operator must never be undefined.  After undefining an array or hash containing an element that is referenced, using the reference to update the element's value gives an indeterminate result.</p></td></tr></table>
<p class="syntaxheading">Arithmetic Operators for Composite Types</p>
<table class="tableintopic" width="366" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td class="tableheading" style="border:1px solid #010101;" width="102"><p class="tableheading">Operator</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="144"><p class="tableheading">Array</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="120"><p class="tableheading">Hash</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="102"><p class="tablebodytext"><span class="unixoutputc">+</span>, <span class="unixoutputc">+=</span></p>
</td>
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext">Concatenation</p>
</td>
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">Join</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="bodytext">It is important to be aware of the details of the 'join' operation carried out when hashes are aggregated using the + and += operators.  When two hashes are aggregated within a subtotal, the following algorithm applies:</p>
<ul class="listbullet"><li class="listbullet">If the hashes both contain a specific key, the values from the two hashes for the key are added to form the value for that key in the result hash.</li><li class="listbullet">If only one of the hashes contains a specific key, the value for the key in the original hash becomes the value for that key in the result hash.</li></ul><p class="bodytext">When two hashes are aggregated within an expression, the following algorithm applies:</p>
<ul class="listbullet"><li class="listbullet">If the hashes both contain a specific key, the value from the second hash (the hash on the right side of the operator) becomes the value for that key in the result.</li><li class="listbullet">If only one of the hashes contains a specific key, the value for the key in the original hash becomes the value for that key in the result.</li></ul>


<br><div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="4495.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="1647.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Online Help for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div></body>
</html>


