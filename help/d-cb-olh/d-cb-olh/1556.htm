<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title> Post-commit Expressions </title>
<script type="text/javascript" src="open_parent.js"></script>
<link rel="stylesheet" type="text/css" href="pkc.css">
<link rel="stylesheet" type="text/css" href="stylesheet.css">
<meta name="description" content="Online Help for Singleview Convergent Billing 9.1 ">
<script language="javascript" type="text/javascript" src="dhtml_toc.js"></script>
<script language="JavaScript">
<!--

document.onkeydown = checkChangePage;
function checkChangePage(e)
{
   if (!e) var e = window.event;
   // Don't put the following into the first page
   if ((e.ctrlKey && (e.keyCode == 37))) {
      // Ctrl-Left Arrow was pressed or Page up key pressed at the top of the page
      document.location.href = "1550.htm";
   } else
   // Don't put the following into the late page for a document
   if ((e.ctrlKey && (e.keyCode == 39))) {
      // Ctrl-Right Arrow was pressed or Page down key pressed and at the bottom of the page
      document.location.href = "2423.htm";
   }
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function printpage()
{
	window.print();
}
//-->
</script>
</head>
<body onload="loadParent();MM_preloadImages('left_down.gif','right_down.gif','index_down.gif','contents_down.gif','search_down.gif','print_down.gif');if (isTOCLoaded()) {expand('1535');expand('4501');highlight('1556')}">
<div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="1550.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="2423.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Online Help for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%">
<h3 class="heading3">Post-commit Expressions</h3>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'Post-commit Expressions' (1556)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="bodytext">Post-commit expressions are used to display messages to the user or to execute actions after a form is saved and the data committed to the database.  For example, a post-commit expression can be used to add the name of the record created to the message window that informs the user that changes have been made successfully.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="note">Post-commit expressions are evaluated after the transaction is committed to the database, so if the post-commit expression fails, the transaction is not rolled back.  Therefore, post-commit expressions should not be used as validation expressions in circumstances where failure of the expression means the transaction should not be committed.</p></td></tr></table>
<table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%"><a name="o1554"></a><h3 class="heading3">Validation Expressions</h3>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'Validation Expressions' (1554)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="bodytext">Validation expressions are used to validate user actions by displaying information messages or error messages to the user, or by executing actions.  </p>
<p class="bodytext">Two different types of form validation can be defined:</p>
<ul class="listbullet"><li class="listbullet">Row validation, which is used to validate user actions when a form is saved, but before the data is committed to the database; its main purpose is to validate individual rows.  If the entity being validated is in a list, row validation is executed when moving away from a row that was edited.</li><li class="listbullet">Pre-commit validation, which is used to validate user actions when the form is saved, but before the data is committed to the database; its main purpose is to ensure that all entries in the form are valid as a group.  For example, a specific field may become mandatory as a result of completing another field.  Pre-commit validation also validates the rows included in grids.</li></ul><table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="note">When data is inserted or updated by an external system using the Entity Validation Server (EVS) interface, the validation expressions are executed by the EVS.  In this context, validation expressions can define mapping expressions for derived non-stored attributes that integrate Convergent Billing with external systems.  For more information about the EVS, refer to the <span class="referrals">Configurer's Reference Guide for Singleview Convergent Billing (Vol. 1)</span>.</p></td></tr></table>
<table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%"><a name="o50481"></a><h3 class="heading3">Key Field Functions</h3>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'Key Field Functions' (50481)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="bodytext">Key field functions are executed on sets of keys supplied by external systems to the Entity Validation Server (EVS).  The validation function returns true when supplied valid with keys that identify an instance of the entity that is the subject of the EVS function.  The entity lookup function returns the primary identifiers of a matching entity instance based on the supplied keys.</p>
<p class="bodytext">Key field functions allow the keys that identify entity instances to be configured. When used in conjunction with <a id="h1538" class="jump" title="Attribute Types" href="40866.htm" target="_self">attribute types</a>, the data model of an entity can be tailored for integration with external systems. </p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="note">When a key field function is specified for an entity validation, all entity validations with the same validation table must share the must reference the same function or have no function specified.</p></td></tr></table>
<p class="bodytext">For more information about key field function implementation and default behaviour refer to the <span class="referrals">Configurer's Reference Guide for Singleview Convergent Billing (Vol. 1)</span>.</p>
<table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%"><a name="o22643"></a><h2 class="heading2">EPM to Java Type Mapping</h2>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'EPM to Java Type Mapping' (22643)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="bodytext">EPM parameters do not map directly to Java parameters.  The Java parameters occur in the same order, but have different types.  The mapping also depends on whether parameters are available; this is indicated by the <span class="unixoutputc">var</span> keyword before the parameter name.  The return type is mapped as a non-variable parameter.</p>
<p class="bodytext">EPM functions, whose parameters are of type unknown, must have appropriate overloaded Java functions for all basic types (blob, date, integer, real, and string).  If the EPM function has several parameters of type unknown, Java functions for all permutations of the five basic types for those parameters of type unknown must be written.  </p>
<p class="bodytext">The following table lists EPM type to Java type mappings.</p>
<p class="bodytext">&nbsp;</p>
<p class="caption">EPM to Java Type Mapping</p>
<table class="tableintopic" width="702" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<th class="tableheading" style="border:1px solid #010101;" width="120"><p class="tableheading">EPM Type</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="306"><p class="tableheading">Java Type for Non-variable Parameters</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="276"><p class="tableheading">Java Type for Variable Parameters</p>
</th>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">Blob</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext"><span class="unixoutputc">com.adc.eji.tre.Blob</span></p>
</td>
<td style="border:1px solid #010101;" width="276"><p class="tablebodytext"><span class="unixoutputc">com.adc.eji.tre.TreVarBlob</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">BlobArray</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext"><span class="unixoutputc">java.util.List</span></p>
</td>
<td style="border:1px solid #010101;" width="276"><p class="tablebodytext"><span class="unixoutputc">java.util.List</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">BlobHash</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext"><span class="unixoutputc">java.util.Map</span></p>
</td>
<td style="border:1px solid #010101;" width="276"><p class="tablebodytext"><span class="unixoutputc">java.util.Map</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">Date</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext"><span class="unixoutputc">java.util.Date</span></p>
</td>
<td style="border:1px solid #010101;" width="276"><p class="tablebodytext"><span class="unixoutputc">com.adc.eji.tre.TreVarDate</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">DateTimeArray</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext"><span class="unixoutputc">java.util.List</span></p>
</td>
<td style="border:1px solid #010101;" width="276"><p class="tablebodytext"><span class="unixoutputc">java.util.List</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">DateTimeHash</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext"><span class="unixoutputc">java.util.Map</span></p>
</td>
<td style="border:1px solid #010101;" width="276"><p class="tablebodytext"><span class="unixoutputc">java.util.Map</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext"><span class="unixoutputc">java.lang.Long</span></p>
<p class="tablebodytext">If <span class="unixoutputc">useInteger</span> is set to True at factory creation, <span class="unixoutputc">java.lang.Integer</span> is used.</p>
</td>
<td style="border:1px solid #010101;" width="276"><p class="tablebodytext"><span class="unixoutputc">com.adc.eji.tre.TreVarLong</span></p>
<p class="tablebodytext">If <span class="unixoutputc">useInteger</span> is set to True at factory creation, <span class="unixoutputc">com.adc.eji.tre.TreVarInteger</span> is used.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">IntegerArray</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext"><span class="unixoutputc">java.util.List</span></p>
</td>
<td style="border:1px solid #010101;" width="276"><p class="tablebodytext"><span class="unixoutputc">java.util.List</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">IntegerHash</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext"><span class="unixoutputc">java.util.Map</span></p>
</td>
<td style="border:1px solid #010101;" width="276"><p class="tablebodytext"><span class="unixoutputc">java.util.Map</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">Real</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext"><span class="unixoutputc">java.lang.Double</span></p>
</td>
<td style="border:1px solid #010101;" width="276"><p class="tablebodytext"><span class="unixoutputc">com.adc.eji.tre.TreVarDouble</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">RealArray</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext"><span class="unixoutputc">java.util.List</span></p>
</td>
<td style="border:1px solid #010101;" width="276"><p class="tablebodytext"><span class="unixoutputc">java.util.List</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">RealHash</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext"><span class="unixoutputc">java.util.Map</span></p>
</td>
<td style="border:1px solid #010101;" width="276"><p class="tablebodytext"><span class="unixoutputc">java.util.Map</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">String</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext"><span class="unixoutputc">java.lang.String</span></p>
</td>
<td style="border:1px solid #010101;" width="276"><p class="tablebodytext"><span class="unixoutputc">com.adc.eji.tre.TreVarString</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">StringArray</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext"><span class="unixoutputc">java.util.List</span></p>
</td>
<td style="border:1px solid #010101;" width="276"><p class="tablebodytext"><span class="unixoutputc">java.util.List</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">StringHash</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext"><span class="unixoutputc">java.util.Map</span></p>
</td>
<td style="border:1px solid #010101;" width="276"><p class="tablebodytext"><span class="unixoutputc">java.util.Map</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">Unknown</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext"><span class="unixoutputc">java.lang.Object</span></p>
</td>
<td style="border:1px solid #010101;" width="276"><p class="tablebodytext"><span class="unixoutputc">com.adc.eji.tre.TreVarUnknown</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">UnknownArray</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext"><span class="unixoutputc">java.util.List</span></p>
</td>
<td style="border:1px solid #010101;" width="276"><p class="tablebodytext"><span class="unixoutputc">java.util.List</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="120"><p class="tablebodytext">UnknownHash</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext"><span class="unixoutputc">java.util.Map</span></p>
</td>
<td style="border:1px solid #010101;" width="276"><p class="tablebodytext"><span class="unixoutputc">java.util.Map</span></p>
</td>
</tr>

</table>
<p class="tablebodytext">&nbsp;</p>
<p class="bodytext">The <span class="unixoutputc">-h</span> option can be used to suppress sensitive information from being output to debug or trace files.  If this option is specified when using the static interface, all string and string reference objects are assumed to contain sensitive information, and are wrapped in <span class="unixoutputc">TRE_HIDDEN</span> objects.  If a particular hash or array element needs to be hidden, then the caller must wrap the element in a <span class="unixoutputc">TRE_HIDDEN</span> object before calling the static interface.</p>
<p class="bodytext">When a parameter is hidden in this way, a mask of six asterisks ('<span class="unixoutputc">******</span>') is output to debug or trace files instead of the parameter's value.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="note">No unwrapping of <span class="unixoutputc">TRE_HIDDEN</span> is required; the Java API automatically unwraps any <span class="unixoutputc">TRE_HIDDEN</span> objects returned to it.</p></td></tr></table>


<br><div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="1550.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="2423.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Online Help for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div></body>
</html>


