<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title> expect_cmp() </title>
<script type="text/javascript" src="open_parent.js"></script>
<link rel="stylesheet" type="text/css" href="pkc.css">
<link rel="stylesheet" type="text/css" href="stylesheet.css">
<meta name="description" content="Configurer's Reference Guide for Singleview Convergent Billing 9.1 ">
<script language="javascript" type="text/javascript" src="dhtml_toc.js"></script>
<script language="JavaScript">
<!--

document.onkeydown = checkChangePage;
function checkChangePage(e)
{
   if (!e) var e = window.event;
   // Don't put the following into the first page
   if ((e.ctrlKey && (e.keyCode == 37))) {
      // Ctrl-Left Arrow was pressed or Page up key pressed at the top of the page
      document.location.href = "66973.htm";
   } else
   // Don't put the following into the late page for a document
   if ((e.ctrlKey && (e.keyCode == 39))) {
      // Ctrl-Right Arrow was pressed or Page down key pressed and at the bottom of the page
      document.location.href = "66975.htm";
   }
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function printpage()
{
	window.print();
}
//-->
</script>
</head>
<body onload="loadParent();MM_preloadImages('left_down.gif','right_down.gif','index_down.gif','contents_down.gif','search_down.gif','print_down.gif');if (isTOCLoaded()) {expand('11007');expand('10992');highlight('66974')}">
<div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="66973.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="66975.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%">
<h3 class="heading3">expect_cmp()</h3>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'expect_cmp()' (66974)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="syntaxheading">Syntax</p>
<table class="tableintopic" width="540" cellpadding="2" cellspacing="0" border="0" style="border-collapse:collapse">
<tr align="left" valign="top">
<td class="tableheading" width="238"><p class="tableheading">Interface 1</p>
</td>
<td width="50"><p class="tablebodytext">&nbsp;</p>
</td>
<td class="tableheading" width="252"><p class="tableheading">Interface 2</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="238"><pre class="unixinputp">expect_cmp(    conditional_expression&amp;)</pre>
</td>
<td width="50"><pre class="unixinputp">&nbsp;</pre>
</td>
<td width="252"><pre class="unixinputp">expect_cmp(    tolerance#,<br>    conditional_expression&amp;)</pre>
</td>
</tr>

</table>
<p class="syntaxheading">Description</p>
<p class="bodytext">This function is similar to <span class="unixoutputc"><a id="h66976" class="jump" title="expect()" href="66973.htm" target="_self">expect()</a></span>.  It provides additional information when an expectation failure occurs.</p>
<p class="syntaxheading">Attributes</p>
<table class="tableintopic" width="288" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="180"><p class="tablebodytext"><span class="bold">Application Environment</span></p>
</td>
<td style="border:1px solid #010101;" width="108"><p class="tablebodytext">Any</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="180"><p class="tablebodytext"><span class="bold">Context</span></p>
</td>
<td style="border:1px solid #010101;" width="108"><p class="tablebodytext">Any</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="180"><p class="tablebodytext"><span class="bold">Method</span></p>
</td>
<td style="border:1px solid #010101;" width="108"><p class="tablebodytext">Built-in</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td class="tableheading" style="border:1px solid #010101;" width="210"><p class="tableheading">Parameter</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="486"><p class="tableheading">Description</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="210"><p class="tablebodytext"><span class="unixoutputc">tolerance#</span></p>
</td>
<td style="border:1px solid #010101;" width="486"><p class="tablebodytext">In:  Tolerance to be used for floating point comparisons involving equality.</p>
<p class="tablebodytext">If specified, it must be defined and have a value greater than 0.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="210"><p class="tablebodytext"><span class="unixoutputc">conditional_expression&amp;</span></p>
</td>
<td style="border:1px solid #010101;" width="486"><p class="tablebodytext">In:  Conditional expression to be tested.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Returns</p>
<p class="bodytext">1 if successful; otherwise 0.</p>
<p class="syntaxheading">Remarks</p>
<p class="bodytext">The conditional expression must involve one of the <span class="unixoutputc">=</span>, <span class="unixoutputc">!=</span>, <span class="unixoutputc">&lt;</span>, <span class="unixoutputc">&lt;=</span>, <span class="unixoutputc">&gt;</span>, or <span class="unixoutputc">&gt;=</span> operators, and it must not be able to be evaluated at parse time.  If the expression does not satisfy these constraints, a parse time error is raised.</p>
<p class="bodytext">If the conditional expression evaluates to 0 at runtime, the expectation failure outputs:</p>
<ul class="listbullet"><li class="listbullet">Values of the left and right-hand sides of the comparison</li><li class="listbullet">Expression that failed</li><li class="listbullet">Line and function in which it failed</li><li class="listbullet">Call stack at the point of failure.</li></ul><table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="note">The <span class="unixoutputc">tolerance#</span> parameter:</p><ul class="notelistbullet"><li class="notelistbullet">Cannot be specified with the <span class="unixoutputc">&lt;</span> or <span class="unixoutputc">&gt;</span> operators.</li><li class="notelistbullet">Can only be specified if at least one side of the conditional expression is a real or long value, real or long hash, real or long array, unknown hash, or unknown array. </li></td></tr></table></ul><p class="bodytext">The <span class="unixoutputc">tolerance#</span> parameter is used to test real or long values where the equality relation is allowed within a specified tolerance.  This is necessary when:</p>
<ul class="listbullet"><li class="listbullet">Accumulated rounding errors in the calculations are introduced.</li><li class="listbullet">Conversion between decimal and binary point floating point representations occur.</li></ul><p class="bodytext">For all operators except the <span class="unixoutputc">!=</span> inequality operator, if <span class="unixoutputc">tolerance#</span> is specified, and the conditional expression is True or the absolute value of difference between the left and right-hand sides of the comparison is less than <span class="unixoutputc">tolerance#</span>, the assertion is considered valid, and no error is raised.  </p>
<p class="bodytext">For the inequality operator <span class="unixoutputc">!=</span>, the absolute value of difference between the left- and right-hand sides must be greater than or equal to <span class="unixoutputc">tolerance#</span> for the assertion to be valid.</p>
<p class="bodytext">If a hash or an array is specified, a similar comparison is done for each of their corresponding elements.  If the specified unknown hash or unknown array has some values that are not of type real or long, the tolerance is ignored while comparing those values. </p>
<p class="bodytext">A parse error is raised if an array is compared to a hash.  For information about array to hash comparisons, refer to the <span class="referrals">Configuration Fundamentals Guide for Singleview Convergent Billing</span>.</p>
<p class="bodytext">If an error is raised during the evaluation of the conditional expression, the error is caught and treated as an expectation failure, with 0 being returned.  The error is output in a message that includes the line and function (or expression text) in which the expectation failed, and the current call stack.</p>


<br><div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="66973.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="66975.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div></body>
</html>


