<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title> fCMN_TRECustomerCreate_R&amp;() </title>
<script type="text/javascript" src="open_parent.js"></script>
<link rel="stylesheet" type="text/css" href="pkc.css">
<link rel="stylesheet" type="text/css" href="stylesheet.css">
<meta name="description" content="Configurer's Reference Guide for Singleview Convergent Billing 9.1 ">
<script language="javascript" type="text/javascript" src="dhtml_toc.js"></script>
<script language="JavaScript">
<!--

document.onkeydown = checkChangePage;
function checkChangePage(e)
{
   if (!e) var e = window.event;
   // Don't put the following into the first page
   if ((e.ctrlKey && (e.keyCode == 37))) {
      // Ctrl-Left Arrow was pressed or Page up key pressed at the top of the page
      document.location.href = "26821.htm";
   } else
   // Don't put the following into the late page for a document
   if ((e.ctrlKey && (e.keyCode == 39))) {
      // Ctrl-Right Arrow was pressed or Page down key pressed and at the bottom of the page
      document.location.href = "26823.htm";
   }
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function printpage()
{
	window.print();
}
//-->
</script>
</head>
<body onload="loadParent();MM_preloadImages('left_down.gif','right_down.gif','index_down.gif','contents_down.gif','search_down.gif','print_down.gif');if (isTOCLoaded()) {expand('26797');expand('26796');expand('40664');highlight('26822')}">
<div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="26821.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="26823.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%">
<h4 class="heading4">fCMN_TRECustomerCreate_R&amp;()</h4>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'fCMN_TRECustomerCreate_R&amp;()' (26822)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="syntaxheading">Syntax</p>
<pre class="unixinputp">fCMN_TRECustomerCreate_R&amp;(    l_CustDetails?{})</pre>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Description</p>
<p class="bodytext">Creates a customer node and related customer entities.</p>
<p class="syntaxheading">Attributes</p>
<table class="tableintopic" width="288" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="187"><p class="tablebodytext"><span class="bold">Application Environment</span></p>
</td>
<td style="border:1px solid #010101;" width="101"><p class="tablebodytext">Any</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="187"><p class="tablebodytext"><span class="bold">Context</span></p>
</td>
<td style="border:1px solid #010101;" width="101"><p class="tablebodytext">Any</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td class="tableheading" style="border:1px solid #010101;" width="151"><p class="tableheading">Parameter</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="545"><p class="tableheading">Description</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="151"><p class="tablebodytext"><span class="unixoutputc">l_CustDetails?{}</span></p>
</td>
<td style="border:1px solid #010101;" width="545"><p class="tablebodytext">In:  Hash containing the values for all mandatory and optional fields for the customer and related entities as detailed.</p>
<p class="tablebodytext">For more information, refer to <span class="referrals">Remarks </span>below.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Returns</p>
<p class="bodytext">New customer node ID, if successful; otherwise, an exception is raised.</p>
<p class="syntaxheading">Remarks</p>
<p class="bodytext">The high-level processing of the function is:</p>
<ol class="listnumber"><li class="listnumber">Determine whether the customer node's person exists and insert a new person if required. </li><li class="listnumber">Insert the customer node. </li><li class="listnumber">Insert any extra accounts (not including the main debtors account included as standard) according to entity validation configuration.</li><li class="listnumber">Create the associated customer's contracts.</li><li class="listnumber">Populate valid customer lists.</li><li class="listnumber">Associate and create the customer node's contacts.</li><li class="listnumber">Add any non-standard invoicing methods to the customer node/account, if specified.</li></ol><p class="bodytext">The following diagram displays the Convergent Billing entities created by the function.</p>
<p class="bodytext">&nbsp;</p>
<p class="bodytext"> <img src="26937_customerentities.png" alt="Convergent Billing Entities Created by fCMN_TRECustomerCreate[_R]&amp;()" height="385" width="593" vspace="2" hspace="2" align="bottom" border="0"></p>
<p class="caption">Convergent Billing Entities Created by fCMN_TRECustomerCreate_R&amp;()</p>
<p class="caption">&nbsp;</p>
<p class="bodytext">The following table lists <span class="unixoutputc">l_CustDetails?{}</span> parameter keys.</p>
<p class="bodytext">&nbsp;</p>
<p class="caption">l_CustDetails?{} Parameter Keys</p>
<table class="tableintopic" width="702" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<th class="tableheading" style="border:1px solid #010101;" width="216"><p class="tableheading">Key</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="144"><p class="tableheading">Data Type</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="342"><p class="tableheading">Description</p>
</th>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">{&lt;CUSTOMER_NODE_TRE_V&gt;}</span></p>
</td>
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext">Various, depending on the attribute types in the entity validation for the customer node type.</p>
</td>
<td style="border:1px solid #010101;" width="342"><p class="tablebodytext">Details for the customer node using fields from <span class="unixoutputc">CUSTOMER_NODE_TRE_V</span> with the field name as the <span class="unixoutputc">&lt;CUSTOMER_NODE_TRE_V&gt;</span> hash ID; for example:</p>
<p class="tablebodytext"><span class="unixoutputc">l_CustDetails&amp;{'CUSTOMER_NODE_TYPE_ID'} := 20001;</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">{'PERSON'}{&lt;PERSON_TRE_V&gt;}</span></p>
</td>
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext">Various, depending on the attribute types in the entity validation for the person type.</p>
</td>
<td style="border:1px solid #010101;" width="342"><p class="tablebodytext">Details for the customer's person type using fields from <span class="unixoutputc">PERSON_TRE_V</span> and the field name as the <span class="unixoutputc">&lt;PERSON_TRE_V&gt;</span> hash ID; for example:</p>
<p class="tablebodytext"><span class="unixoutputc">l_CustDetails&amp;{'PERSON'}{'PERSON_TYPE_ID'} := 45;</span></p>
<p class="tablebodytext">This group of fields is mutually exclusive with the customer node's <span class="unixoutputc">PERSON_ID</span> field.  If <span class="unixoutputc">PERSON_ID</span> is not specified, this group of fields can be used to create a new person.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">{'INVOICE_FORMATS'}</span><br><span class="unixoutputc">[&lt;ROW_NR&gt;]{&lt;CUSTOMER_</span><br><span class="unixoutputc">NODE_INV_FORMAT_TRE_V&gt;}</span></p>
</td>
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext">Various, depending on the attribute types in the entity validation for the customer node invoice format.</p>
</td>
<td style="border:1px solid #010101;" width="342"><p class="tablebodytext">Customer's invoice formats using fields from <span class="unixoutputc">CUSTOMER_NODE_INV_FORMAT_TRE_V</span> view using the field name as the <span class="unixoutputc">&lt;CUSTOMER_NODE_INV_FORMAT_TRE_V&gt;</span> hash ID.</p>
<p class="tablebodytext"><span class="unixoutputc">&lt;ROW_NR&gt;</span> is an array of invoice formats from <span class="unixoutputc">0..n</span>.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote"><span class="unixoutputc">ACCOUNT_ID</span> is internally resolved at creation time.</p></td></tr></table>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">{'ACCOUNTS'}[&lt;ROW_NR&gt;]</span><br><span class="unixoutputc">{&lt;ACCOUNT_TRE_V&gt;}</span></p>
</td>
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext">Various, depending on the attribute types in the entity validation for the account type.</p>
</td>
<td style="border:1px solid #010101;" width="342"><p class="tablebodytext">Customer's account details using fields from <span class="unixoutputc">ACCOUNT_TRE_V</span> and the field name as the <span class="unixoutputc">&lt;ACCOUNT_TRE_V&gt;</span> hash ID.</p>
<p class="tablebodytext"><span class="unixoutputc">&lt;ROW_NR&gt;</span> is an array of accounts from <span class="unixoutputc">0..</span>n.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote"><span class="unixoutputc">ACCOUNT_ID</span> is internally resolved at creation time.</p></td></tr></table>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">{'CONTACTS'}[&lt;ROW_NR&gt;]</span><br><span class="unixoutputc">{&lt;PERSON_TRE_V&gt;}</span></p>
</td>
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext">Various, depending on the attribute types in the entity validation for the person type.</p>
</td>
<td style="border:1px solid #010101;" width="342"><p class="tablebodytext">Customer's contact details using fields from <span class="unixoutputc">PERSON_TRE_V </span>using the field name as the <span class="unixoutputc">&lt;PERSON_TRE_V&gt;</span> hash ID.</p>
<p class="tablebodytext"><span class="unixoutputc">&lt;ROW_NR&gt;</span> is an array of contacts from <span class="unixoutputc">0..n</span>.</p>
<p class="tablebodytext">To associate an existing person as a contact for the customer, specify the person ID in <span class="unixoutputc">{'CONTACTS'}[&lt;ROW_NR&gt;]{'PERSON_ID'}</span>.  If <span class="unixoutputc">PERSON_ID</span> is not specified, the <span class="unixoutputc">&lt;PERSON_TRE_V&gt;</span> group of fields can be used to create a new person as a contact.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">{'LISTS'}{&lt;TABLE_NAME&gt;}</span><br><span class="unixoutputc">[&lt;ROW_NR&gt;]{&lt;COLUMN_NAME&gt;}</span></p>
</td>
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext">Various.</p>
<p class="tablebodytext">The list element column's data type is dependent on the attribute type in the entity validation for the derived attribute.</p>
</td>
<td style="border:1px solid #010101;" width="342"><p class="tablebodytext">Lists for the customer.</p>
<p class="tablebodytext"><span class="unixoutputc">&lt;TABLE_NAME&gt;</span> refers to the derived attribute table name (string) located in the <span class="unixoutputc">CUSTOMER_NODE_DA_ARRAY</span> table.</p>
<p class="tablebodytext"><span class="unixoutputc">&lt;COLUMN_NAME&gt;</span> refers to the name of the column for the list, as it is displayed on the <span class="formname">Customer Details</span> form.  The valid values for the column depend on the attribute type used for the column, and they are the same valid values required by the <span class="formname">Customer Details</span> form.</p>
<p class="tablebodytext"><span class="unixoutputc">&lt;ROW_NR&gt;</span> is an array of list rows for the table from <span class="unixoutputc">0..n</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="216"><p class="tablebodytext"><span class="unixoutputc">{'CONTRACTS'}[&lt;ROW_NR&gt;]</span><br><span class="unixoutputc">{&lt;CONTRACT_TRE_V&gt;}</span></p>
</td>
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext">Various, depending on the attribute types in the entity validation for the contract type.</p>
</td>
<td style="border:1px solid #010101;" width="342"><p class="tablebodytext">Customer's contract details using fields from <span class="unixoutputc">CONTRACT_TRE_V</span> using the field name as the <span class="unixoutputc">&lt;CONTRACT_TRE_V&gt;</span> hash ID.</p>
<p class="tablebodytext"><span class="unixoutputc">&lt;ROW_NR&gt;</span> is an array of contracts from <span class="unixoutputc">0..n</span>.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>


<br><div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="26821.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="26823.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div></body>
</html>


