<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title> FileRegisterUpdate&amp;() </title>
<script type="text/javascript" src="open_parent.js"></script>
<link rel="stylesheet" type="text/css" href="pkc.css">
<link rel="stylesheet" type="text/css" href="stylesheet.css">
<meta name="description" content="Configurer's Reference Guide for Singleview Convergent Billing 9.1 ">
<script language="javascript" type="text/javascript" src="dhtml_toc.js"></script>
<script language="JavaScript">
<!--

document.onkeydown = checkChangePage;
function checkChangePage(e)
{
   if (!e) var e = window.event;
   // Don't put the following into the first page
   if ((e.ctrlKey && (e.keyCode == 37))) {
      // Ctrl-Left Arrow was pressed or Page up key pressed at the top of the page
      document.location.href = "53848.htm";
   } else
   // Don't put the following into the late page for a document
   if ((e.ctrlKey && (e.keyCode == 39))) {
      // Ctrl-Right Arrow was pressed or Page down key pressed and at the bottom of the page
      document.location.href = "41468.htm";
   }
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function printpage()
{
	window.print();
}
//-->
</script>
</head>
<body onload="loadParent();MM_preloadImages('left_down.gif','right_down.gif','index_down.gif','contents_down.gif','search_down.gif','print_down.gif');if (isTOCLoaded()) {expand('11007');expand('10992');highlight('55225')}">
<div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="53848.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="41468.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%">
<h3 class="heading3">FileRegisterUpdate&amp;()</h3>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'FileRegisterUpdate&amp;()' (55225)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="syntaxheading">Syntax</p>
<pre class="unixinputp">FileRegisterUpdate&amp;(    FileRegisterId&amp;,    var LastModified~,    const FieldNames$[],    FieldValues?[])</pre>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Description</p>
<p class="bodytext">Updates a File Processing Register record.</p>
<p class="syntaxheading">Attributes</p>
<table class="tableintopic" width="288" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="187"><p class="tablebodytext"><span class="bold">Application Environment</span></p>
</td>
<td style="border:1px solid #010101;" width="101"><p class="tablebodytext">Any</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="187"><p class="tablebodytext"><span class="bold">Context</span></p>
</td>
<td style="border:1px solid #010101;" width="101"><p class="tablebodytext">Any</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="187"><p class="tablebodytext"><span class="bold">Method</span></p>
</td>
<td style="border:1px solid #010101;" width="101"><p class="tablebodytext">Local</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td class="tableheading" style="border:1px solid #010101;" width="144"><p class="tableheading">Parameter</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="552"><p class="tableheading">Description</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="unixoutputc">FileRegisterId&amp;</span></p>
</td>
<td style="border:1px solid #010101;" width="552"><p class="tablebodytext">In:  ID of the record to be updated.</p>
<p class="tablebodytext">It must exist.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="unixoutputc">LastModified~</span></p>
</td>
<td style="border:1px solid #010101;" width="552"><p class="tablebodytext">In:  Date-time the record was last modified before this update.</p>
<p class="tablebodytext">Out:  Date-time when the record was updated.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="unixoutputc">FieldNames$[]</span></p>
</td>
<td style="border:1px solid #010101;" width="552"><p class="tablebodytext">In:  Names of the fields from the <span class="unixoutputc">FILE_REGISTER_TRE_V</span> view whose values are to be updated. </p>
<p class="tablebodytext">If specified, the following fields cannot be specified:</p>
<ul class="tablelistbullet"><li class="tablelistbullet"><span class="unixoutputc">FILE_PROCESSING_TYPE_CODE</span></li><li class="tablelistbullet"><span class="unixoutputc">FILE_REGISTERED_DATE</span></li><li class="tablelistbullet"><span class="unixoutputc">FILE_REGISTER_ID</span></li><li class="tablelistbullet"><span class="unixoutputc">LAST_MODIFIED</span></li><li class="tablelistbullet"><span class="unixoutputc">INSTANCE</span></li><li class="tablelistbullet"><span class="unixoutputc">OPERATOR_ID</span></li><li class="tablelistbullet"><span class="unixoutputc">PARTITION_NR</span>.</li></ul></td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="unixoutputc">FieldValues?[]</span></p>
</td>
<td style="border:1px solid #010101;" width="552"><p class="tablebodytext">Out:  Field values in the same order in which the field names are specified in the <span class="unixoutputc">FieldNames$[]</span>.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Returns</p>
<p class="bodytext">1 if successful; otherwise, an error is raised.</p>
<p class="syntaxheading">Remarks</p>
<p class="bodytext"><span class="unixoutputc">FileRegisterUpdate&amp;()</span> maintains the physical file, automatically moving, renaming, or deleting files based on the values set in <span class="unixoutputc">PHYSICAL_FILENAME</span> and <span class="unixoutputc">PHYSICAL_DIRECTORY</span>.  Setting <span class="unixoutputc">REGISTER_ONLY_IND_CODE</span> to 1, ensures that the function does not update the physical file and only updates the File Processing Register record. </p>
<p class="bodytext">The following table lists fields that are set to their default values.</p>
<p class="bodytext">&nbsp;</p>
<p class="caption">Fields Default Values</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td class="tableheading" style="border:1px solid #010101;" width="240"><p class="tableheading">Field Name</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="456"><p class="tableheading">Default Value</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="240"><p class="tablebodytext"><span class="unixoutputc">FILE_PROCESSING_STATUS_CODE</span></p>
</td>
<td style="border:1px solid #010101;" width="456"><p class="tablebodytext">Status cannot be set to 1 (Registered).</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="240"><p class="tablebodytext"><span class="unixoutputc">PROCESSING_START_DATE</span></p>
</td>
<td style="border:1px solid #010101;" width="456"><p class="tablebodytext"><span class="unixoutputc">current_date()</span>, if <span class="unixoutputc">FILE_PROCESSNG_STATUS_CODE</span> is set to 2 (In Progress) for the first time.</p>
<p class="tablebodytext">If <span class="unixoutputc">FILE_PROCESSING_STATUS_CODE</span> is set to 4 (Complete) and no <span class="unixoutputc">PROCESSING_START_DATE</span> is specified, <span class="unixoutputc">PROCESSING_START_DATE</span> defaults to <span class="unixoutputc">PROCESSING_END_DATE</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="240"><p class="tablebodytext"><span class="unixoutputc">PROCESSING_END_DATE</span></p>
</td>
<td style="border:1px solid #010101;" width="456"><p class="tablebodytext"><span class="unixoutputc">current_date()</span>, if <span class="unixoutputc">FILE_PROCESSING_STATUS</span> is set to 3 (Errored) or 4 (Complete).</p>
<p class="tablebodytext">It cannot have a value if <span class="unixoutputc">FILE_PROCESSING_STATUS_CODE</span> is set to 1 (Registered) or 2 (In Progress).</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="240"><p class="tablebodytext"><span class="unixoutputc">LAST_PROCESSED_DATE</span></p>
</td>
<td style="border:1px solid #010101;" width="456"><p class="tablebodytext"><span class="unixoutputc">current_date()</span>, if <span class="unixoutputc">PROCESSING_START_DATE</span> is populated and <span class="unixoutputc">FILE_PROCESSING_STATUS_CODE</span> is set to 2 (In Progress).</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="240"><p class="tablebodytext"><span class="unixoutputc">ERROR_MESSAGE_ID</span></p>
<p class="tablebodytext"><span class="unixoutputc">ERROR_MESSAGE</span></p>
</td>
<td style="border:1px solid #010101;" width="456"><p class="tablebodytext">NULL, if defined in the record, and <span class="unixoutputc">FILE_PROCESSING_STATUS_CODE</span> is not set to 3 (Errored).</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="bodytext">If <span class="unixoutputc">ERROR_MESSAGE_ID</span> is specified, <span class="unixoutputc">ERROR_MESSAGE</span> must be specified and <span class="unixoutputc">FILE_PROCESSING_STATUS_CODE</span> set to 3 (Errored). </p>
<p class="bodytext"><span class="unixoutputc">RECORDS_PROCESSED</span>, <span class="unixoutputc">RECORDS_ERRORED</span>, <span class="unixoutputc">RECORDS_SKIPPED</span>, and <span class="unixoutputc">RECORDS_SUCCESSFUL</span> can be set only if <span class="unixoutputc">FILE_PROCESSING_STATUS_CODE</span> is set to 1 (Registered), or 2 (In Progress).</p>
<p class="bodytext">If <span class="unixoutputc">PHYSICAL_FILENAME</span> is set to NULL, <span class="unixoutputc">PHYSICAL_DIRECTORY</span> must be set to NULL.  <span class="unixoutputc">PHYSICAL_FILENAME</span> can contain one or more of the file tags listed in the table below.</p>
<p class="bodytext"><span class="unixoutputc">CONTROL_FILENAME</span>:</p>
<ul class="listbullet"><li class="listbullet">Must contain one of the following tags:<ul class="listdashbullet2"><li class="listdashbullet2"><span class="unixoutputc">&lt;basename&gt;</span></li><li class="listdashbullet2"><span class="unixoutputc">&lt;filename&gt;</span>.</li></ul></li><li class="listbullet">Can contain both tags or multiple instances of the same tag.</li></ul><p class="bodytext">The following table describes tag behaviour.</p>
<p class="bodytext">&nbsp;</p>
<p class="caption">File Tags</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td class="tableheading" style="border:1px solid #010101;" width="108"><p class="tableheading">Tag</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="588"><p class="tableheading">Behaviour</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="108"><p class="tablebodytext"><span class="unixoutputc">&lt;basename&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="588"><p class="tablebodytext">The control file name replaces <span class="unixoutputc">&lt;basename&gt;</span> with <span class="unixoutputc">FILENAME</span>, but does not include the extension.</p>
<p class="tablebodytext">For example, if <span class="unixoutputc">FILENAME</span> is <span class="unixoutputc">processing01.xml</span> and <span class="unixoutputc">CONTROL_FILENAME</span> or <span class="unixoutputc">TEMPORARY_FILENAME</span> is <span class="unixoutputc">&lt;basename&gt;.ctl</span>, the resulting file name is <span class="unixoutputc">processing01.ctl</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="108"><p class="tablebodytext"><span class="unixoutputc">&lt;filename&gt;</span></p>
</td>
<td style="border:1px solid #010101;" width="588"><p class="tablebodytext">The control file name replaces <span class="unixoutputc">&lt;filename&gt;</span> with <span class="unixoutputc">FILENAME</span> and includes the extension.</p>
<p class="tablebodytext">For example, if <span class="unixoutputc">FILENAME</span> is <span class="unixoutputc">processing01.xml</span> and <span class="unixoutputc">CONTROL_FILENAME</span> or <span class="unixoutputc">TEMPORARY_FILENAME</span> is <span class="unixoutputc">&lt;filename&gt;.ctl</span>, the resulting file name is <span class="unixoutputc">processing01.xml.ctl</span>. </p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="bodytext">The following operations are performed: </p>
<ul class="listbullet"><li class="listbullet">If <span class="unixoutputc">PROCESS_IDENTIFIER</span> is not set to 2 (In Progress), or 1 (Registered), it is set to NULL.</li><li class="listbullet">If <span class="unixoutputc">REGISTER_ONLY_IND_CODE</span> is set to 0 (FALSE):<ul class="listdashbullet2"><li class="listdashbullet2">If <span class="unixoutputc">FILE_PROCESSING_STATUS_CODE</span> is set to 6 (Purged), <span class="unixoutputc">PHYSICAL_FILENAME</span> and <span class="unixoutputc">PHYSICAL_DIRECTORY</span> are set to NULL.</li><li class="listdashbullet2">If <span class="unixoutputc">PHYSICAL_DIRECTORY</span> is updated to a non-NULL value, <span class="unixoutputc"><a id="h57868" class="jump" title="FileMakeDirectory&amp;()" href="57842.htm" target="_self">FileMakeDirectory&amp;()</a></span> is called to ensure that the directory exists, and create it if it does not exist, using the updated <span class="unixoutputc">DIRECTORY_PERMISSION</span> and <span class="unixoutputc">FILE_GROUP</span> values.  The group and the directory's permissions are set only when the directory is created. </li><li class="listdashbullet2">If <span class="unixoutputc">PHYSICAL_FILENAME</span> is specified and <span class="unixoutputc">FILE_CHECK_CODE</span> is set to:<ul class="listdashbullet3"><li class="listdashbullet3">1 (Check if file does not exist), <span class="unixoutputc"><a id="h57869" class="jump" title="FileExists&amp;()" href="57841.htm" target="_self">FileExists&amp;()</a></span> is called to check that new file path does not exist.</li><li class="listdashbullet3">2 (Check if file exists), <span class="unixoutputc"><a id="h57869_2" class="jump" title="FileExists&amp;()" href="57841.htm" target="_self">FileExists&amp;()</a></span> is called to check that new file path exists.</li></ul></li><li class="listdashbullet2">If <span class="unixoutputc">PHYSICAL_FILENAME</span> is updated from a non-NULL value to NULL, <span class="unixoutputc"><a id="h57869_3" class="jump" title="FileExists&amp;()" href="57841.htm" target="_self">FileExists&amp;()</a></span> is called to check that the old file path exists.  If it does, <span class="unixoutputc"><a id="h57870" class="jump" title="FileDelete&amp;()" href="57840.htm" target="_self">FileDelete&amp;()</a></span> is called to remove the file path.</li><li class="listdashbullet2">If the file path (combination of <span class="unixoutputc">PHYSICAL_DIRECTORY</span> and <span class="unixoutputc">PHYSICAL_FILENAME</span>) is updated, <span class="unixoutputc"><a id="h57869_4" class="jump" title="FileExists&amp;()" href="57841.htm" target="_self">FileExists&amp;()</a></span> is called to check that either the old file path or the new file path exist. </li></ul></li><li class="listbullet">If <span class="unixoutputc">CONTROL_FILENAME</span> if specified and <span class="unixoutputc">CONTROL_FILE_OPERATION_CODE</span> is set to:<ul class="listdashbullet2"><li class="listdashbullet2">1 (Check if file does not exist), <span class="unixoutputc"><a id="h57869_5" class="jump" title="FileExists&amp;()" href="57841.htm" target="_self">FileExists&amp;()</a></span> is called to check that the control file path exists, and raise an error if it does exist.</li><li class="listdashbullet2">2 (Check if file exists), <span class="unixoutputc"><a id="h57869_6" class="jump" title="FileExists&amp;()" href="57841.htm" target="_self">FileExists&amp;()</a></span> is called to check that the control file path exists, and raise an error if it does not exist.</li><li class="listdashbullet2">3 (Delete file if it exists), <span class="unixoutputc"><a id="h57870_2" class="jump" title="FileDelete&amp;()" href="57840.htm" target="_self">FileDelete&amp;()</a></span> is called to delete existing control files.</li><li class="listdashbullet2">4 (Create Control File), <span class="unixoutputc"><a id="h55822" class="jump" title="FileChecksum&amp;()" href="55819.htm" target="_self">FileChecksum&amp;()</a></span> is called to calculate the checksum based on the <span class="unixoutputc">CHECKSUM_TYPE_CODE</span> of the processed file.</li><li class="listdashbullet2">5 (Verify Control File), <span class="unixoutputc"><a id="h57869_7" class="jump" title="FileExists&amp;()" href="57841.htm" target="_self">FileExists&amp;()</a></span> is called to check that control file path exists, and raise an error if the path does not exist. If <span class="unixoutputc">CHECKSUM_TYPE_CODE</span> is specified, checks that the checksum in the control file is correct; if incorrect, an error is raised.</li></ul></li><li class="listbullet">If <span class="unixoutputc">FILE_PROCESSING_STATUS_CODE</span> is set to 4 (Complete):<ul class="listdashbullet2"><li class="listdashbullet2">If <span class="unixoutputc">CONTROL_FILENAME</span> is specified, <span class="unixoutputc"><a id="h57873" class="jump" title="FileWrite&amp;()" href="49037.htm" target="_self">FileWrite&amp;()</a></span> is called to create the control file in <span class="unixoutputc">PHYSICAL_DIRECTORY</span>.  If <span class="unixoutputc">CHECKSUM</span> is specified, it is written to the control file; otherwise, the control file is empty. </li><li class="listdashbullet2">If <span class="unixoutputc">CHECKSUM_TYPE_CODE</span> is specified, the checksum is calculated after the file operations (rename or move) have been performed.  If the file has been deleted or the checksum cannot be calculated, the update is done but the checksum calculation is ignored.</li></ul></li><li class="listbullet"><span class="unixoutputc"><a id="h58768" class="jump" title="FilePermissionsAndGroup&amp;()" href="58731.htm" target="_self">FilePermissionsAndGroup&amp;()</a></span> is called to update the file permissions and group name on the appropriate file.<ul class="listbullet2"><li class="listbullet2">For physical files, the function is called if:<ul class="listdashbullet3"><li class="listdashbullet3">The updated physical file path exists.</li><li class="listdashbullet3"><span class="unixoutputc">FILE_PERMISSION</span> or <span class="unixoutputc">FILE_GROUP</span> are specified.</li><li class="listdashbullet3">The physical file is moved or renamed.</li></ul></li><li class="listbullet2">For control files, the function is called if:<ul class="listdashbullet3"><li class="listdashbullet3">Control file path exists with <span class="unixoutputc">CONTROL_FILENAME</span> specified.</li><li class="listdashbullet3"><span class="unixoutputc">FILE_PERMISSION</span> or <span class="unixoutputc">FILE_GROUP</span> are specified.</li><li class="listdashbullet3">The control file is created, moved, or renamed.</li></ul></li></ul></li></ul>


<br><div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="53848.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="41468.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div></body>
</html>


