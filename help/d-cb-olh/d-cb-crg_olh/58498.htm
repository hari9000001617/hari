<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title> SCHEDULED_FUNCTION_TRE_V </title>
<script type="text/javascript" src="open_parent.js"></script>
<link rel="stylesheet" type="text/css" href="pkc.css">
<link rel="stylesheet" type="text/css" href="stylesheet.css">
<meta name="description" content="Configurer's Reference Guide for Singleview Convergent Billing 9.1 ">
<script language="javascript" type="text/javascript" src="dhtml_toc.js"></script>
<script language="JavaScript">
<!--

document.onkeydown = checkChangePage;
function checkChangePage(e)
{
   if (!e) var e = window.event;
   // Don't put the following into the first page
   if ((e.ctrlKey && (e.keyCode == 37))) {
      // Ctrl-Left Arrow was pressed or Page up key pressed at the top of the page
      document.location.href = "50772.htm";
   } else
   // Don't put the following into the late page for a document
   if ((e.ctrlKey && (e.keyCode == 39))) {
      // Ctrl-Right Arrow was pressed or Page down key pressed and at the bottom of the page
      document.location.href = "75357.htm";
   }
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function printpage()
{
	window.print();
}
//-->
</script>
</head>
<body onload="loadParent();MM_preloadImages('left_down.gif','right_down.gif','index_down.gif','contents_down.gif','search_down.gif','print_down.gif');if (isTOCLoaded()) {expand('7526');highlight('58498')}">
<div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="50772.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="75357.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%">
<h2 class="heading2">SCHEDULED_FUNCTION_TRE_V</h2>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'SCHEDULED_FUNCTION_TRE_V' (58498)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="bodytext">The <span class="unixoutputc">SCHEDULED_FUNCTION_TRE_V</span> view defines scheduled functions.</p>
<p class="bodytext">A scheduled function is an EPM function that is scheduled to run at a specified date-time. Scheduled functions are run by the Scheduled Function Monitor (SFM) process.</p>
<p class="syntaxheading">Column Definitions</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<th class="tableheading" style="border:1px solid #010101;" width="186"><p class="tableheading">Column Name</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="132"><p class="tableheading">Properties</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="378"><p class="tableheading">Description</p>
</th>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">SCHEDULED_FUNCTION_ID</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">NUMBER (15)</p>
<p class="tablebodytext">Not null</p>
<p class="tablebodytext">Read-only</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">ID of a scheduled function instance.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">LAST_MODIFIED</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">DATE</p>
<p class="tablebodytext">Not null</p>
<p class="tablebodytext">Read-only</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Date-time the record was last modified.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">OPERATOR_ID</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">NUMBER (8)</p>
<p class="tablebodytext">Not null</p>
<p class="tablebodytext">Read-only</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">User who last modified the record.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">OPERATOR_LAST_MODIFIED</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">DATE</p>
<p class="tablebodytext">Not null</p>
<p class="tablebodytext">Read-only</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Date-time the record was last modified manually by a user as opposed to being automatically modified by the Singleview server.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">CREATED_OPERATOR_ID</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">NUMBER (8)</p>
<p class="tablebodytext">Not null</p>
<p class="tablebodytext">Read-only</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">User who originally created the record.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">FUNCTION_NAME</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">VARCHAR (67)</p>
<p class="tablebodytext">Not null</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Name of the function to be scheduled. </p>
<p class="tablebodytext">The function name is specified on insert.</p>
<p class="tablebodytext">It can only be updated using <span class="unixoutputc">ScheduledFunctionUpdate&amp;()</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">INTERFACE_NR</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">NUMBER (3)</p>
<p class="tablebodytext">Not null</p>
<p class="tablebodytext">Read-only</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Interface number for the function to be scheduled.</p>
<p class="tablebodytext">It is automatically derived using <span class="unixoutputc">PARAMETERS</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">PARAMETERS</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">BLOB</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Parameters to pass to the function to be scheduled.</p>
<p class="tablebodytext">It must be specified as an unknown array on insert unless the function has no parameters.</p>
<p class="tablebodytext">It can only be updated using <span class="unixoutputc">ScheduledFunctionUpdate&amp;()</span>. </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">PARAMETERS_STR</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">CLOB</p>
<p class="tablebodytext"><a id="h79002" class="jump" title="Pseudo-columns" href="7526.htm#o79001" target="_self">Pseudo-column</a></p>
<p class="tablebodytext">Used for inserts only</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">String representation of the parameters to be passed to the function.</p>
<p class="tablebodytext">The string format is the same as used in EPM tracing and debugging. </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">SEQUENTIAL_IND_CODE</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">NUMBER (1)</p>
<p class="tablebodytext">Pseudo-column</p>
<p class="tablebodytext">Used for inserts only</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">If set to 1 (true), this function is run as part of a group of scheduled functions, in sequence.</p>
<p class="tablebodytext">It cannot be updated.</p>
<p class="tablebodytext">A group is defined by a combination of the following columns:</p>
<ul class="tablelistbullet"><li class="tablelistbullet"><span class="unixoutputc">XID</span></li><li class="tablelistbullet"><span class="unixoutputc">PARTITION_NR</span></li><li class="tablelistbullet"><span class="unixoutputc">CATEGORY_CODE</span></li><li class="tablelistbullet"><span class="unixoutputc">DESTINATION</span>.</li></ul><p class="tablebodytext">The functions in a group are run in sequence, ordered by:</p>
<ol class="tablelistnumber"><li class="tablelistnumber"><span class="unixoutputc">PENDING_START_DATE</span></li><li class="tablelistnumber"><span class="unixoutputc">SCHEDULED_FUNCTION_ID</span>.</li></ol><p class="tablebodytext">It can only be specified on insert.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">XID</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">VARCHAR (80)</p>
<p class="tablebodytext">Derived</p>
<p class="tablebodytext">Read-only</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">ID of the transaction that inserted this function. It is part of the key used to define a group of scheduled functions to be run in sequence.</p>
<p class="tablebodytext">It is automatically derived if <span class="unixoutputc">SEQUENTIAL_IND_CODE</span> is set to 1. Otherwise, it is null.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">CATEGORY_CODE</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">NUMBER (8)</p>
<p class="tablebodytext">Not null</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Classification category of the scheduled function.</p>
<p class="tablebodytext">It must be specified on insert.</p>
<p class="tablebodytext">It can only be updated using <span class="unixoutputc">ScheduledFunctionUpdate&amp;()</span>.</p>
<p class="tablebodytext">It is based on the <span class="unixoutputc">SCHEDULED_FUNC_CATEGORY</span> reference type.</p>
<p class="tablebodytext">If <span class="unixoutputc">SEQUENTIAL_IND_CODE</span> is set to 1 (true), it is part of the key used to define a group of scheduled functions to be run in sequence.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">SUB_CATEGORY_CODE</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">NUMBER (8)</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Further classification of the scheduled function.</p>
<p class="tablebodytext">If used, it must be specified on insert. Otherwise, it remains null.</p>
<p class="tablebodytext">It can only be updated using <span class="unixoutputc">ScheduledFunctionUpdate&amp;()</span>.</p>
<p class="tablebodytext">It is based on the <span class="unixoutputc">SCHEDULED_FUNC_SUB_CATEGORY</span> reference type.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">DESCRIPTION</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">VARCHAR (255)</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Short description of the scheduled function.</p>
<p class="tablebodytext">It can only be updated using <span class="unixoutputc">ScheduledFunctionUpdate&amp;()</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">STATUS_CODE</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">NUMBER (2)</p>
<p class="tablebodytext">Not null</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Current execution status of the scheduled function.</p>
<p class="tablebodytext">It cannot be specified during inserts or updates.</p>
<p class="tablebodytext">On insert, the default value is 1 (Pending).</p>
<p class="tablebodytext">A scheduled function with a status of 2 (Running) or 3 (Success) cannot be updated.</p>
<p class="tablebodytext">If a function has a status of 5 (Failure (Retries Pending)), the function ran at least once and failed, and when it failed it had a <span class="unixoutputc">RETRY_COUNT</span> greater than zero, and it is rescheduled for another evaluation.</p>
<p class="tablebodytext">It is based on the <span class="unixoutputc">SCHEDULED_FUNCTION_STATUS</span> reference type.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">EFFECTIVE_DATE</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">DATE</p>
<p class="tablebodytext">Not null</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Date-time used to run this scheduled function.</p>
<p class="tablebodytext">It is equal the value returned by the <span class="unixoutputc">effective_date()</span> function when the scheduled function is invoked.</p>
<p class="tablebodytext">It is not updated as a result of automatic retries.</p>
<p class="tablebodytext">If not specified on insert, it defaults to:</p>
<ul class="tablelistbullet"><li class="tablelistbullet">1:  Effective date of the insert function if <span class="unixoutputc">SCHEDULED_START_DATE</span> is less than or equal to the current date-time.</li><li class="tablelistbullet">2:  <span class="unixoutputc">SCHEDULED_START_DATE</span>, if <span class="unixoutputc">SCHEDULED_START_DATE</span> is greater than the current date-time.</li></ul></td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">EFFECTIVE_OPERATOR_ID</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">NUMBER (8)</p>
<p class="tablebodytext">Not null</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Effective user used to evaluate this function.</p>
<p class="tablebodytext">It is derived by the <span class="unixoutputc">treOperatorGetId&amp;()</span> function when the scheduled function is invoked.</p>
<p class="tablebodytext">It defaults to <span class="unixoutputc">OPERATOR_ID</span>. It is not changed unless explicitly specified.</p>
<p class="tablebodytext">Only a user with the appropriate security privileges can specify it on insert or update to a value different from <span class="unixoutputc">OPERATOR_ID</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">PARTITION_NR</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">NUMBER (2)</p>
<p class="tablebodytext">Not null</p>
<p class="tablebodytext">Derived</p>
<p class="tablebodytext">Read-only</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Number of the partition associated with this scheduled function.</p>
<p class="tablebodytext">If not specified, it is set to the partition associated with the specified <span class="unixoutputc">ENTITY_ID</span> and <span class="unixoutputc">ENTITY_CODE</span>. </p>
<p class="tablebodytext">If <span class="unixoutputc">ENTITY_ID</span> is not specified, the default partition for <span class="unixoutputc">INSTANCE_NAME</span> is used.</p>
<p class="tablebodytext">If <span class="unixoutputc">INSTANCE_NAME</span> is not specified, the default partition for the current instance is used.</p>
<p class="tablebodytext">If <span class="unixoutputc">SEQUENTIAL_IND_CODE</span> is set to 1 (true), it is part of the key used to define a group of scheduled functions to be run in sequence.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">INSTANCE_NAME</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">VARCHAR (9)</p>
<p class="tablebodytext">Derived</p>
<p class="tablebodytext">Read-only</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Instance associated with <span class="unixoutputc">PARTITION_NR</span>.</p>
<p class="tablebodytext">By default, the scheduled function is created on the instance on which the scheduled function insert function is processed.</p>
<p class="tablebodytext">If specified on insert, the scheduled function is created on the specified instance.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">SCHEDULED_START_DATE</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">DATE</p>
<p class="tablebodytext">Not null</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Date-time at which the scheduled function was last scheduled to be run.</p>
<p class="tablebodytext">It is the date partitioning key for this table.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote">Because the value can be updated by failures or manual updates, row migration is possible. </p></td></tr></table>
<p class="tablebodytext">If a value is not supplied for this column on insert, the current date-time is used by default.</p>
<p class="tablebodytext">On insert or update of a scheduled function, the date-time cannot be more than 15 minutes in the past.</p>
<p class="tablebodytext">If updated for a scheduled function with a <span class="unixoutputc">STATUS_CODE</span> of 4 (Failure), its status is automatically updated to 5 (Failure (Retries Pending)).</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">ORIGINAL_SCHEDULED_</span><br><span class="unixoutputc">START_DATE</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">DATE</p>
<p class="tablebodytext">Not null</p>
<p class="tablebodytext">Derived</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Date-time at which the record was originally scheduled to be run.</p>
<p class="tablebodytext">For a newly-inserted function, it equals <span class="unixoutputc">SCHEDULED_START_DATE</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">PENDING_START_DATE</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">DATE</p>
<p class="tablebodytext">Derived</p>
<p class="tablebodytext">Read-only</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Date-time the scheduled function is scheduled to run.</p>
<p class="tablebodytext">It is equal to <span class="unixoutputc">SCHEDULED_START_DATE</span> for scheduled functions with a status of:</p>
<ul class="tablelistbullet"><li class="tablelistbullet">1 (Pending)</li><li class="tablelistbullet">2 (Running)</li><li class="tablelistbullet">5 (Failure (Retries Pending)).</li></ul><p class="tablebodytext">Otherwise, it is null.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">RETRY_MODE_CODE</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">NUMBER (2)</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Failure retry behaviour for scheduled functions that are part of a sequence (<span class="unixoutputc">SEQUENTIAL_IND_CODE</span> is set to 1). </p>
<p class="tablebodytext">It is based on the <span class="unixoutputc">SCHEDULED_FUNC_RETRY_MODE</span> reference type.</p>
<p class="tablebodytext">If <span class="unixoutputc">XID</span> is specified, it is mandatory and defaults to 1 (Synchronous).</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">RETRY_COUNT</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">NUMBER (8)</p>
<p class="tablebodytext">Not null</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Number of retries remaining for the function. The default is 0.</p>
<p class="tablebodytext">When a function with a <span class="unixoutputc">RETRY_COUNT</span> of 0 fails, it is updated to a status of 4 (Failure) and it is not rescheduled.</p>
<p class="tablebodytext">If updated with a non-zero value for a scheduled function with a status of 4 (Failure), the function's status is automatically updated to 5 (Failure (Retries Pending)).</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">ORIGINAL_RETRY_COUNT</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">NUMBER (8)</p>
<p class="tablebodytext">Not null</p>
<p class="tablebodytext">Read-only</p>
<p class="tablebodytext">Derived</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Value of <span class="unixoutputc">RETRY_COUNT</span> when the scheduled function was first created.</p>
<p class="tablebodytext">It automatically defaults to <span class="unixoutputc">RETRY_COUNT</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">RETRY_PERIOD</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">NUMBER (8)</p>
<p class="tablebodytext">Not null</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Number of seconds to wait after the <span class="unixoutputc">START_DATE</span> before attempting to re-evaluate the failed scheduled function.</p>
<p class="tablebodytext">If <span class="unixoutputc">RETRY_COUNT</span> is greater than zero, <span class="unixoutputc">RETRY_PERIOD</span> must also be greater than zero.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">FIRST_START_DATE</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">DATE</p>
<p class="tablebodytext">Derived</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Date-time the scheduled function was first evaluated.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">START_DATE</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">DATE</p>
<p class="tablebodytext">Derived</p>
<p class="tablebodytext">Read-only</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Date-time the scheduled function was last evaluated.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">ELAPSED_TIME</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">NUMBER (22,6)</p>
<p class="tablebodytext">Derived</p>
<p class="tablebodytext">Read-only</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Time in seconds taken to evaluate this function for the most recent evaluation.</p>
<p class="tablebodytext">It only contains a value if <span class="unixoutputc">STATUS_CODE</span> is:</p>
<ul class="tablelistbullet"><li class="tablelistbullet">3 (Success)</li><li class="tablelistbullet">4 (Failure)</li><li class="tablelistbullet">5 (Failure (Retries Pending)).</li></ul></td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">EVALUATION_COUNT</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">NUMBER (6)</p>
<p class="tablebodytext">Derived</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Number of times the function has been evaluated.</p>
<p class="tablebodytext">It is null if the function has never been evaluated and has a status of 1 (Pending). </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">TOTAL_ELAPSED_TIME</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">NUMBER (22,6)</p>
<p class="tablebodytext">Derived</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Total elapsed time of all evaluations of the function. </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">LAST_ERROR_DATE</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">DATE</p>
<p class="tablebodytext">Derived</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Date-time the scheduled function last failed.</p>
<p class="tablebodytext">The error details are recorded in <span class="unixoutputc">LAST_ERROR_MESSAGE_ID</span> and <span class="unixoutputc">LAST_ERROR_MESSAGE</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">LAST_ERROR_MESSAGE_ID</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">NUMBER (8)</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">ID of the last error message raised by the failure of the scheduled function.</p>
<p class="tablebodytext">If the scheduled function has a status of 3 (Success), it can be set to indicate the error that was returned from a previous evaluation of the function.</p>
<p class="tablebodytext">It is populated if the scheduled function has a status of 4 (Failure) or 5 (Failure (Retries Pending)).</p>
<p class="tablebodytext">If specified as part of an update to a scheduled function with a status of 1 (Pending), the status of the scheduled function is automatically updated to 4 (Failure).</p>
<p class="tablebodytext">If specified, <span class="unixoutputc">LAST_ERROR_MESSAGE</span> must also be specified.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">LAST_ERROR_MESSAGE</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">VARCHAR (4000)</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Text of the last error message raised by the failure of the scheduled function.</p>
<p class="tablebodytext">If the scheduled function has a status of 3 (Success), it can be set to indicate the error returned from a previous evaluation of the function.</p>
<p class="tablebodytext">It is populated if the scheduled function has a status of 4 (Failure) or 5 (Failure (Retries Pending)).</p>
<p class="tablebodytext">If specified as part of an update to a scheduled function with a status of 1 (Pending), the status of the scheduled function is automatically updated to 4 (Failure).  </p>
<p class="tablebodytext">If specified, <span class="unixoutputc">LAST_ERROR_MESSAGE_ID</span> must also be specified.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">ENTITY_ID</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">NUMBER (15)</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">ID of the entity that created this scheduled function.</p>
<p class="tablebodytext">If specified, <span class="unixoutputc">ENTITY_CODE</span> must also be specified.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">ENTITY_CODE</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">NUMBER (4)</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Type of entity that created this scheduled function.</p>
<p class="tablebodytext">If specified, <span class="unixoutputc">ENTITY_ID</span> must also be specified.</p>
<p class="tablebodytext">It is based on the <span class="unixoutputc">SCHEDULED_FUNC_ENTITY</span> reference type.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">DESTINATION</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">VARCHAR (80)</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Name of a Singleview destination database or instance. </p>
<p class="tablebodytext">If <span class="unixoutputc">SEQUENTIAL_IND_CODE</span> is set to 1 (true), it is part of the key used to define a group of scheduled functions to be run in sequence.</p>
<p class="tablebodytext">If it is not null, scheduled functions cannot be processed concurrently if they have matching values in all of the following columns:</p>
<ul class="tablelistbullet"><li class="tablelistbullet"><span class="unixoutputc">DESTINATION</span> </li><li class="tablelistbullet"><span class="unixoutputc">ENTITY_ID</span> </li><li class="tablelistbullet"><span class="unixoutputc">ENTITY_CODE</span></li><li class="tablelistbullet"><span class="unixoutputc">PARTITION_NR</span>.</li></ul></td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">SFM_CONFIG</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">VARCHAR (256)</p>
<p class="tablebodytext">Derived</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">If set to either of the following, the SFM processes only scheduled functions:</p>
<ul class="tablelistbullet"><li class="tablelistbullet">Value of the <span class="unixoutputc">ATA_SFM_CONFIG</span> environment variable</li><li class="tablelistbullet"><span class="unixoutputc">NULL</span>, with <span class="unixoutputc">ATA_SFM_CONFIG</span> undefined.</li></ul><p class="tablebodytext">It cannot be explicitly specified when inserting or updating scheduled functions; its value is derived from the environment variable on insert.</p>
<p class="tablebodytext">It provides namespace isolation for the SFM.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">BILLING_IND_CODE</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">NUMBER (1)</p>
<p class="tablebodytext"><a id="h79002_2" class="jump" title="Pseudo-columns" href="7526.htm#o79001" target="_self">Pseudo-column</a></p>
<p class="tablebodytext">Used for inserts only</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">If set to 1 (true), the inserted scheduled function is stored in the default billing partition.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Workflow Columns</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<th class="tableheading" style="border:1px solid #010101;" width="186"><p class="tableheading">Column Name</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="132"><p class="tableheading">Properties</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="378"><p class="tableheading">Description</p>
</th>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">SESSION_ID</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">NUMBER (15)</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">ID of the session that initiated the process instance. </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">PROCESS_INSTANCE_ID</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">NUMBER (15)</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">ID of the process instance that initiated the work item.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">PROCESS_NAME</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">VARCHAR (1020)</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Name of the business process.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">WORK_ITEM_ID</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">NUMBER (15)</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">ID of the work item being executed.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">WORK_ITEM_NAME</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">VARCHAR (1020)</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Name of the work item being executed.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">WORKFLOW_FUNCTION_NAME</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">VARCHAR (67)</p>
<p class="tablebodytext">Not null</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Name of the function that performs the task for the work item.</p>
<p class="tablebodytext">If a generic wrapper function is:</p>
<ul class="tablelistbullet"><li class="tablelistbullet">Scheduled to run a task for a work item, <span class="unixoutputc">WORKFLOW_FUNCTION_NAME</span> is the function name that performs the task, and <span class="unixoutputc">FUNCTION_NAME</span> is the name of the wrapper function. </li><li class="tablelistbullet">Not used, <span class="unixoutputc">WORKFLOW_FUNCTION_NAME</span> and <span class="unixoutputc">FUNCTION_NAME</span> have the same value.</li></ul></td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">WORKFLOW_FUNCTION_INTERFACE_NR</span></p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">NUMBER (3)</p>
<p class="tablebodytext">Not null</p>
<p class="tablebodytext">Derived</p>
</td>
<td style="border:1px solid #010101;" width="378"><p class="tablebodytext">Interface number of the function specified by <span class="unixoutputc">WORKFLOW_FUNCTION_NAME</span>.</p>
<p class="tablebodytext">It is automatically derived based on the supplied function parameters.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>


<br><div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="50772.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="75357.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div></body>
</html>


