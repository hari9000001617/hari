<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title> TREREST Outbound </title>
<script type="text/javascript" src="open_parent.js"></script>
<link rel="stylesheet" type="text/css" href="pkc.css">
<link rel="stylesheet" type="text/css" href="stylesheet.css">
<meta name="description" content="Configurer's Reference Guide for Singleview Convergent Billing 9.1 ">
<script language="javascript" type="text/javascript" src="dhtml_toc.js"></script>
<script language="JavaScript">
<!--

document.onkeydown = checkChangePage;
function checkChangePage(e)
{
   if (!e) var e = window.event;
   // Don't put the following into the first page
   if ((e.ctrlKey && (e.keyCode == 37))) {
      // Ctrl-Left Arrow was pressed or Page up key pressed at the top of the page
      document.location.href = "77716.htm";
   } else
   // Don't put the following into the late page for a document
   if ((e.ctrlKey && (e.keyCode == 39))) {
      // Ctrl-Right Arrow was pressed or Page down key pressed and at the bottom of the page
      document.location.href = "69536.htm";
   }
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function printpage()
{
	window.print();
}
//-->
</script>
</head>
<body onload="loadParent();MM_preloadImages('left_down.gif','right_down.gif','index_down.gif','contents_down.gif','search_down.gif','print_down.gif');if (isTOCLoaded()) {expand('55793');highlight('77733')}">
<div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="77716.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="69536.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%">
<h2 class="heading2">TREREST Outbound</h2>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'TREREST Outbound' (77733)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="bodytext">The <span class="formname">TREREST Outbound</span> interface type is used for generating configuration settings for the TREREST Outbound Adapter.</p>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Interface Type Parameters</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td class="tableheading" style="border:1px solid #010101;" width="114"><p class="tableheading">Tab</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="144"><p class="tableheading">Parameter</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="78"><p class="tableheading">Type</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="360"><p class="tableheading">Description</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" rowspan="3" width="114"><p class="tablebodytext"><span class="fieldname">Connection</span></p>
</td>
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="fieldname">Enabled?</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">Yes/No</p>
</td>
<td style="border:1px solid #010101;" width="360"><p class="tablebodytext">If Yes is specified, the outbound TREREST interface is enabled.</p>
<p class="tablebodytext">Default is Yes.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="fieldname">SV Username</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">Text</p>
</td>
<td style="border:1px solid #010101;" width="360"><p class="tablebodytext">User name used to connect to the THP.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="fieldname">SV Password</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">Text</p>
</td>
<td style="border:1px solid #010101;" width="360"><p class="tablebodytext">Password used to connect to the THP.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" rowspan="5" width="114"><p class="tablebodytext"><span class="fieldname">Static REST</span></p>
</td>
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="fieldname">Config File Template</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">Text</p>
</td>
<td style="border:1px solid #010101;" width="360"><p class="tablebodytext">Used for interface types where the configuration is based on a template file.</p>
<p class="tablebodytext">The default path is <span class="unixoutputc">$ATA_REL_SERVER_CONFIG/trerest_out/trerest_out.xml</span></p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="fieldname">Tuxedo Service Name</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">Text</p>
</td>
<td style="border:1px solid #010101;" width="360"><p class="tablebodytext">Name of the Tuxedo service used to connect to the outbound interface.</p>
<p class="tablebodytext">It is used in the generation of the <span class="unixoutputc">REMOTE_SERVICE </span>configuration item.</p>
<p class="tablebodytext">Default is <span class="unixoutputc">biRestService</span>.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote">If the default Tuxedo service name is not used, duplicate the Rest.Send&amp; function.</p><p class="tablenote">The service name of the duplicated function must be set as the new Tuxedo service name. This ensures the <span class="unixoutputc">TREPROXY</span> can communicate with the <span class="unixoutputc">TREREST_OUT</span>.</p></td></tr></table>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="fieldname">Connection Timeout (s)</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">[Integer]</p>
</td>
<td style="border:1px solid #010101;" width="360"><p class="tablebodytext">Length of time (in seconds) to wait for a connection to be established before timing out.</p>
<p class="tablebodytext">It is used to set <span class="fieldname">MaxWait</span> on the outbound connection pool. </p>
<p class="tablebodytext">Default is 30.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="fieldname">Request Timeout (s)</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">[Integer]</p>
</td>
<td style="border:1px solid #010101;" width="360"><p class="tablebodytext">Length of time (in seconds) to wait for a response to a request before timing out.</p>
<p class="tablebodytext">It is used in the generation of the <span class="unixoutputc">REMOTE_SERVICE </span>configuration item.</p>
<p class="tablebodytext">Default is 300.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="fieldname">Idle Timeout (s)</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">[Integer]</p>
</td>
<td style="border:1px solid #010101;" width="360"><p class="tablebodytext">Minimum length of time (in seconds) a connection to the server remains idle before being closed.</p>
<p class="tablebodytext">It is used to set <span class="fieldname">MinEvictableIdleTime</span> on the outbound connection pool. </p>
<p class="tablebodytext">Default is 60.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" rowspan="9" width="114"><p class="tablebodytext"><span class="fieldname">Operational REST</span></p>
</td>
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="fieldname">THP Instance</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">[List]</p>
</td>
<td style="border:1px solid #010101;" width="360"><p class="tablebodytext">THP instance used to connect to Singleview.</p>
<p class="tablebodytext">If <span class="fieldname">Cluster Managed</span> is set to True, this field must not be set. Otherwise, it is mandatory.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="fieldname">SV Instance</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">[List]</p>
</td>
<td style="border:1px solid #010101;" width="360"><p class="tablebodytext">Singleview instance on which the adapter is run.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote">Ignored if <span class="fieldname">Cluster Managed</span> is True.</p></td></tr></table>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="fieldname">TREREST Outbound Sequence Number</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">[Integer]</p>
</td>
<td style="border:1px solid #010101;" width="360"><p class="tablebodytext">TREREST Outbound configuration item sequence number for the instance.</p>
<p class="tablebodytext">Default is the next available sequence number.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="fieldname">Number Concurrent Requests</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">[Integer]</p>
</td>
<td style="border:1px solid #010101;" width="360"><p class="tablebodytext">Number of treproxy servers to be created.</p>
<p class="tablebodytext">Default is 5.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="fieldname">Max Host Connections</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">[Integer]</p>
</td>
<td style="border:1px solid #010101;" width="360"><p class="tablebodytext">Maximum number of concurrent connections to the remote endpoint.</p>
<p class="tablebodytext">It is used to set <span class="fieldname">MaxActive</span> on the outbound connection pool.</p>
<p class="tablebodytext">Default is 1.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="fieldname">TREPROXY Server Group</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">[Text]</p>
</td>
<td style="border:1px solid #010101;" width="360"><p class="tablebodytext">Tuxedo group associated with the treproxy server in the Tuxedo configuration file.</p>
<p class="tablebodytext">It is used in the generation of the <span class="unixoutputc">REMOTE_SERVICE </span>configuration item.</p>
<p class="tablebodytext">Default is IMP.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="fieldname">TREPROXY Port</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">[Text]</p>
</td>
<td style="border:1px solid #010101;" width="360"><p class="tablebodytext">Port used to connect to the TREREST Outbound adapter.</p>
<p class="tablebodytext">It is specified as a port number or service name as defined in <span class="unixoutputc">/etc/services</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="fieldname">THP Group</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">[List]</p>
</td>
<td style="border:1px solid #010101;" width="360"><p class="tablebodytext">THP group to associate with the TREREST Outbound adapter configuration in a clustered environment. It is used to determine the THP to use on each instance when the adapter configuration is generated.</p>
<p class="tablebodytext">If <span class="fieldname">Cluster Managed</span> is set to True, this field is mandatory. Otherwise, it must not be set.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="fieldname">Cluster Managed</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">True/False</p>
</td>
<td style="border:1px solid #010101;" width="360"><p class="tablebodytext">Indicates if this instance is managed by high availability configuration, and determines the number of <span class="unixoutputc">TREREST_OUT</span> and <span class="unixoutputc">REMOTE_SERVICE</span> configuration items generated.</p>
<p class="tablebodytext">Default is False.</p>
<p class="tablebodytext">If set to:</p>
<ul class="tablelistbullet"><li class="tablelistbullet">False, only one of each configuration item is created.</li><li class="tablelistbullet">True, one of each configuration item is created for each instance in the <span class="unixoutputc">InstanceStatus</span> derived attribute table.</li></ul></td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" rowspan="2" width="114"><p class="tablebodytext"><span class="fieldname">SSL</span></p>
</td>
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="fieldname">Truststore Location</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">[Text]</p>
</td>
<td style="border:1px solid #010101;" width="360"><p class="tablebodytext">File path to the truststore that contains the trusted certificates.</p>
<p class="tablebodytext">Default is <span class="unixoutputc">$ATA_REL_SERVER_CONFIG/trerest_out/</span><br><span class="unixoutputc">trerest_out.truststore</span>.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote">For multi-instance environments, this file must be accessible by all instances; that is, a common path on all environments. This can be an environment variable that resolves to the same directory on each node.</p></td></tr></table>
<p class="tablebodytext">The truststore can be created using the keytool utility that is included in the Java standard edition SDK (see the <span class="referrals">Security and Auditing Configuration Guide for Singleview</span>).</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="144"><p class="tablebodytext"><span class="fieldname">Truststore Password</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">[Text]</p>
</td>
<td style="border:1px solid #010101;" width="360"><p class="tablebodytext">Password used to access the truststore.</p>
</td>
</tr>

</table>
<p class="syntaxheading">&nbsp;</p>


<br><div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="77716.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="69536.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div></body>
</html>


