<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title> SFM.DefineBatchFunctions </title>
<script type="text/javascript" src="open_parent.js"></script>
<link rel="stylesheet" type="text/css" href="pkc.css">
<link rel="stylesheet" type="text/css" href="stylesheet.css">
<meta name="description" content="Configurer's Reference Guide for Singleview Convergent Billing 9.1 ">
<script language="javascript" type="text/javascript" src="dhtml_toc.js"></script>
<script language="JavaScript">
<!--

document.onkeydown = checkChangePage;
function checkChangePage(e)
{
   if (!e) var e = window.event;
   // Don't put the following into the first page
   if ((e.ctrlKey && (e.keyCode == 37))) {
      // Ctrl-Left Arrow was pressed or Page up key pressed at the top of the page
      document.location.href = "77726.htm";
   } else
   // Don't put the following into the late page for a document
   if ((e.ctrlKey && (e.keyCode == 39))) {
      // Ctrl-Right Arrow was pressed or Page down key pressed and at the bottom of the page
      document.location.href = "74377.htm";
   }
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function printpage()
{
	window.print();
}
//-->
</script>
</head>
<body onload="loadParent();MM_preloadImages('left_down.gif','right_down.gif','index_down.gif','contents_down.gif','search_down.gif','print_down.gif');if (isTOCLoaded()) {expand('11007');expand('10992');highlight('77725')}">
<div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="77726.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="74377.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%">
<h3 class="heading3">SFM.DefineBatchFunctions</h3>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'SFM.DefineBatchFunctions' (77725)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="syntaxheading">Syntax</p>
<pre class="unixinputp">SFM.DefineBatchFunctions?[]()</pre>
<p class="syntaxheading">Description</p>
<p class="bodytext">Provides details of scheduled functions that support being combined into batches to be processed together.  </p>
<p class="syntaxheading">Attributes</p>
<table class="tableintopic" width="294" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="bold">Function Type</span></p>
</td>
<td style="border:1px solid #010101;" width="108"><p class="tablebodytext">Local</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="bold">Service</span></p>
</td>
<td style="border:1px solid #010101;" width="108"><p class="tablebodytext">Local</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="bold">Application Environment</span></p>
</td>
<td style="border:1px solid #010101;" width="108"><p class="tablebodytext">Any</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="bold">Context</span></p>
</td>
<td style="border:1px solid #010101;" width="108"><p class="tablebodytext">Any</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<table class="tableintopic" width="582" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td class="tableheading" style="border:1px solid #010101;" width="147"><p class="tableheading">Parameter</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="435"><p class="tableheading">Description</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="147"><p class="tablebodytext">None.</p>
</td>
<td style="border:1px solid #010101;" width="435"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Returns</p>
<p class="bodytext">A two-dimensional array, with each row describing information about a scheduled function that supports batch processing.  </p>
<p class="syntaxheading">Remarks</p>
<p class="bodytext">This function belongs to the <span class="unixoutputc">BASE_INSTALL</span> security group and can be customised by implementation teams.  By default, it calls <span class="unixoutputc"><a id="h77728" class="jump" title="SFM.CoreBatchFunctions?[]()" href="77726.htm" target="_self">SFM.CoreBatchFunctions?[]()</a></span> to return the set of core batch functions supplied with Singleview.  It is recommended that deployments add their own batch functions as separate functions and update this function to concatenate the lists together.</p>
<p class="bodytext">The following table lists the information that must be supplied for each returned row.</p>
<p class="bodytext">&nbsp;</p>
<table class="tableintopic" width="690" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td class="tableheading" style="border:1px solid #010101;" width="54"><p class="tableheading">Index</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="168"><p class="tableheading">Name</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="468"><p class="tableheading">Description</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="54"><p class="tablebodytext">0</p>
</td>
<td style="border:1px solid #010101;" width="168"><p class="tablebodytext">Function Name</p>
</td>
<td style="border:1px solid #010101;" width="468"><p class="tablebodytext">Name of the scheduled function that supports batch processing, including its type suffix.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="54"><p class="tablebodytext">1</p>
</td>
<td style="border:1px solid #010101;" width="168"><p class="tablebodytext">Interface Number</p>
</td>
<td style="border:1px solid #010101;" width="468"><p class="tablebodytext">Interface number of the scheduled function.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="54"><p class="tablebodytext">2</p>
</td>
<td style="border:1px solid #010101;" width="168"><p class="tablebodytext">Batch Function Name</p>
</td>
<td style="border:1px solid #010101;" width="468"><p class="tablebodytext">Name of the function to use to perform batch processing of this scheduled function, including its type suffix.  The function must return an integer value.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="54"><p class="tablebodytext">3</p>
</td>
<td style="border:1px solid #010101;" width="168"><p class="tablebodytext">Batch Interface Number</p>
</td>
<td style="border:1px solid #010101;" width="468"><p class="tablebodytext">Interface number of the batch processing function.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="54"><p class="tablebodytext">4</p>
</td>
<td style="border:1px solid #010101;" width="168"><p class="tablebodytext">Max Batch Size</p>
</td>
<td style="border:1px solid #010101;" width="468"><p class="tablebodytext">Maximum number of scheduled functions to process as a single batch.  This must be between 2 and 1000 inclusive.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="bodytext">The specified batch function must have the following interface:</p>
<pre class="unixinputp">&lt;BatchFunction&gt;&amp;(    const ScheduledFunctions$[],     const InterfaceNrs&amp;[],     const ScheduledFunctionParameters?[]    const EffectiveOperators&amp;[],    const EffectiveDates~[],    var ErrorId&amp;[],    var ErrorMessage$[])</pre>
<p class="bodytext">It is expected to return the number of functions successfully processed in a batch, although the return value is currently ignored by the SFM.  If the batch function fails with an error, then all scheduled functions in the batch are updated with details of the error after it is wrapped in a generic error indicating batch processing failure.  The parameters are described in the following table.</p>
<p class="bodytext">&nbsp;</p>
<p class="caption">&lt;BatchFunction&gt; Parameters</p>
<table class="tableintopic" width="684" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td class="tableheading" style="border:1px solid #010101;" width="252"><p class="tableheading">Parameter</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="432"><p class="tableheading">Description</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="252"><p class="tablebodytext"><span class="unixoutputc">ScheduledFunctions$[]</span></p>
</td>
<td style="border:1px solid #010101;" width="432"><p class="tablebodytext">In: Names of the scheduled functions that have been combined into a batch for processing.  This allows the same batch function to be used for multiple individual scheduled functions. </p>
<p class="tablebodytext">The number of scheduled functions passed must be greater than 1 and less than or equal to the specified <span class="unixoutputc">Max Batch Size</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="252"><p class="tablebodytext"><span class="unixoutputc">InterfaceNrs&amp;[]</span></p>
</td>
<td style="border:1px solid #010101;" width="432"><p class="tablebodytext">In: Interface numbers of the scheduled functions that have been combined into a batch.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="252"><p class="tablebodytext"><span class="unixoutputc">ScheduledFunctionParameters?[]</span></p>
</td>
<td style="border:1px solid #010101;" width="432"><p class="tablebodytext">In: Two-dimensional array containing the parameters that were passed to each of the scheduled functions in the batch.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="252"><p class="tablebodytext"><span class="unixoutputc">EffectiveOperators&amp;[]</span></p>
</td>
<td style="border:1px solid #010101;" width="432"><p class="tablebodytext">In: Effective operator specified for each function in the batch. </p>
<p class="tablebodytext">The batch function is always called using the TPSYSADM user.  </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="252"><p class="tablebodytext"><span class="unixoutputc">EffectiveDates~[]</span></p>
</td>
<td style="border:1px solid #010101;" width="432"><p class="tablebodytext">In: Effective date of evaluation for each function in the batch.  </p>
<p class="tablebodytext">The batch function is called using the effective date of the first function in the batch.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="252"><p class="tablebodytext"><span class="unixoutputc">ErrorId&amp;[]</span></p>
</td>
<td style="border:1px solid #010101;" width="432"><p class="tablebodytext">Out: ID of any error message raised by a scheduled function failure.</p>
<p class="tablebodytext">For scheduled functions that were successfully processed, this parameter contains an undefined value.  If all scheduled functions were processed successfully, an empty or undefined array is returned.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="252"><p class="tablebodytext"><span class="unixoutputc">ErrorMessage$[]</span></p>
</td>
<td style="border:1px solid #010101;" width="432"><p class="tablebodytext">Out: Error message text raised by a scheduled function failure.</p>
<p class="tablebodytext">If <span class="unixoutputc">ErrorId&amp;[]</span> is populated for a scheduled function, the corresponding index in <span class="unixoutputc">ErrorMessage$[]</span> must also be populated.   If all scheduled functions were processed successfully, an empty or undefined array is returned.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>


<br><div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="77726.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="74377.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div></body>
</html>


