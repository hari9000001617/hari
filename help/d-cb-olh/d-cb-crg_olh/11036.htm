<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title> AccountReservationUpdate&amp;() </title>
<script type="text/javascript" src="open_parent.js"></script>
<link rel="stylesheet" type="text/css" href="pkc.css">
<link rel="stylesheet" type="text/css" href="stylesheet.css">
<meta name="description" content="Configurer's Reference Guide for Singleview Convergent Billing 9.1 ">
<script language="javascript" type="text/javascript" src="dhtml_toc.js"></script>
<script language="JavaScript">
<!--

document.onkeydown = checkChangePage;
function checkChangePage(e)
{
   if (!e) var e = window.event;
   // Don't put the following into the first page
   if ((e.ctrlKey && (e.keyCode == 37))) {
      // Ctrl-Left Arrow was pressed or Page up key pressed at the top of the page
      document.location.href = "11035.htm";
   } else
   // Don't put the following into the late page for a document
   if ((e.ctrlKey && (e.keyCode == 39))) {
      // Ctrl-Right Arrow was pressed or Page down key pressed and at the bottom of the page
      document.location.href = "11039.htm";
   }
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function printpage()
{
	window.print();
}
//-->
</script>
</head>
<body onload="loadParent();MM_preloadImages('left_down.gif','right_down.gif','index_down.gif','contents_down.gif','search_down.gif','print_down.gif');if (isTOCLoaded()) {expand('11007');expand('10992');highlight('11036')}">
<div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="11035.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="11039.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%">
<h3 class="heading3">AccountReservationUpdate&amp;()</h3>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'AccountReservationUpdate&amp;()' (11036)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="syntaxheading">Syntax</p>
<pre class="unixinputp">AccountReservationUpdate&amp;(    const&nbsp;Reservation$,    var&nbsp;Seqnr&amp;,    const&nbsp;FieldNames$[],    const&nbsp;FieldValues?[])</pre>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Description</p>
<p class="bodytext">Updates a reservation.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="note">This function is available only as part of the separate Commerce Engine licence option.</p></td></tr></table>
<p class="syntaxheading">Attributes</p>
<table class="tableintopic" width="288" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="198"><p class="tablebodytext"><span class="bold">Application Environment</span></p>
</td>
<td style="border:1px solid #010101;" width="90"><p class="tablebodytext">Any</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="198"><p class="tablebodytext"><span class="bold">Context</span></p>
</td>
<td style="border:1px solid #010101;" width="90"><p class="tablebodytext">Any</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="198"><p class="tablebodytext"><span class="bold">Method</span></p>
</td>
<td style="border:1px solid #010101;" width="90"><p class="tablebodytext">Built-in</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td class="tableheading" style="border:1px solid #010101;" width="132"><p class="tableheading">Parameter</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="564"><p class="tableheading">Description</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext"><span class="unixoutputc">Reservation$</span></p>
</td>
<td style="border:1px solid #010101;" width="564"><p class="tablebodytext">In:  ID of the reservation.</p>
<p class="tablebodytext">It is returned by the initial call to <span class="unixoutputc">AccountReservationInsert$()</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext"><span class="unixoutputc">Seqnr&amp;</span></p>
</td>
<td style="border:1px solid #010101;" width="564"><p class="tablebodytext">In:  Sequence number of the reservation to be updated.</p>
<p class="tablebodytext">Out:  Sequence number of the updated reservation, incremented by 1.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext"><span class="unixoutputc">FieldNames$[]</span></p>
</td>
<td style="border:1px solid #010101;" width="564"><p class="tablebodytext">In:  Array of field names from the <span class="unixoutputc">ACCOUNT_RESERVATION_TRE_V</span> view.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext"><span class="unixoutputc">FieldValues?[]</span></p>
</td>
<td style="border:1px solid #010101;" width="564"><p class="tablebodytext">In:  Array of values, in the same order in which their names are specified in <span class="unixoutputc">FieldNames$[]</span>.</p>
<p class="tablebodytext">To support reservations on multiple accounts, the values corresponding to <span class="unixoutputc">ACCOUNT_ID</span>, <span class="unixoutputc">ACCOUNT_SEQNR</span>, <span class="unixoutputc">RESERVED_AMOUNT</span>, <span class="unixoutputc">CONSUMED_AMOUNT</span>, and <span class="unixoutputc">RESERVED_AMOUNT_CURRENCY_ID</span> fields can be specified as arrays.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Returns</p>
<p class="bodytext">1 (TRUE) if successful; otherwise, an error is raised.</p>
<p class="syntaxheading">Remarks</p>
<p class="bodytext">On entry, the value of <span class="unixoutputc">SeqNr&amp;</span> is used to provide an optimistic locking mechanism and must correspond to the current sequence number of the reservation.</p>
<p class="bodytext">In the locking mechanism, the calling process must have been the one to perform the latest operation on the reservation or fetched the current reservation details using <span class="unixoutputc">AccountReservationFetch&amp;()</span>.  On exit, the value of <span class="unixoutputc">Seqnr&amp;</span> is incremented by 1.</p>
<p class="bodytext">The following should be taken into account:</p>
<ul class="listbullet"><li class="listbullet">The value of <span class="unixoutputc">RESERVED</span>_<span class="unixoutputc">AMOUNT</span> should be larger than the previous reserved value because the reserved amount replaces the existing reserved amount.</li><li class="listbullet">If <span class="unixoutputc">CONSUMED_AMOUNT</span> is specified, it overrides the <span class="unixoutputc">AUTO_CONSUMPTION_MODE</span> specified in <span class="unixoutputc">AccountReservationInsert$()</span>, and replaces the existing consumed amount. </li><li class="listbullet">If <span class="unixoutputc">RESERVED_AMOUNT</span>_<span class="unixoutputc">CURRENCY</span>_<span class="unixoutputc">ID</span> is specified and differs from the account currency, currency conversion is applied to convert the reservation amount into the currency of the account.  If <span class="unixoutputc">RESERVED</span>_<span class="unixoutputc">AMOUNT</span>_<span class="unixoutputc">CURRENCY</span>_<span class="unixoutputc">ID</span> is not specified, the reservation is assumed to be in the currency of the account.</li><li class="listbullet">If <span class="unixoutputc">ACCOUNT</span>_<span class="unixoutputc">SEQNR </span>is defined, the <span class="unixoutputc">SEQNR</span> of the account is compared with the current account <span class="unixoutputc">SEQNR</span> to implement an optimistic locking scheme.  The account and reservation are locked for the duration of the operation.  If the <span class="unixoutputc">SEQNR</span> of the account is not equal to the supplied <span class="unixoutputc">ACCOUNT_SEQNR</span>, the reservation fails with an error indicating that the account was modified by another user.</li><li class="listbullet">If <span class="unixoutputc">ACCOUNT</span>_<span class="unixoutputc">SEQNR</span> is not supplied, the function only succeeds if the real-time available credit for the account does not go below zero because of the reservation.</li><li class="listbullet">If the <span class="unixoutputc">INVOICE</span>_<span class="unixoutputc">CREDIT</span>_<span class="unixoutputc">MODE</span> parameter is supplied and is non-zero (TRUE), the 'real-time available credit' used to determine the authorisation of this reservation uses <span class="unixoutputc">AVAILABLE_INVOICE_CREDIT</span> (rather than <span class="unixoutputc">AVAILABLE_CREDIT</span>).</li><li class="listbullet">When updating a reservation: <ul class="listbullet2"><li class="listbullet2">The total amount of the reservation is only distributed to the accounts specified in the update request. </li><li class="listbullet2">Any specified accounts not associated with the reservation are automatically added to the reservation with the specified amount. </li><li class="listbullet2">Any accounts not specified have their reservation amounts reset to 0. </li><li class="listbullet2">The real-time available credit of each specified account is updated accordingly.</li></ul></li><li class="listbullet">For a multiple-account reservation, the conversion from reserved amount to consumed amount is only applied to each account accordingly. Preserved reservations are not shared between multiple specified accounts.</li><li class="listbullet">If a reservation spans multiple accounts, it must be volatile. Updating a multiple-account reservation to non-volatile fails.</li><li class="listbullet">If a reservation is created as non-volatile and the updated reservation has a non-zero (TRUE) value for <span class="unixoutputc">NON_VOLATILE</span>, the reservation is updated in the <span class="unixoutputc">ACCOUNT</span>_<span class="unixoutputc">RESERVATION</span> table and a database commit is performed; if <span class="unixoutputc">NON</span>_<span class="unixoutputc">VOLATILE</span> is 0 (FALSE) for the updated reservation, the reservation is deleted from the <span class="unixoutputc">ACCOUNT</span>_<span class="unixoutputc">RESERVATION</span> table and a database commit is performed.</li><li class="listbullet">If a reservation is created as volatile and <span class="unixoutputc">NON</span>_<span class="unixoutputc">VOLATILE</span> is non-zero (TRUE), the reservation is inserted into the <span class="unixoutputc">ACCOUNT_RESERVATION</span> table and a database commit is performed.</li></ul>


<br><div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="11035.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="11039.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div></body>
</html>


