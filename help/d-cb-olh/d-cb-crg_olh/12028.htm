<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title> biServerRestart&amp;() </title>
<script type="text/javascript" src="open_parent.js"></script>
<link rel="stylesheet" type="text/css" href="pkc.css">
<link rel="stylesheet" type="text/css" href="stylesheet.css">
<meta name="description" content="Configurer's Reference Guide for Singleview Convergent Billing 9.1 ">
<script language="javascript" type="text/javascript" src="dhtml_toc.js"></script>
<script language="JavaScript">
<!--

document.onkeydown = checkChangePage;
function checkChangePage(e)
{
   if (!e) var e = window.event;
   // Don't put the following into the first page
   if ((e.ctrlKey && (e.keyCode == 37))) {
      // Ctrl-Left Arrow was pressed or Page up key pressed at the top of the page
      document.location.href = "63071.htm";
   } else
   // Don't put the following into the late page for a document
   if ((e.ctrlKey && (e.keyCode == 39))) {
      // Ctrl-Right Arrow was pressed or Page down key pressed and at the bottom of the page
      document.location.href = "12029.htm";
   }
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function printpage()
{
	window.print();
}
//-->
</script>
</head>
<body onload="loadParent();MM_preloadImages('left_down.gif','right_down.gif','index_down.gif','contents_down.gif','search_down.gif','print_down.gif');if (isTOCLoaded()) {expand('11007');expand('10992');highlight('12028')}">
<div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="63071.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="12029.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%">
<h3 class="heading3">biServerRestart&amp;()</h3>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'biServerRestart&amp;()' (12028)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="syntaxheading">Syntax</p>
<pre class="unixinputp">biServerRestart&amp;(    const&nbsp;ServerNames$[],    const&nbsp;ServiceNames$[],    const&nbsp;ProcessNames$[],    const&nbsp;Options?{},    var&nbsp;Results?{})</pre>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Description</p>
<p class="bodytext">Performs a controlled restart of one or more Tuxedo servers and Convergent Billing processes.</p>
<p class="syntaxheading">Attributes</p>
<table class="tableintopic" width="288" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="bold">Application Environment</span></p>
</td>
<td style="border:1px solid #010101;" width="102"><p class="tablebodytext">Any</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="bold">Context</span></p>
</td>
<td style="border:1px solid #010101;" width="102"><p class="tablebodytext">Any</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="bold">Method</span></p>
</td>
<td style="border:1px solid #010101;" width="102"><p class="tablebodytext">Local</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td class="tableheading" style="border:1px solid #010101;" width="147"><p class="tableheading">Parameter</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="549"><p class="tableheading">Description</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="147"><p class="tablebodytext"><span class="unixoutputc">ServerNames$[]</span></p>
</td>
<td style="border:1px solid #010101;" width="549"><p class="tablebodytext">In:  Names of Tuxedo servers to restart (for example, trerwdb) for both Convergent Billing and Process Engine.</p>
<p class="tablebodytext">Passing in an array with a single element containing a null string (<span class="unixoutputc">['']</span>) selects all servers. </p>
<p class="tablebodytext">Specify Tuxedo servers using the format:</p>
<p class="tablebodytext"><span class="unixoutputc">&lt;ServerName&gt;[:&lt;GroupId&gt;[.&lt;ServerId&gt;]]</span>.</p>
<p class="tablebodytext">The format is processed as follows:</p>
<ul class="tablelistbullet"><li class="tablelistbullet">If only <span class="unixoutputc">&lt;ServerName&gt;</span> is specified, all servers named <span class="unixoutputc">&lt;ServerName&gt;</span> are restarted.</li><li class="tablelistbullet">If <span class="unixoutputc">&lt;GroupId&gt;</span> is specified, only servers named <span class="unixoutputc">&lt;ServerName&gt;</span> in the specified group are restarted.</li><li class="tablelistbullet">If <span class="unixoutputc">&lt;ServerId&gt;</span> is specified, only the server named <span class="unixoutputc">&lt;ServerName&gt;</span> with the group ID and server ID is restarted (for example, <span class="unixoutputc">trerodb:100.3</span>).</li></ul><p class="tablebodytext">Specify a TMS server (for example, ORATMS) using the format:</p>
<p class="tablebodytext"><span class="unixoutputc">&lt;ServerName&gt;[:&lt;GroupId&gt;]</span></p>
<p class="tablebodytext">The format is processed as follows:</p>
<ul class="tablelistbullet"><li class="tablelistbullet">If only <span class="unixoutputc">&lt;ServerName&gt;</span> is specified, the TMS server and all groups using the TMS server are restarted.</li><li class="tablelistbullet">If <span class="unixoutputc">&lt;GroupId&gt;</span> is specified, only the group with that ID using the TMS server is restarted.</li></ul><p class="tablebodytext">Restart of individual TMS servers is not supported.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="147"><p class="tablebodytext"><span class="unixoutputc">ServiceNames$[]</span></p>
</td>
<td style="border:1px solid #010101;" width="549"><p class="tablebodytext">In:  Names of services.</p>
<p class="tablebodytext">Servers on the local instance that advertise one or more of the services are restarted.</p>
<p class="tablebodytext">Passing in an array with a single element containing a null string (<span class="unixoutputc">['']</span>) selects all servers that advertise one or more services.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="147"><p class="tablebodytext"><span class="unixoutputc">ProcessNames$[]</span></p>
</td>
<td style="border:1px solid #010101;" width="549"><p class="tablebodytext">In:  List of non-Tuxedo Convergent Billing processes on the local instance to restart.</p>
<p class="tablebodytext">For Tuxedo-based Convergent Billing processes, the <span class="unixoutputc">ServerNames$[]</span> parameter must be used.</p>
<p class="tablebodytext">Only specify processes that support being started and stopped using <span class="unixoutputc"><a id="h42740" class="jump" title="biBmpProcessStart&amp;()" href="11521.htm" target="_self">biBmpProcessStart&amp;()</a></span> and <span class="unixoutputc"><a id="h42741" class="jump" title="biBmpProcessStop&amp;()" href="11523.htm" target="_self">biBmpProcessStop&amp;()</a></span>, or are an ENM, ERT, or ERO process.</p>
<p class="tablebodytext">Specify processes using the format <span class="unixoutputc">&lt;ProcessName&gt;[:&lt;ProcessNumber&gt;]</span>.  The format is processed as follows:</p>
<ul class="tablelistbullet"><li class="tablelistbullet">If only <span class="unixoutputc">&lt;ProcessName&gt;</span> is specified, all processes named <span class="unixoutputc">&lt;ProcessName&gt;</span> are restarted.</li><li class="tablelistbullet">If <span class="unixoutputc">&lt;ProcessNumber&gt;</span> is specified, only the process named <span class="unixoutputc">&lt;ProcessName&gt;</span> with the specified process number is restarted; for example, <span class="unixoutputc">bkr:1</span>.</li></ul></td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="147"><p class="tablebodytext"><span class="unixoutputc">Options?{}</span></p>
</td>
<td style="border:1px solid #010101;" width="549"><p class="tablebodytext">In:  Options required if restarting specific types of servers.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="147"><p class="tablebodytext"><span class="unixoutputc">Results?{}</span></p>
</td>
<td style="border:1px solid #010101;" width="549"><p class="tablebodytext">Out:  Information about the restarted servers.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Returns</p>
<p class="bodytext">1 (TRUE) if all specified servers restarted successfully; otherwise, 0 (FALSE) if one or more servers or processes failed to restart.  </p>
<p class="syntaxheading">Remarks</p>
<p class="bodytext">A controlled restart means restarting Tuxedo servers and Convergent Billing processes so that the services and functionality those servers provide are always available to handle Tuxedo requests.</p>
<p class="bodytext">In a Commerce Engine high availability configuration, a controlled restart using <span class="unixoutputc">biServerRestart&amp;()</span> allows for Tuxedo servers and Convergent Billing processes to be upgraded to new versions without loss of service.  A number of configuration requirements need to be met to allow an upgrade without loss of service.  The primary requirement for the function is that any given service or functionality must be configured to be offered by more than one server or process.  For information about configuring Tuxedo servers, including multiple server single queue (MSSQ), refer to the <span class="referrals">Tuxedo Guide for Singleview</span>.</p>
<p class="bodytext"><span class="unixoutputc">Options?{}</span> provides a means of easily restarting specific sets of servers and processes.  For example, instead of having to identify all rating cache BKR processes from their configuration setting and listing them in <span class="unixoutputc">ProcessNames$[]</span>, a single value in <span class="unixoutputc">Options?{}</span> can cause all rating cache BKR processes to be restarted.  Other options allow some control over the function behaviour.</p>
<p class="bodytext">The following table lists <span class="unixoutputc">Options?{}</span> parameter options.</p>
<p class="bodytext">&nbsp;</p>
<p class="caption">Options?{} Parameter Options</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<th class="tableheading" style="border:1px solid #010101;" width="168"><p class="tableheading">Key</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="72"><p class="tableheading">Type</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="456"><p class="tableheading">Description</p>
</th>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="168"><p class="tablebodytext"><span class="unixoutputc">CacheRestart</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="456"><p class="tablebodytext">Used only if the BKR is specified in <span class="unixoutputc">ProcessNames$[]</span>.</p>
<p class="tablebodytext">If BKR is specified and this key is TRUE (the default), all BKR processes are restarted.</p>
<p class="tablebodytext">If the key is FALSE, only those BKR processes with <span class="unixoutputc">CACHE_START = False</span> are restarted.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="168"><p class="tablebodytext"><span class="unixoutputc">InitialiseFunction</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">String</p>
</td>
<td style="border:1px solid #010101;" width="456"><p class="tablebodytext">Function called after each server is successfully restarted.</p>
<p class="tablebodytext">The called function must have the following interface:</p>
<p class="tablebodytext"><span class="unixoutputc">&lt;FunctionName&gt;&amp;(ServerName$, GroupId&amp;, ServerId&amp;)</span></p>
<p class="tablebodytext">The specified function is executed in the parser of the server that was restarted by sending a <span class="unixoutputc">biTrcInvoke</span> event to the server.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="168"><p class="tablebodytext"><span class="unixoutputc">Restart</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="456"><p class="tablebodytext">Controls whether the servers and processes are restarted.</p>
<p class="tablebodytext">If set to FALSE, <span class="unixoutputc">biServerRestart&amp;()</span> functions as normal, but the server and process restart commands are not sent.</p>
<p class="tablebodytext">It is useful for testing what server and process a specific combination of parameter values will restart, without the restarts being performed.</p>
<p class="tablebodytext"><span class="unixoutputc">Results?{}</span> is populated as if all the necessary servers and processes were successfully restarted.  Default is TRUE.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="168"><p class="tablebodytext"><span class="unixoutputc">ServiceFilter</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="456"><p class="tablebodytext">Can be set to one of the following values:</p>
<ul class="tablelistbullet"><li class="tablelistbullet"><span class="unixoutputc">OR</span> (0) <span class="unixoutputc">ServiceNames$[]</span>, which is used to generate a list of servers to restart separate from those identified by <span class="unixoutputc">ServerNames$[]</span> (duplicates are removed).</li><li class="tablelistbullet"><span class="unixoutputc">AND</span> (1), which ensures that only servers identified by the <span class="unixoutputc">ServerNames$[]</span> list that advertise one or more of the services <span class="unixoutputc">in ServiceNames$[]</span> are restarted.</li><li class="tablelistbullet"><span class="unixoutputc">NOT</span> (2), which ensures that only servers identified by the <span class="unixoutputc">ServerNames$[]</span> list that do not advertise any of the services in <span class="unixoutputc">ServiceNames$[]</span> are restarted.</li></ul><p class="tablebodytext">For example, if <span class="unixoutputc">ServerNames$[]</span> is set to ['<span class="unixoutputc">trerwdb</span>'], <span class="unixoutputc">ServiceNames$[]</span> is set to ['<span class="unixoutputc">biEvent</span>'], and <span class="unixoutputc">ServiceFilter </span>is set to <span class="unixoutputc">OR</span>, all trerwdb servers and all servers that advertised the <span class="unixoutputc">biEvent</span> service are restarted. Several trerate servers are also restarted, and all trerwdb servers.</p>
<p class="tablebodytext">If <span class="unixoutputc">ServiceFilter</span> is instead set to <span class="unixoutputc">AND</span>, only those trerwdb servers that advertised the service <span class="unixoutputc">biEvent</span> are restarted.  If <span class="unixoutputc">ServiceFilter</span> is set to <span class="unixoutputc">NOT</span>, only those trerwdb servers that did not advertise the <span class="unixoutputc">biEvent</span> service are restarted.</p>
<p class="tablebodytext">The value of <span class="unixoutputc">ServiceFilter</span> is ignored if the <span class="unixoutputc">ServiceNames$[]</span> list is empty.  Default is <span class="unixoutputc">OR</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="168"><p class="tablebodytext"><span class="unixoutputc">Verbose</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="456"><p class="tablebodytext">Enables verbose output.</p>
<p class="tablebodytext">If set to TRUE, a message is printed to the standard output when each server is stopped and restarted.</p>
<p class="tablebodytext">If set to TRUE when <span class="unixoutputc">Restart</span> is set to FALSE, verbose output can be used to check the order in which a specified set of servers will restart before performing the restart.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="bodytext">If the stop or startup of a server or process fails, processing continues.  All status information (success and failure) is returned in <span class="unixoutputc">Results?{}</span>.</p>
<p class="bodytext">The following table lists <span class="unixoutputc">Results?{}</span> parameter options.</p>
<p class="bodytext">&nbsp;</p>
<p class="caption">Results?{} Parameter Options</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<th class="tableheading" style="border:1px solid #010101;" width="161"><p class="tableheading">Key</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="62"><p class="tableheading">Type</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="473"><p class="tableheading">Description</p>
</th>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="161"><p class="tablebodytext"><span class="unixoutputc">ServersRestarted</span></p>
</td>
<td style="border:1px solid #010101;" width="62"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="473"><p class="tablebodytext">Number of Tuxedo servers restarted.</p>
<p class="tablebodytext">If all specified servers are restarted correctly, the value is equal to <span class="unixoutputc">TotalServers</span>.</p>
<p class="tablebodytext">If <span class="unixoutputc">biServerRestart&amp;()</span> returns 0 (FALSE), the value may be less than <span class="unixoutputc">TotalServers</span>.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote">If an entire group is restarted, the count is incremented by 1 rather than the number of individual servers in the group. </p></td></tr></table>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="161"><p class="tablebodytext"><span class="unixoutputc">TotalServers</span></p>
</td>
<td style="border:1px solid #010101;" width="62"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="473"><p class="tablebodytext">Total number of Tuxedo servers identified as having to be restarted.</p>
<p class="tablebodytext">The servers are identified by the values in <span class="unixoutputc">ServerNames$[]</span> and <span class="unixoutputc">ServiceNames$[]</span>.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote">If an entire group is restarted, the count is incremented by 1 rather than the number of individual servers in the group. </p></td></tr></table>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="161"><p class="tablebodytext"><span class="unixoutputc">ProcessesRestarted</span></p>
</td>
<td style="border:1px solid #010101;" width="62"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="473"><p class="tablebodytext">Number of BMP-managed processes restarted.</p>
<p class="tablebodytext">If all specified processes are restarted correctly, the value is equal to <span class="unixoutputc">TotalProcesses</span>.</p>
<p class="tablebodytext">If <span class="unixoutputc">biServerRestart&amp;()</span> returns 0 (FALSE), the value may be less than <span class="unixoutputc">TotalProcesses</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="161"><p class="tablebodytext"><span class="unixoutputc">TotalProcesses</span></p>
</td>
<td style="border:1px solid #010101;" width="62"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="473"><p class="tablebodytext">Total number of BMP-managed processes identified as having to be restarted.</p>
<p class="tablebodytext">The processes are identified by the values in <span class="unixoutputc">ProcessNames$[]</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="161"><p class="tablebodytext"><span class="unixoutputc">Servers</span></p>
</td>
<td style="border:1px solid #010101;" width="62"><p class="tablebodytext">Array</p>
</td>
<td style="border:1px solid #010101;" width="473"><p class="tablebodytext">Array of hashes describing the servers and processes processed.</p>
<p class="tablebodytext">The array elements are in the order in which the processes were shut down.</p>
<p class="tablebodytext">The table below contains details of the hash keys.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="bodytext">The following table lists <span class="unixoutputc">Results?{}</span> hash keys.</p>
<p class="bodytext">&nbsp;</p>
<p class="caption">Structure of Hash Elements for Server Key of Results?{}</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<th class="tableheading" style="border:1px solid #010101;" width="126"><p class="tableheading">Key</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="78"><p class="tableheading">Type</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="492"><p class="tableheading">Description</p>
</th>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="126"><p class="tablebodytext"><span class="unixoutputc">Server</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">String</p>
</td>
<td style="border:1px solid #010101;" width="492"><p class="tablebodytext">Name of the server or process.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="126"><p class="tablebodytext"><span class="unixoutputc">GroupId</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="492"><p class="tablebodytext">Group ID of the server.</p>
<p class="tablebodytext">It is only present for Tuxedo servers.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="126"><p class="tablebodytext"><span class="unixoutputc">ServerId</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="492"><p class="tablebodytext">ID of the server.</p>
<p class="tablebodytext">It is only present for Tuxedo servers.</p>
<p class="tablebodytext">The combination of <span class="unixoutputc">GroupId</span> and <span class="unixoutputc">ServerId</span> identifies a Tuxedo server.</p>
<p class="tablebodytext">If the hash represents the restart of a Tuxedo group, the value for this key is undefined.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="126"><p class="tablebodytext"><span class="unixoutputc">Group</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">String</p>
</td>
<td style="border:1px solid #010101;" width="492"><p class="tablebodytext">Name of the Tuxedo group associated with <span class="unixoutputc">GroupId</span>.</p>
<p class="tablebodytext">It is only present for Tuxedo servers.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="126"><p class="tablebodytext"><span class="unixoutputc">ProcessNr</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="492"><p class="tablebodytext">Process number of a BMP-managed process.</p>
<p class="tablebodytext">It is only present for BMP-managed processes. The combination of <span class="unixoutputc">Server</span> and <span class="unixoutputc">ProcessNr</span> identifies a BMP-managed process.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="126"><p class="tablebodytext"><span class="unixoutputc">Status</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="492"><p class="tablebodytext">Restart status of the group, server, or process.</p>
<p class="tablebodytext">The value is based on the <span class="unixoutputc">RESTART_STATUS</span> reference type.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="126"><p class="tablebodytext"><span class="unixoutputc">StopError</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">String</p>
</td>
<td style="border:1px solid #010101;" width="492"><p class="tablebodytext">Error message produced when the server fails to stop.</p>
<p class="tablebodytext">Stop error messages are also printed to <span class="unixoutputc">stdout</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="126"><p class="tablebodytext"><span class="unixoutputc">StartError</span></p>
</td>
<td style="border:1px solid #010101;" width="78"><p class="tablebodytext">String</p>
</td>
<td style="border:1px solid #010101;" width="492"><p class="tablebodytext">Error message produced when the server fails to start.</p>
<p class="tablebodytext">Start error messages are also printed to <span class="unixoutputc">stdout</span>.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Restrictions</p>
<p class="bodytext">The following restrictions and considerations apply:</p>
<ul class="listbullet"><li class="listbullet">This is a local function that should be run using the <span class="unixoutputc">ecpsql</span> utility (for example: <span class="unixoutputc">ecpsql &quot;biServerRestart&amp;(...)&quot;</span>).  The function fails if run using <span class="unixoutputc">ecp</span> or the Convergent Billing <span class="formname">Expression Test</span> window.</li><li class="listbullet">Only servers with an active status in the Tuxedo MIB are restarted.</li><li class="listbullet">The function only restarts servers and processes on the local instance.  If multiple instance restarts are required, the function must be run separately on each instance.</li><li class="listbullet">All dependent processes must also be specified for restart to avoid failures because the function only restarts the specified servers and processes.  For example, ENM and ERT processes must be specified when restarting ERO processes, and trerate processes for BMP or BKR processes.  This does not apply to child processes; for example, if a BKR is restarted by the function, its child processes (ENM, ERT, and ERO) are stopped and restarted by the BKR, and do not need to be specified for restart by this function.</li><li class="listbullet">Processes that have their <span class="unixoutputc">ENABLED</span> attribute set to FALSE are considered for restart.  If an eligible process is running and has the <span class="unixoutputc">ENABLED</span> attribute set to FALSE, it is restarted.  If it is not running, it is not started.  If the <span class="unixoutputc">ENABLED</span> attribute is set to TRUE, the process is always started.</li></ul>


<br><div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="63071.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="12029.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div></body>
</html>


