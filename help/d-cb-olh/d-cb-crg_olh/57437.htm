<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title> ENTITLEMENT_ALLOCATION_TRE_V </title>
<script type="text/javascript" src="open_parent.js"></script>
<link rel="stylesheet" type="text/css" href="pkc.css">
<link rel="stylesheet" type="text/css" href="stylesheet.css">
<meta name="description" content="Configurer's Reference Guide for Singleview Convergent Billing 9.1 ">
<script language="javascript" type="text/javascript" src="dhtml_toc.js"></script>
<script language="JavaScript">
<!--

document.onkeydown = checkChangePage;
function checkChangePage(e)
{
   if (!e) var e = window.event;
   // Don't put the following into the first page
   if ((e.ctrlKey && (e.keyCode == 37))) {
      // Ctrl-Left Arrow was pressed or Page up key pressed at the top of the page
      document.location.href = "48671.htm";
   } else
   // Don't put the following into the late page for a document
   if ((e.ctrlKey && (e.keyCode == 39))) {
      // Ctrl-Right Arrow was pressed or Page down key pressed and at the bottom of the page
      document.location.href = "57436.htm";
   }
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function printpage()
{
	window.print();
}
//-->
</script>
</head>
<body onload="loadParent();MM_preloadImages('left_down.gif','right_down.gif','index_down.gif','contents_down.gif','search_down.gif','print_down.gif');if (isTOCLoaded()) {expand('7526');highlight('57437')}">
<div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="48671.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="57436.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%">
<h2 class="heading2">ENTITLEMENT_ALLOCATION_TRE_V</h2>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'ENTITLEMENT_ALLOCATION_TRE_V' (57437)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="bodytext">The <span class="unixoutputc">ENTITLEMENT_ALLOCATION_TRE_V</span> view defines the allocations for entitlements in Singleview.</p>
<p class="caption">Column Definitions</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<th class="tableheading" style="border:1px solid #010101;" width="198"><p class="tableheading">Column Name</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="126"><p class="tableheading">Properties</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="372"><p class="tableheading">Description</p>
</th>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="198"><p class="tablebodytext"><span class="unixoutputc">ENTITLEMENT_ALLOCATION_</span><br><span class="unixoutputc">ID</span></p>
</td>
<td style="border:1px solid #010101;" width="126"><p class="tablebodytext">NUMBER (15)</p>
<p class="tablebodytext">Not null</p>
<p class="tablebodytext">Read-only</p>
</td>
<td style="border:1px solid #010101;" width="372"><p class="tablebodytext">ID of an allocation for an entitlement.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="198"><p class="tablebodytext"><span class="unixoutputc">ENTITLEMENT_ID</span></p>
</td>
<td style="border:1px solid #010101;" width="126"><p class="tablebodytext">NUMBER (15)</p>
<p class="tablebodytext">Not null</p>
<p class="tablebodytext">Read-only</p>
</td>
<td style="border:1px solid #010101;" width="372"><p class="tablebodytext">ID of the entitlement to which the allocation applies.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="198"><p class="tablebodytext"><span class="unixoutputc">LAST MODIFIED</span></p>
</td>
<td style="border:1px solid #010101;" width="126"><p class="tablebodytext">DATE</p>
<p class="tablebodytext">Not null</p>
<p class="tablebodytext">Read-only</p>
</td>
<td style="border:1px solid #010101;" width="372"><p class="tablebodytext">Date-time at which this row was last modified.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="198"><p class="tablebodytext"><span class="unixoutputc">OPERATOR_ID</span></p>
</td>
<td style="border:1px solid #010101;" width="126"><p class="tablebodytext">NUMBER (8)</p>
<p class="tablebodytext">Not null</p>
<p class="tablebodytext">Read-only</p>
</td>
<td style="border:1px solid #010101;" width="372"><p class="tablebodytext">User who last modified this record.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="198"><p class="tablebodytext"><span class="unixoutputc">PARTITION_NR</span></p>
</td>
<td style="border:1px solid #010101;" width="126"><p class="tablebodytext">NUMBER (2)</p>
<p class="tablebodytext">Not null</p>
<p class="tablebodytext">Read-only</p>
</td>
<td style="border:1px solid #010101;" width="372"><p class="tablebodytext">Customer partition number associated with the entitlement to which this allocation is assigned.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="198"><p class="tablebodytext"><span class="unixoutputc">START_DATE</span></p>
</td>
<td style="border:1px solid #010101;" width="126"><p class="tablebodytext">DATE</p>
<p class="tablebodytext">Not null</p>
</td>
<td style="border:1px solid #010101;" width="372"><p class="tablebodytext">Date-time the allocation commenced.</p>
<p class="tablebodytext">The value cannot be earlier than the <span class="unixoutputc">START_DATE</span> value of the <a id="h58595" class="jump" title="ENTITLEMENT_TRE_V" href="57436.htm" target="_self">entitlement</a>.</p>
<p class="tablebodytext">If the entitlement class is 2 (One-off), the value must equal the <span class="unixoutputc">START_DATE</span> value of the entitlement.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="198"><p class="tablebodytext"><span class="unixoutputc">EXPIRY_DATE</span></p>
</td>
<td style="border:1px solid #010101;" width="126"><p class="tablebodytext">DATE</p>
<p class="tablebodytext">Not null</p>
</td>
<td style="border:1px solid #010101;" width="372"><p class="tablebodytext">Date-time when this allocation expires.</p>
<p class="tablebodytext">It can be:</p>
<ul class="tablelistbullet"><li class="tablelistbullet">Equal to, or later than, <span class="unixoutputc">START_DATE</span>.</li><li class="tablelistbullet">Earlier than <span class="unixoutputc">START_DATE</span> <span class="unixoutputc">for</span> a back-dated cancellation. In this case, the allocation cannot be consumed.</li><li class="tablelistbullet">Set to the end of time. The allocation never expires.</li></ul><p class="tablebodytext">It cannot be set to a date-time later than the <span class="unixoutputc">EXPIRY_DATE</span> of the entitlement associated with the allocation.</p>
<p class="tablebodytext">Multiple allocations may exist with periods that overlap. In this case the allocation with the earliest <span class="unixoutputc">EXPIRY_DATE</span> is consumed first.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="198"><p class="tablebodytext"><span class="unixoutputc">INITIAL_AMOUNT</span></p>
</td>
<td style="border:1px solid #010101;" width="126"><p class="tablebodytext">NUMBER (22,6)</p>
<p class="tablebodytext">Not null</p>
</td>
<td style="border:1px solid #010101;" width="372"><p class="tablebodytext">Amount of the allocation when it was created.</p>
<p class="tablebodytext">It must be greater than or equal to zero.</p>
<p class="tablebodytext">It can be updated, but must not be less than <span class="unixoutputc">CONSUMED_AMOUNT</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="198"><p class="tablebodytext"><span class="unixoutputc">CONSUMED_AMOUNT</span></p>
</td>
<td style="border:1px solid #010101;" width="126"><p class="tablebodytext">NUMBER (22,6)</p>
<p class="tablebodytext">Not null</p>
<p class="tablebodytext">Read-only</p>
</td>
<td style="border:1px solid #010101;" width="372"><p class="tablebodytext">Amount consumed from the allocation. When an allocation is created, it is set to zero.</p>
<p class="tablebodytext">The value increases when the allocation is consumed during rating and billing.</p>
<p class="tablebodytext">Its value must be greater than or equal to zero.</p>
<p class="tablebodytext">The amount of allocation available to be consumed is equal to <span class="unixoutputc">INITIAL_AMOUNT</span>, less <span class="unixoutputc">CONSUMED_AMOUNT</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="198"><p class="tablebodytext"><span class="unixoutputc">TAG</span></p>
</td>
<td style="border:1px solid #010101;" width="126"><p class="tablebodytext">VARCHAR (255)</p>
<p class="tablebodytext">Read-only</p>
</td>
<td style="border:1px solid #010101;" width="372"><p class="tablebodytext">Optional tag associated with this allocation when it is created.</p>
<p class="tablebodytext">This tag is accessible during rating using <span class="unixoutputc">EntitlementAvailable?[]()</span>.  It can only be specified for inserts.  It cannot be updated.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="198"><p class="tablebodytext"><span class="unixoutputc">WARNING_SCHED_FUNC_ID</span></p>
</td>
<td style="border:1px solid #010101;" width="126"><p class="tablebodytext">NUMBER (15)</p>
</td>
<td style="border:1px solid #010101;" width="372"><p class="tablebodytext">ID of the scheduled function to be evaluated when this allocation is about to expire.</p>
<p class="tablebodytext">This column can only contain a value if <span class="unixoutputc">WARNING_ALLOC_FUNCTION_DEFN_ID</span> is not NULL in the associated <span class="unixoutputc">ENTITLEMENT_TRE_V</span> row.</p>
<p class="tablebodytext">When an allocation is inserted, a warning function is automatically scheduled and assigned to the allocation, depending on the details associated with the allocation's entitlement.  However, a value of NULL may be specified on insert to suppress the creation of the warning scheduled function.  A non-NULL value can also be specified on insert to suppress the creation of the default warning scheduled function for this allocation and instead use the specific scheduled function passed in the call for the warning notification.</p>
<p class="tablebodytext">On update, a value of NULL may be specified to delete the current warning scheduled function (if there is one) and hence suppress any warning notification for this allocation.  A non-NULL value may also be specified to set or replace the current warning scheduled function.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="198"><p class="tablebodytext"><span class="unixoutputc">EXPIRY_SCHED_FUNC_ID</span></p>
</td>
<td style="border:1px solid #010101;" width="126"><p class="tablebodytext">NUMBER (15)</p>
</td>
<td style="border:1px solid #010101;" width="372"><p class="tablebodytext">ID of the scheduled function to be evaluated when this allocation expires.</p>
<p class="tablebodytext">This column can only contain a value if <span class="unixoutputc">EXPIRY_ALLOC_FUNCTION_DEFN_ID</span> is not NULL in the associated <span class="unixoutputc">ENTITLEMENT_TRE_V</span> row.</p>
<p class="tablebodytext">When an allocation is inserted, an expiry function is automatically scheduled and assigned to the allocation depending on the details associated with the allocation's entitlement.  However, a value of NULL may be specified on insert to suppress the creation of the expiry scheduled function.  A non-NULL value can also be specified on insert to suppress the creation of the default expiry scheduled function for this allocation and instead use the specific scheduled function passed in the call for the warning notification.</p>
<p class="tablebodytext">On update, a value of NULL may be specified to delete the current expiry scheduled function (if there is one) and hence suppress any expiry notification for this allocation.  A non-NULL value may also be specified to set or replace the current expiry scheduled function.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="198"><p class="tablebodytext"><span class="unixoutputc">SCHEDULE_NEXT_ALLOC_IND_CODE</span></p>
</td>
<td style="border:1px solid #010101;" width="126"><p class="tablebodytext">NUMBER (1)</p>
<p class="tablebodytext">Insert-only</p>
</td>
<td style="border:1px solid #010101;" width="372"><p class="tablebodytext">If specified as part of an insert call with a value of 1, <span class="unixoutputc">EntitlementAllocationInsert&amp;()</span> will create the scheduled function to insert the next recurring allocation after this one.</p>
<p class="tablebodytext">It can only be specified for inserts for allocations associated with recurring entitlements.   It cannot be specified for updates and cannot be queried.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="198"><p class="tablebodytext"><span class="unixoutputc">NEXT_ALLOCATION_DATE</span></p>
</td>
<td style="border:1px solid #010101;" width="126"><p class="tablebodytext">DATE</p>
<p class="tablebodytext">Insert-only</p>
</td>
<td style="border:1px solid #010101;" width="372"><p class="tablebodytext">The allocation date to use for the allocation after this one.  This bypasses the normal calculation of the next allocation date based on the recurring period of the entitlement.  It allows custom allocation dates to be scheduled.</p>
<p class="tablebodytext">A value of NULL will disable the scheduling of the next allocation.</p>
<p class="tablebodytext">It can only be specified for allocations for entitlements of type recurring.</p>
<p class="tablebodytext">Its value must be between the <span class="unixoutputc">START_DATE</span> and the <span class="unixoutputc">EXPIRY_DATE </span>of the entitlement inclusive.</p>
<p class="tablebodytext">A non-NULL value can only be specified if the entitlement is not aligned with the bill cycle of a customer. </p>
<p class="tablebodytext">It cannot be specified for updates and cannot be queried.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="198"><p class="tablebodytext"><span class="unixoutputc">ROUND_PERIOD</span></p>
</td>
<td style="border:1px solid #010101;" width="126"><p class="tablebodytext">NUMBER (4)</p>
<p class="tablebodytext">Insert-only</p>
</td>
<td style="border:1px solid #010101;" width="372"><p class="tablebodytext">Length of the period used to apply rounding in the calculation of the <span class="unixoutputc">EXPIRY_DATE</span> for this allocation and the <span class="unixoutputc">NEXT_ALLOCATION_DATE</span> for the next allocation.  Rounding results in the first allocation for an entitlement having validity and recurring periods less than or equal to their requested durations.</p>
<p class="tablebodytext">It cannot be specified for updates and cannot be queried.</p>
<p class="tablebodytext">It also cannot be specified for entitlement allocations whose entitlements are bill cycle aligned.</p>
<p class="tablebodytext">The calculated <span class="unixoutputc">EXPIRY_DATE</span> will be the maximum date-time (minus 1 second) that is a whole number of <span class="unixoutputc">ROUND_PERIOD</span>s from <span class="unixoutputc">ROUND_DATE</span> that is less than or equal to the date-time that is 1 <span class="unixoutputc">VALIDITY_PERIOD</span> after <span class="unixoutputc">START_DATE</span> (minus 1 second).</p>
<p class="tablebodytext">The calculated <span class="unixoutputc">NEXT_ALLOCATION_DATE</span> will be the maximum date and time that is a whole number of <span class="unixoutputc">ROUND_PERIOD</span>s from <span class="unixoutputc">ROUND_DATE</span> that is less than or equal to the date and time that is 1 <span class="unixoutputc">RECURRING_PERIOD</span> after <span class="unixoutputc">START_DATE</span>.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote">The most common rounding scenario is to round to the nearest day so allocations expire at midnight and the next allocation starts at midnight.  For this case, set <span class="unixoutputc">ROUND_PERIOD</span> to 1 and <span class="unixoutputc">ROUND_PERIOD_UNIT_CODE</span> to 2 (Days).</p></td></tr></table>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="198"><p class="tablebodytext"><span class="unixoutputc">ROUND_PERIOD_UNIT_CODE</span></p>
</td>
<td style="border:1px solid #010101;" width="126"><p class="tablebodytext">NUMBER (1)</p>
<p class="tablebodytext">Insert-only</p>
</td>
<td style="border:1px solid #010101;" width="372"><p class="tablebodytext">Units of the <span class="unixoutputc">ROUND_PERIOD</span>.  Possible values are:</p>
<ul class="tablelistbullet"><li class="tablelistbullet">0 (Seconds)</li><li class="tablelistbullet">1 (Hours)</li><li class="tablelistbullet">2 (Days)</li><li class="tablelistbullet">3 (Weeks)</li><li class="tablelistbullet">4 (Months).</li></ul><p class="tablebodytext">A value must be specified if <span class="unixoutputc">ROUND_PERIOD</span> is specified.</p>
<p class="tablebodytext">It cannot be specified for updates and cannot be queried.</p>
<p class="tablebodytext">The <span class="unixoutputc">ENTITLEMENT_ROUND_PERIOD_UNIT</span> reference type defines the possible values for this column.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="198"><p class="tablebodytext"><span class="unixoutputc">ROUND_DATE</span></p>
</td>
<td style="border:1px solid #010101;" width="126"><p class="tablebodytext">DATE</p>
<p class="tablebodytext">Insert-only</p>
</td>
<td style="border:1px solid #010101;" width="372"><p class="tablebodytext">Date-time used as the basis for rounding calculations.  If not specified, a value of <span class="unixoutputc">1900-01-01 00:00:00</span> is used.</p>
<p class="tablebodytext">It can only be specified if <span class="unixoutputc">ROUND_PERIOD</span> is specified.</p>
<p class="tablebodytext">It cannot be specified for updates and cannot be queried.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>


<br><div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="48671.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="57436.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div></body>
</html>


