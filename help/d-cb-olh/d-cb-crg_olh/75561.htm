<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title> Schedule Variables (SCHEDULE_EVS_V) </title>
<script type="text/javascript" src="open_parent.js"></script>
<link rel="stylesheet" type="text/css" href="pkc.css">
<link rel="stylesheet" type="text/css" href="stylesheet.css">
<meta name="description" content="Configurer's Reference Guide for Singleview Convergent Billing 9.1 ">
<script language="javascript" type="text/javascript" src="dhtml_toc.js"></script>
<script language="JavaScript">
<!--

document.onkeydown = checkChangePage;
function checkChangePage(e)
{
   if (!e) var e = window.event;
   // Don't put the following into the first page
   if ((e.ctrlKey && (e.keyCode == 37))) {
      // Ctrl-Left Arrow was pressed or Page up key pressed at the top of the page
      document.location.href = "6316.htm";
   } else
   // Don't put the following into the late page for a document
   if ((e.ctrlKey && (e.keyCode == 39))) {
      // Ctrl-Right Arrow was pressed or Page down key pressed and at the bottom of the page
      document.location.href = "6320.htm";
   }
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function printpage()
{
	window.print();
}
//-->
</script>
</head>
<body onload="loadParent();MM_preloadImages('left_down.gif','right_down.gif','index_down.gif','contents_down.gif','search_down.gif','print_down.gif');if (isTOCLoaded()) {expand('58085');highlight('75561')}">
<div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="6316.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="6320.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%">
<h2 class="heading2">Schedule Variables (SCHEDULE_EVS_V)</h2>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'Schedule Variables (SCHEDULE_EVS_V)' (75561)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="bodytext">The following table lists entity validation variables associated with the <span class="unixoutputc">SCHEDULE_EVS_V</span> view.</p>
<p class="syntaxheading">Variable Definitions</p>
<table class="tableintopic" width="702" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<th class="tableheading" style="border:1px solid #010101;" width="186"><p class="tableheading">Variable</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="114"><p class="tableheading">View Field</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="96"><p class="tableheading">Type</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="306"><p class="tableheading">Description</p>
</th>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskBaseline</span><br><span class="unixoutputc">Duration&amp;</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">BASELINE_</span><br><span class="unixoutputc">DURATION</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">Expected duration of the task (in seconds).</p>
<p class="tablebodytext">Defaults from the schedule, but can be overridden by the user or entity validation. </p>
<p class="tablebodytext">If the schedule type is configured appropriately, for new tasks it is derived based on the duration of the last 'n' successfully completed tasks. </p>
<p class="tablebodytext">The value must be greater than or equal to 1 and less than or equal to 2147483647.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskDescription$</span></p>
<p class="tablebodytext"><span class="unixoutputc">evOldTaskDescription$</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">DESCRIPTION</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">String</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">Description of the schedule or task.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskEffectiveDate~</span></p>
<p class="tablebodytext"><span class="unixoutputc">evOldTaskEffective</span><br><span class="unixoutputc">Date~</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">EFFECTIVE_</span><br><span class="unixoutputc">DATE</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Date</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">Effective date-time for the task.</p>
<p class="tablebodytext">Used for record definitions and calculation of relevant charges.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskEmailAddress$</span></p>
<p class="tablebodytext"><span class="unixoutputc">evOldTaskEmailAddress$</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">EMAIL_ADDRESS</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">String (255)</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">Email address to which the task results are sent.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskFirstDate~</span></p>
<p class="tablebodytext"><span class="unixoutputc">evOldTaskFirstDate~</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">FIRST_DATE</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Date</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">Scheduled start date-time for the first task on a schedule.</p>
<p class="tablebodytext">Used to access the:</p>
<ul class="tablelistbullet"><li class="tablelistbullet"><span class="fieldname">First Date</span> field on the <span class="formname">Schedule Definition</span> form</li><li class="tablelistbullet"><span class="fieldname">Start Date</span> field on the <span class="formname">One-off Task Definition</span> form. </li></ul><p class="tablebodytext"><span class="unixoutputc">evTaskFirstDate~ </span>is null on the <span class="formname">Task Details </span>form.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskGeneral1$</span> - <span class="unixoutputc">evTaskGeneral25$</span></p>
<p class="tablebodytext"><span class="unixoutputc">evOldTaskGeneral1$</span> - <span class="unixoutputc">evOldTaskGeneral25$</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">GENERAL_1</span> - <span class="unixoutputc">GENERAL_25</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">String (255)</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">General fields 1 - 25.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskGroupId&amp;</span></p>
<p class="tablebodytext"><span class="unixoutputc">evOldTaskGroupId&amp;</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">GROUP_ID</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">ID of the system security group that has access to the task record.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskImmediateStart&amp;</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">IMMEDIATE_</span><br><span class="unixoutputc">START_IND_</span><br><span class="unixoutputc">CODE</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">Specifies whether a task starts immediately.  Valid values are:</p>
<ul class="tablelistbullet"><li class="tablelistbullet">1: Task starts as soon as its prerequisites are satisfied (subject to resource profile and compatibility constraints), rather than waiting for <span class="unixoutputc">evTaskScheduledStartDate~</span>. <p class="tablelistcontinue">A task with no prerequisites starts when the previous task in the schedule is completed.</p>
</li><li class="tablelistbullet">2 or 3: Task runs immediately, irrespective of the status of any prerequisite tasks, resource profile constraints, or resource compatibility constraints. <p class="tablelistcontinue">These values can only be used when a task has <span class="unixoutputc">evTaskStatus&amp;</span> of Stalled. However, when set, these values remain on the task during processing as a record that it was updated to run immediately.</p>
<p class="tablelistcontinue">These values cannot be used for tasks with a status of Pending or Held.</p>
</li></ul></td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskInitialHeld</span><br><span class="unixoutputc">IndCode&amp;</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">INITIAL_HELD_</span><br><span class="unixoutputc">IND_CODE</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">If set to 1, tasks are moved to Held status instead of being run. Manual intervention is required to execute the task.</p>
<p class="tablebodytext">Expressions on the schedule type can be used to notify users that tasks have entered a Held status.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskInstanceName$</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">INSTANCE_NAME</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">String (9)</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">Name of the instance on which the task was run.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskLastDate~</span></p>
<p class="tablebodytext"><span class="unixoutputc">evOldTaskLastDate~</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">LAST_DATE</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Date</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">Last date-time that a task for this schedule is allowed to occur.</p>
<p class="tablebodytext">If not specified, tasks are scheduled indefinitely.</p>
<p class="tablebodytext">It cannot be specified for a one-off task.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskLastModified~</span></p>
<p class="tablebodytext"><span class="unixoutputc">evOldTaskLastModified~</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">LAST_MODIFIED</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Date</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">Date-time on which the task was last modified.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskMaster</span><br><span class="unixoutputc">ScheduleId&amp;</span></p>
<p class="tablebodytext"><span class="unixoutputc">evOldTaskMaster</span><br><span class="unixoutputc">ScheduleId&amp;</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">MASTER_</span><br><span class="unixoutputc">SCHEDULE_ID</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">ID of the schedule from which this schedule has been replicated.</p>
<p class="tablebodytext">It cannot be specified when inserting or updating a schedule.</p>
<p class="tablebodytext">It is automatically populated when a schedule is replicated to an instance.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskMaxDuration&amp;</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">MAX_DURATION</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">Maximum allowed duration (in seconds) for each task for a schedule.</p>
<p class="tablebodytext">For each task, it defaults to the maximum duration set for the schedule type but can be overridden (for example, using an expression in the schedule type to calculate the value).</p>
<p class="tablebodytext">Valid values are between the value of <span class="unixoutputc">evTaskBaselineDuration&amp;</span> and 2147483647 inclusive.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskOperatorId&amp;</span></p>
<p class="tablebodytext"><span class="unixoutputc">evOldTaskOperatorId&amp;</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">OPERATOR_ID</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">ID of the user who created or last modified the task.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskPending</span><br><span class="unixoutputc">TaskIndCode&amp;</span></p>
<p class="tablebodytext"><span class="unixoutputc">evOldTaskPending</span><br><span class="unixoutputc">TaskIndCode&amp;</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">PENDING_TASK_</span><br><span class="unixoutputc">IND_CODE</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">Indicates if a schedule has tasks that need to be generated or re-generated.</p>
<p class="tablebodytext">It is automatically set when a:</p>
<ul class="tablelistbullet"><li class="tablelistbullet">New schedule is created.</li><li class="tablelistbullet">Schedule has been updated and regeneration of tasks has been requested.</li><li class="tablelistbullet">Task with a Pending status is updated to another status.</li></ul><p class="tablebodytext">It is set to NULL when the pending tasks have been generated or re-generated.</p>
<p class="tablebodytext">The generation of tasks for schedules that have this schedule as a pre-requisite is delayed until this value is NULL.</p>
<p class="tablebodytext">It cannot be:</p>
<ul class="tablelistbullet"><li class="tablelistbullet">Specified when inserting or updating schedules.</li><li class="tablelistbullet">Set to any value other than 1 (True) or NULL.</li></ul></td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskPendingTask</span><br><span class="unixoutputc">ScheduleId&amp;</span></p>
<p class="tablebodytext"><span class="unixoutputc">evOldTaskPendingTask</span><br><span class="unixoutputc">ScheduleId&amp;</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">PENDING_TASK_</span><br><span class="unixoutputc">SCHEDULE_ID</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">ID of a schedule that has stalled task generation for this schedule.</p>
<p class="tablebodytext">It can only be set if <span class="unixoutputc">evTaskPendingTaskIndCode&amp;</span> is set to 1 (True).</p>
<p class="tablebodytext">When set to 1 (True) by the scheduler, the schedule with the ID:</p>
<ul class="tablelistbullet"><li class="tablelistbullet">Is a pre-requiste of this schedule.</li><li class="tablelistbullet">Must have its <span class="unixoutputc">evTaskPendingTaskIndCode&amp;</span> set to 1 (True).</li></ul><p class="tablebodytext">It cannot be specified when inserting or updating a schedule.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskPreschedule</span><br><span class="unixoutputc">Count&amp;</span></p>
<p class="tablebodytext"><span class="unixoutputc">evOldTaskPrescheduleCount&amp;</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">PRESCHEDULE_</span><br><span class="unixoutputc">COUNT</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">Number of tasks that must be scheduled in advance at any time.</p>
<p class="tablebodytext">It must be set to a value greater than 0 and defaults to 1.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskPurgePeriod&amp;</span></p>
<p class="tablebodytext"><span class="unixoutputc">evOldTaskPurgePeriod&amp;</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">PURGE_PERIOD</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">Maximum number of days for which temporary data associated with the task is kept.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskRepeatUnits&amp;</span></p>
<p class="tablebodytext"><span class="unixoutputc">evOldTaskRepeatUnits&amp;</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">REPEAT_UNITS</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">Number of the repeat type units specified in <span class="unixoutputc">evTaskStartRepeatTypeCode&amp;</span> that must be allowed between tasks that correspond to this schedule.</p>
<p class="tablebodytext">For example, if set to 3 for a repeat type unit of months, a gap of three months is created between tasks.</p>
<p class="tablebodytext">It cannot be specified for a one-off task.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskReplicate</span><br><span class="unixoutputc">GroupCode&amp;</span></p>
<p class="tablebodytext"><span class="unixoutputc">evOldTaskReplicate</span><br><span class="unixoutputc">GroupCode&amp;</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">REPLICATION_</span><br><span class="unixoutputc">GROUP_CODE</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">Replication group that defines the set of instances to which this schedule is replicated.</p>
<p class="tablebodytext">It can only contain a value if <span class="unixoutputc">evTaskReplicateIndCode&amp;</span> is set to 1 (True).</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskReplicateInd</span><br><span class="unixoutputc">Code&amp;</span></p>
<p class="tablebodytext"><span class="unixoutputc">evOldTaskReplicateInd</span><br><span class="unixoutputc">Code&amp;</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">REPLICATE_</span><br><span class="unixoutputc">IND_CODE</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">If set to 1 (True), this schedule is replicated to instances listed the replication group specified in <span class="unixoutputc">evTaskReplicateGroupCode&amp;</span>.</p>
<p class="tablebodytext">New schedules are created on any instances in the replication group defined in <span class="unixoutputc">evTaskReplicateGroupCode&amp;</span> that don't already have this schedule if this variable is:</p>
<ul class="tablelistbullet"><li class="tablelistbullet">Already set to 1 (True) for a schedule being updated.</li><li class="tablelistbullet">Set to 1 (True) during an update operation.</li></ul><p class="tablebodytext">Existing replicated schedules are updated to contain the same information as this schedule.</p>
<p class="tablebodytext">If not set to 1 (True), it must be null.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskScheduleStatus</span><br><span class="unixoutputc">Code&amp;</span></p>
<p class="tablebodytext"><span class="unixoutputc">evTaskScheduleStatus</span><br><span class="unixoutputc">Code&amp;</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">SCHEDULE_</span><br><span class="unixoutputc">STATUS_CODE</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">Indicates the status of the schedule. Possible values are:</p>
<ul class="tablelistbullet"><li class="tablelistbullet">Active</li><li class="tablelistbullet">Complete.</li></ul><p class="tablebodytext">Values are defined in the <span class="unixoutputc">SCHEDULE_STATUS</span> reference type.</p>
<p class="tablebodytext">It defaults to Active, and is not normally specified for new schedules.</p>
<p class="tablebodytext">It can be set to Complete in order to archive in old schedules.</p>
<p class="tablebodytext">It cannot be specified for one-off tasks.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskScheduleId&amp;</span></p>
<p class="tablebodytext"><span class="unixoutputc">evOldTaskScheduleId&amp;</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">SCHEDULE_ID</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">ID of the schedule that ran the task.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskScheduleName$</span></p>
<p class="tablebodytext"><span class="unixoutputc">evOldTaskScheduleName$</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">SCHEDULE_NAME</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">String</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">Name used by users to refer to the schedule.</p>
<p class="tablebodytext">For example, to identify the invoice cycle that generates invoices on the first day of each month, the name INV-01 can be used.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskScheduleType</span><br><span class="unixoutputc">DisplayName$</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">SCHEDULE_</span><br><span class="unixoutputc">TYPE_DISPLAY_</span><br><span class="unixoutputc">NAME</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">String</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">Display name of the type of schedule associated with the task.</p>
<p class="tablebodytext">Only one of the following can be specified when creating a schedule:</p>
<ul class="tablelistbullet"><li class="tablelistbullet"><span class="unixoutputc">evTaskScheduleTypeId$</span></li><li class="tablelistbullet"><span class="unixoutputc">evTaskScheduleTypeDisplayName$</span></li><li class="tablelistbullet"><span class="unixoutputc">evTaskScheduleTypeName$.</span></li></ul></td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskScheduleTypeId&amp;</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">SCHEDULE_</span><br><span class="unixoutputc">TYPE_ID</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">ID of the schedule type associated with the schedule.</p>
<p class="tablebodytext">Only one of the following can be specified when creating a schedule:</p>
<ul class="tablelistbullet"><li class="tablelistbullet"><span class="unixoutputc">evTaskScheduleTypeId$</span></li><li class="tablelistbullet"><span class="unixoutputc">evTaskScheduleTypeDisplayName$</span></li><li class="tablelistbullet"><span class="unixoutputc">evTaskScheduleTypeName$.</span></li></ul></td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskScheduleType</span><br><span class="unixoutputc">Name$</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">SCHEDULE_</span><br><span class="unixoutputc">TYPE_NAME</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">String</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">Name of the type of schedule associated with the task.</p>
<p class="tablebodytext">Only one of the following can be specified when creating a schedule:</p>
<ul class="tablelistbullet"><li class="tablelistbullet"><span class="unixoutputc">evTaskScheduleTypeId$</span></li><li class="tablelistbullet"><span class="unixoutputc">evTaskScheduleTypeDisplayName$</span></li><li class="tablelistbullet"><span class="unixoutputc">evTaskScheduleTypeName$.</span></li></ul></td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskServerCommand</span><br><span class="unixoutputc">Args$</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">SERVER_</span><br><span class="unixoutputc">COMMAND_ARGS</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">String</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">Additional server command-line parameters used when invoking the task.</p>
<p class="tablebodytext">If specified, the command-line parameters are added to any command-line parameters specified by the schedule type (the original parameters are not replaced).</p>
<p class="tablebodytext">The value defaults from the task's schedule.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskStartRepeatType</span><br><span class="unixoutputc">Code&amp;</span></p>
<p class="tablebodytext"><span class="unixoutputc">evOldTaskStartRepeat</span><br><span class="unixoutputc">TypeCode&amp;</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">START_REPEAT_</span><br><span class="unixoutputc">TYPE_CODE</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">Type of delay that must be allowed for tasks of this schedule.</p>
<p class="tablebodytext">It is combined with the value of <span class="unixoutputc">evTaskRepeatUnits&amp;</span> to indicate how many units of the repeat type must be incorporated into the delay.</p>
<p class="tablebodytext">Valid values are (where n and k are derived from <span class="unixoutputc">evTaskFirstDate~</span>):</p>
<ul class="tablelistbullet"><li class="tablelistbullet">1 (Month-Start)<p class="tablelistcontinue">nth day-of-week of kth week from start of month</p>
</li><li class="tablelistbullet">2 (Month-End)<p class="tablelistcontinue">nth day-of-week of kth week from end of month</p>
</li><li class="tablelistbullet">3 (Month-Day)<p class="tablelistcontinue">nth day of the month</p>
</li><li class="tablelistbullet">4 (Month-End-Day)<p class="tablelistcontinue">nth day of the month from end of month</p>
</li><li class="tablelistbullet">5 (Week)<p class="tablelistcontinue">nth day of the week.</p>
</li><li class="tablelistbullet">6 (Day)</li><li class="tablelistbullet">7 (Hour)</li><li class="tablelistbullet">8 (Minute)</li><li class="tablelistbullet">9 (Second)</li></ul><p class="tablebodytext">Values are defined in the <span class="unixoutputc">REPEAT_TYPE</span> reference type.</p>
<p class="tablebodytext">It cannot be specified for a one-off schedule.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskSuppressOverdue</span><br><span class="unixoutputc">TaskIndCode&amp;</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">SUPPRESS_</span><br><span class="unixoutputc">OVERDUE_</span><br><span class="unixoutputc">TASK_IND_CODE</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">When set to 1 (True), prevents overdue tasks from being generated. A task is overdue when the value of <span class="unixoutputc">evTaskScheduledStartDate~</span> is less than the current date-time.</p>
<p class="tablebodytext">It is often used:</p>
<ul class="tablelistbullet"><li class="tablelistbullet">In development and test environments to avoid creating overdue tasks when servers are shut down for a long period of time.</li><li class="tablelistbullet">To load operational schedules into a new environment.</li></ul><p class="tablebodytext">Must be set to either 1 (True) or null.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskTaskCreation</span><br><span class="unixoutputc">Expr$</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">TASK_</span><br><span class="unixoutputc">CREATION_EXPR</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">String</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">Expression executed before the creation of a new task.</p>
<p class="tablebodytext">It can be used to modify the values of most task detail variables before task creation.</p>
<p class="tablebodytext">The specified expression must return an integer.</p>
<p class="tablebodytext">If the expression returns:</p>
<ul class="tablelistbullet"><li class="tablelistbullet">An error, the error is logged and the task is created without any changes to its details.</li><li class="tablelistbullet">A non-zero value, the task is created with the appropriate details updated by the expression.</li><li class="tablelistbullet">0 (FALSE), the:</li></ul><ol class="tablelistnumber2"><li class="tablelistnumber2">Task is suppressed and not created.</li><li class="tablelistnumber2">Next task is created, the expression called for it, and the return value evaluated.</li></ol><p class="tablebodytext">The suppression process repeats until one of the following occurs:</p>
<ul class="tablelistbullet"><li class="tablelistbullet">The expression returns a value other than 0.</li><li class="tablelistbullet">200 consecutive tasks have been suppressed.</li></ul><p class="tablebodytext">After 200 consecutive suppressions, the task is created regardless of the expression's return value and a warning is logged.</p>
<p class="tablebodytext">This variable can be used to implement more complex repeating patterns than those supported by <span class="unixoutputc">evTaskStartRepeatTypeCode&amp;</span> (for example, to suppress tasks on public holidays).</p>
<p class="tablebodytext">Expressions can be specified in the extensible non-exclusive list of expressions defined in the <span class="unixoutputc">TASK_CREATION_LIST</span> reference type.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">evTaskTypeCode&amp;</span></p>
</td>
<td style="border:1px solid #010101;" width="114"><p class="tablebodytext"><span class="unixoutputc">TASK_TYPE_</span><br><span class="unixoutputc">CODE</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="306"><p class="tablebodytext">Task type, as defined by the schedule type.</p>
<p class="tablebodytext">It is based on the  <span class="unixoutputc">TASK_TYPE</span> reference type.</p>
<p class="tablebodytext">The table below lists values and descriptions.</p>
</td>
</tr>

</table>
<p class="tablebodytext">&nbsp;</p>
<p class="bodytext">The following table lists valid values for <span class="unixoutputc">evTaskTypeCode&amp;</span>.</p>
<p class="bodytext">&nbsp;</p>
<p class="caption">Valid Values for evTaskTypeCode&amp;</p>
<table class="tableintopic" width="702" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<th class="tableheading" style="border:1px solid #010101;" width="60"><p class="tableheading">Code</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="132"><p class="tableheading">Value</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="510"><p class="tableheading">Schedule Type Description</p>
</th>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="60"><p class="tablebodytext">1</p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">Bill Cycle</p>
</td>
<td style="border:1px solid #010101;" width="510"><p class="tablebodytext">Correspond to a standard batch invoice generation cycle (bill cycle).</p>
<p class="tablebodytext">Only schedules of this type can be referenced in places where the schedule corresponds to an invoice cycle (for example, in <span class="unixoutputc">CUSTOMER_NODE_HISTORY</span> and <span class="unixoutputc">INVOICE_MESSAGE</span>).</p>
<p class="tablebodytext">Schedules of this type create rows in the <span class="unixoutputc">BILL_RUN</span> table when their tasks are run for the first time.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="60"><p class="tablebodytext">2</p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">Client Based Report (deprecated)</p>
</td>
<td style="border:1px solid #010101;" width="510"><p class="tablebodytext">Invoke a client based report, implemented using Impromptu.  This value is no longer supported.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="60"><p class="tablebodytext">3</p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">Report</p>
</td>
<td style="border:1px solid #010101;" width="510"><p class="tablebodytext">Report generated by the server and stored in an image format in the <span class="unixoutputc">TASK_QUEUE_RESULT</span> table.</p>
<p class="tablebodytext">The report can be viewed by clicking the <strong class="buttons">Report</strong> button on the <span class="formname">Task Detail</span> form, or using the <span class="unixoutputc">biReportImageRetrieve$()</span> function.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="60"><p class="tablebodytext">4</p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">Server Command</p>
</td>
<td style="border:1px solid #010101;" width="510"><p class="tablebodytext">General purpose server commands.</p>
<p class="tablebodytext">The command performs some action on the server with progress and results displayed in the <span class="unixoutputc">TASK_QUEUE_RESULT</span> table.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="60"><p class="tablebodytext">5</p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">Bill Run Operation</p>
</td>
<td style="border:1px solid #010101;" width="510"><p class="tablebodytext">Perform an operation or set of operations on a bill run.</p>
<p class="tablebodytext">Schedules of this type are usually configured to commence immediately.  The first parameter is the ID of the bill run on which the schedule operates.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="60"><p class="tablebodytext">6</p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">Bill Run Customer Operation</p>
</td>
<td style="border:1px solid #010101;" width="510"><p class="tablebodytext">Perform an operation or set of operations for a specific customer hierarchy on a bill run.</p>
<p class="tablebodytext">Schedules of this type are usually configured to commence immediately.  The first parameter is the ID of the bill run on which the schedule operates.  The second parameter is the ID of the root customer node on which the bill run operation is performed.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="60"><p class="tablebodytext">7</p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">QA Bill Cycle</p>
</td>
<td style="border:1px solid #010101;" width="510"><p class="tablebodytext">Correspond to a Quality Assurance or Temporary invoice generation cycle.</p>
<p class="tablebodytext">The first parameter references the main invoice generations bill cycle for which a QA run is performed.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="60"><p class="tablebodytext">8</p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">Immediate Invoice Run</p>
</td>
<td style="border:1px solid #010101;" width="510"><p class="tablebodytext">Perform an immediate invoice run for a specified customer hierarchy.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="60"><p class="tablebodytext">9</p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">Immediate Statement Run</p>
</td>
<td style="border:1px solid #010101;" width="510"><p class="tablebodytext">Perform an immediate statement (QA) run for a specified customer hierarchy.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="60"><p class="tablebodytext">10</p>
</td>
<td style="border:1px solid #010101;" width="132"><p class="tablebodytext">Bill Run Operation (Prerequisite)</p>
</td>
<td style="border:1px solid #010101;" width="510"><p class="tablebodytext">Perform a set of operations on a bill run associated with a prerequisite task.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>


<br><div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="6316.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="6320.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div></body>
</html>


