<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title> CustomerNodeInsert&amp;() </title>
<script type="text/javascript" src="open_parent.js"></script>
<link rel="stylesheet" type="text/css" href="pkc.css">
<link rel="stylesheet" type="text/css" href="stylesheet.css">
<meta name="description" content="Configurer's Reference Guide for Singleview Convergent Billing 9.1 ">
<script language="javascript" type="text/javascript" src="dhtml_toc.js"></script>
<script language="JavaScript">
<!--

document.onkeydown = checkChangePage;
function checkChangePage(e)
{
   if (!e) var e = window.event;
   // Don't put the following into the first page
   if ((e.ctrlKey && (e.keyCode == 37))) {
      // Ctrl-Left Arrow was pressed or Page up key pressed at the top of the page
      document.location.href = "14498.htm";
   } else
   // Don't put the following into the late page for a document
   if ((e.ctrlKey && (e.keyCode == 39))) {
      // Ctrl-Right Arrow was pressed or Page down key pressed and at the bottom of the page
      document.location.href = "14501.htm";
   }
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function printpage()
{
	window.print();
}
//-->
</script>
</head>
<body onload="loadParent();MM_preloadImages('left_down.gif','right_down.gif','index_down.gif','contents_down.gif','search_down.gif','print_down.gif');if (isTOCLoaded()) {expand('11007');expand('10992');highlight('14500')}">
<div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="14498.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="14501.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%">
<h3 class="heading3">CustomerNodeInsert&amp;()</h3>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'CustomerNodeInsert&amp;()' (14500)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="syntaxheading">Syntax</p>
<table class="tableintopic" width="546" cellpadding="2" cellspacing="0" border="0" style="border-collapse:collapse">
<tr align="left" valign="top">
<td class="tableheading" width="276"><p class="tableheading">Interface 1</p>
</td>
<td width="42"><p class="tablebodytext">&nbsp;</p>
</td>
<td class="tableheading" width="228"><p class="tableheading">Interface 2</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="276"><pre class="unixinputp">CustomerNodeInsert&amp;(    StartDate~,    var&nbsp;LastModified~,    const FieldNames$[],    const StringFieldValues$[],    const IntegerFieldValues&amp;[],    const RealFieldValues#[],    const DateFieldValues~[]<span class="unixinputc">)</span></pre>
</td>
<td width="42"><p class="tablebodytext">&nbsp;</p>
</td>
<td width="228"><pre class="unixinputp">CustomerNodeInsert&amp;(    StartDate~,    var&nbsp;LastModified~,    const FieldNames$[],    const FieldValues?[])</pre>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Description</p>
<p class="bodytext">Inserts customer node details into the database.</p>
<p class="syntaxheading">Attributes</p>
<table class="tableintopic" width="282" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="bold">Application Environment</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Any</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="bold">Context</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Any</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="bold">Method</span></p>
</td>
<td style="border:1px solid #010101;" width="96"><p class="tablebodytext">Local</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td class="tableheading" style="border:1px solid #010101;" width="185"><p class="tableheading">Parameter</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="511"><p class="tableheading">Description</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="185"><p class="tablebodytext"><span class="unixoutputc">StartDate~</span></p>
</td>
<td style="border:1px solid #010101;" width="511"><p class="tablebodytext">In:  Start date-time for the new customer node.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="185"><p class="tablebodytext"><span class="unixoutputc">LastModified~</span></p>
</td>
<td style="border:1px solid #010101;" width="511"><p class="tablebodytext">Out:  Last modified date-time of the inserted customer node.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="185"><p class="tablebodytext"><span class="unixoutputc">FieldNames$[]</span></p>
</td>
<td style="border:1px solid #010101;" width="511"><p class="tablebodytext">In:  List of fields to insert, which correspond to columns in the <span class="unixoutputc">CUSTOMER_NODE_TRE_V</span> view.</p>
<p class="tablebodytext">The minimum set of required fields are:</p>
<ul class="tablelistbullet"><li class="tablelistbullet"><span class="unixoutputc">NODE_NAME</span></li><li class="tablelistbullet"><span class="unixoutputc">CUSTOMER_NODE_TYPE_ID</span></li><li class="tablelistbullet"><span class="unixoutputc">CUSTOMER_NODE_STATUS_CODE</span></li><li class="tablelistbullet"><span class="unixoutputc">PERSON_ID</span>.</li></ul><p class="tablebodytext">For more information, refer to <span class="referrals"><span class="referrals">Remarks</span></span> below.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="185"><p class="tablebodytext"><span class="unixoutputc">FieldValues?[]</span></p>
</td>
<td style="border:1px solid #010101;" width="511"><p class="tablebodytext">In:  Inserted field values (corresponding to the fields listed in <span class="unixoutputc">FieldNames$[])</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="185"><p class="tablebodytext"><span class="unixoutputc">StringFieldValues$[]</span></p>
</td>
<td style="border:1px solid #010101;" width="511"><p class="tablebodytext">In:  Values of string fields to insert, in the same order as their names are specified in <span class="unixoutputc">FieldNames$[]</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="185"><p class="tablebodytext"><span class="unixoutputc">IntegerFieldValues&amp;[]</span></p>
</td>
<td style="border:1px solid #010101;" width="511"><p class="tablebodytext">In:  Values of integer fields to insert, in the same order as their names are specified in <span class="unixoutputc">FieldNames$[]</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="185"><p class="tablebodytext"><span class="unixoutputc">RealFieldValues#[]</span></p>
</td>
<td style="border:1px solid #010101;" width="511"><p class="tablebodytext">In:  Values of real fields to insert, in the same order as their names are specified in <span class="unixoutputc">FieldNames$[]</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="185"><p class="tablebodytext"><span class="unixoutputc">DateFieldValues~[]</span></p>
</td>
<td style="border:1px solid #010101;" width="511"><p class="tablebodytext">In:  Values of date fields to insert, in the same order as their names are specified in <span class="unixoutputc">FieldNames$[]</span>.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Returns</p>
<p class="bodytext">ID assigned to the new customer node, and the last modified date of the record if successful; otherwise, an error is raised.</p>
<p class="syntaxheading">Remarks</p>
<p class="bodytext">The function supports customer node history records with sub-day granularity. That is, <span class="unixoutputc">StartDate~</span> can specify a time component.</p>
<p class="bodytext">The names of inserted fields are passed in the <span class="unixoutputc">FieldNames$[]</span> array.</p>
<p class="bodytext">A primary account for the customer is automatically created in the <span class="unixoutputc">ACCOUNT</span> table using <span class="unixoutputc"><a id="h63999" class="jump" title="biAccountInsert&amp;()" href="11097.htm" target="_self">biAccountInsert&amp;()</a></span>.  If <span class="unixoutputc">TRANSFERRED_ACCOUNT_ID</span> is specified, it is passed to <span class="unixoutputc">biAccountInsert&amp;()</span>.  </p>
<p class="bodytext">The following table lists the methods used by <span class="unixoutputc">biAccountInsert&amp;()</span> to obtain the values of <span class="unixoutputc">PRIME_ACCOUNT_ID</span> and <span class="unixoutputc">PRIME_ACCOUNT_NAME</span>.</p>
<p class="bodytext">&nbsp;</p>
<p class="caption">PRIME_ACCOUNT_ID and PRIME_ACCOUNT_NAME Values </p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td class="tableheading" style="border:1px solid #010101;" width="234"><p class="tableheading">PRIME_ACCOUNT_ID</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="228"><p class="tableheading">PRIME_ACCOUNT_NAME</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="234"><p class="tableheading">Result</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="234"><p class="tablebodytext">Not specified.</p>
</td>
<td style="border:1px solid #010101;" width="228"><p class="tablebodytext">Not specified.</p>
</td>
<td style="border:1px solid #010101;" width="234"><p class="tablebodytext"><span class="unixoutputc">PRIME_ACCOUNT_ID</span> and <span class="unixoutputc">PRIME_ACCOUNT_NAME</span> are derived.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="234"><p class="tablebodytext">Specified using <span class="unixoutputc">FieldNames$[]</span>.</p>
</td>
<td style="border:1px solid #010101;" width="228"><p class="tablebodytext">Not specified.</p>
</td>
<td style="border:1px solid #010101;" width="234"><p class="tablebodytext"><span class="unixoutputc">PRIME_ACCOUNT_ID</span> is used as the account ID, and <span class="unixoutputc">PRIME_ACCOUNT_NAME</span> is derived.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="234"><p class="tablebodytext">Not specified.</p>
</td>
<td style="border:1px solid #010101;" width="228"><p class="tablebodytext">Specified using <span class="unixoutputc">FieldNames$[]</span>.</p>
</td>
<td style="border:1px solid #010101;" width="234"><p class="tablebodytext"><span class="unixoutputc">PRIME_ACCOUNT_ID</span> is derived, and <span class="unixoutputc">PRIME_ACCOUNT_NAME</span> is used as the account name.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="234"><p class="tablebodytext">Specified using <span class="unixoutputc">FieldNames$[]</span>.</p>
</td>
<td style="border:1px solid #010101;" width="228"><p class="tablebodytext">Specified using <span class="unixoutputc">FieldNames$[]</span>.</p>
</td>
<td style="border:1px solid #010101;" width="234"><p class="tablebodytext"><span class="unixoutputc">PRIME_ACCOUNT_ID</span> is used as the acount ID, and <span class="unixoutputc">PRIME_ACCOUNT_NAME</span> as the account name.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="bodytext">When specifying <span class="unixoutputc">FieldNames$[]</span> and <span class="unixoutputc">FieldValues?[]</span>, the following applies:</p>
<ul class="listbullet"><li class="listbullet">If <span class="unixoutputc">EFFECTIVE_END_DATE</span> is specified, the date must be set to the end of time (default value).<p class="listcontinue">Duplicate <span class="unixoutputc">NODE_NAME</span> values for customer nodes with the same parent are permitted if the <span class="unixoutputc">DUPLICATE_NODE_NAME_IND_CODE</span> field is set to TRUE.</p>
<p class="listcontinue">Root customer nodes (that is nodes with a <span class="unixoutputc">PARENT_CUSTOMER_NODE_ID</span> value of NULL) can have duplicate node names (see the <span class="referrals">System Configuration Guide for Singleview Convergent Billing</span>). </p>
</li><li class="listbullet">If <span class="unixoutputc">CURRENCY_ID</span> and <span class="unixoutputc">CREDIT_RATING_CODE</span> are not specified, the values default from the customer type.</li><li class="listbullet">If <span class="unixoutputc">INVOICE_FORMAT_ID</span> or <span class="unixoutputc">INVOICE_FORMAT_NAME</span> are not specified, they are derived from the default in the customer type.</li><li class="listbullet">If the customer is a child customer and <span class="unixoutputc">REPORT_LEVEL_CODE</span> is not specified, <span class="unixoutputc">REPORT_LEVEL_CODE</span> defaults to the customer type's report level code. <p class="listcontinue">If the customer type does not specify a default report level code, the customer's <span class="unixoutputc">REPORT_LEVEL_CODE</span> will default to Invoice. </p>
</li><li class="listbullet">If the value of <span class="unixoutputc">REPORT_LEVEL_CODE</span> is:<ul class="listdashbullet2"><li class="listdashbullet2">3 (No Reporting), the postal address attributes can be left blank. If not specified, it defaults to the contact person's <span class="unixoutputc">POSTAL_ADDRESS_ID</span> (or <span class="unixoutputc">HOME_ADDRESS_ID</span> or <span class="unixoutputc">WORK_ADDRESS_ID</span> if only one of the three address are specified).</li><li class="listdashbullet2">2 (Statement) or 3 (No Reporting), the <span class="unixoutputc">INVOICE_ACCOUNT_ID</span> for the customer's primary account must be specified.</li></ul></li><li class="listbullet">If <span class="unixoutputc">SCHEDULE_ID</span>, <span class="unixoutputc">SCHEDULE_NAME</span>, or <span class="unixoutputc">PREPAID_IND_CODE</span> is not specified, and the customer node is a root customer, the customer node is assigned a default schedule.  The default schedule is the schedule with the earliest task effective start date that is active between the <span class="unixoutputc">EFFECTIVE_START_DATE</span> and the <span class="unixoutputc">EFFECTIVE_END_DATE</span> of the customer node.<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="listnote">If the customer node being inserted is a child node, its schedule is derived from its parent node.</p></td></tr></table>
</li><li class="listbullet">If <span class="unixoutputc">PREPAID_IND_CODE</span> is specified:<ul class="listdashbullet2"><li class="listdashbullet2">Non zero-values are interpreted as 1 (TRUE).</li><li class="listdashbullet2">0 (FALSE) is interpreted as NULL.</li></ul></li><li class="listbullet">If <span class="unixoutputc">SCHEDULE_ID</span> or <span class="unixoutputc">SCHEDULE_NAME</span> is specified as NULL, or <span class="unixoutputc">PREPAID_IND_CODE</span> is specified with a non-zero value, the customer node is: <ul class="listdashbullet2"><li class="listdashbullet2">Not assigned a schedule. </li><li class="listdashbullet2">Defined as prepaid without statements.</li></ul><p class="listcontinue">If <span class="unixoutputc">PREPAID_IND_CODE</span> is set to a non-zero value, <span class="unixoutputc">SCHEDULE_ID</span> defaults to NULL. </p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="listnote">If either of <span class="unixoutputc">SCHEDULE_ID</span> or <span class="unixoutputc">SCHEDULE_NAME</span>, and <span class="unixoutputc">PREPAID_IND_CODE</span> are specified with NULL values, an error is raised. </p></td></tr></table>
</li></ul><p class="bodytext">The following fields can be used in place of fields in the <span class="unixoutputc">CUSTOMER_NODE_TRE_V</span> view:</p>
<ul class="listbullet"><li class="listbullet"><span class="unixoutputc">CURRENCY_NAME</span> instead of <span class="unixoutputc">CURRENCY_ID</span></li><li class="listbullet"><span class="unixoutputc">TURNOVER_CURRENCY_NAME</span> instead of <span class="unixoutputc">TURNOVER_CURRENCY_ID</span></li><li class="listbullet"><span class="unixoutputc">CREDIT_LIMIT_CURRENCY_NAME</span> instead of <span class="unixoutputc">CREDIT_LIMIT_CURRENCY_ID</span></li><li class="listbullet"><span class="unixoutputc">EXPECTED_REVENUE_CURRENCY_NAME</span> instead of <span class="unixoutputc">EXPECTED_REVENUE_CURRENCY_ID</span></li><li class="listbullet"><span class="unixoutputc">GL_CODE_NAME</span> instead of <span class="unixoutputc">GL_CODE_ID</span></li><li class="listbullet"><span class="unixoutputc">INITIAL_ACCOUNT_BALANCE</span> to specify a non-zero opening balance</li><li class="listbullet"><span class="unixoutputc">SCHEDULE_NAME</span> instead of <span class="unixoutputc">SCHEDULE_ID</span>.</li></ul><p class="bodytext">If <span class="unixoutputc">REPORT_LEVEL_CODE</span> value is set to Transferred Statement, <span class="unixoutputc">TRANSFERRED_ACCOUNT_ID</span> must be specified. If <span class="unixoutputc">TRANSFERRED_ACCOUNT_ID</span> is specified, the following rules apply:</p>
<ul class="listbullet"><li class="listbullet">The customer must have a reporting level of Transferred Statement.</li><li class="listbullet">The customer must be a root customer node.</li><li class="listbullet">The account type of <span class="unixoutputc">TRANSFERRED_ACCOUNT_ID</span> must match <span class="unixoutputc">PRIME_ACCOUNT_ID</span>.</li><li class="listbullet"><span class="unixoutputc">TRANSFERRED_ACCOUNT_ID</span> must be the prime account of a root customer node.</li></ul><p class="bodytext">If the customer node being inserted is a:</p>
<ul class="listbullet"><li class="listbullet">Prepaid without statements customer, the following rules apply:<ul class="listdashbullet2"><li class="listdashbullet2">If specified, <span class="unixoutputc">REPORT_LEVEL_CODE</span> must be Invoice.</li><li class="listdashbullet2"><span class="unixoutputc">TRANSFERRED_ACCOUNT_ID</span> must be NULL.</li></ul></li><li class="listbullet">Child node referencing a parent customer node and any one of the following fields is not specified, the child customer node fields default to the following parent customer node fields:<ul class="listdashbullet2"><li class="listdashbullet2"><span class="unixoutputc">CUSTOMER_NODE_STATUS_CODE</span></li><li class="listdashbullet2"><span class="unixoutputc">REPORT_LEVEL_CODE</span></li><li class="listdashbullet2"><span class="unixoutputc">CURRENCY_ID</span></li><li class="listdashbullet2"><span class="unixoutputc">SCHEDULE_ID</span></li><li class="listdashbullet2"><span class="unixoutputc">SALES_CHANNEL_CODE</span></li><li class="listdashbullet2"><span class="unixoutputc">GL_CODE_ID</span></li><li class="listdashbullet2"><span class="unixoutputc">TAX_CLASS_CODE</span></li><li class="listdashbullet2"><span class="unixoutputc">PAYMENT_METHOD_CODE</span></li><li class="listdashbullet2"><span class="unixoutputc">PAYMENT_LOCATION_CODE</span></li><li class="listdashbullet2"><span class="unixoutputc">BANK_CODE</span></li><li class="listdashbullet2"><span class="unixoutputc">BRANCH_CODE</span></li><li class="listdashbullet2"><span class="unixoutputc">BANK_ACCOUNT_NUMBER</span></li><li class="listdashbullet2"><span class="unixoutputc">BANK_ACCOUNT_REF</span></li><li class="listdashbullet2"><span class="unixoutputc">CARD_TYPE_CODE</span></li><li class="listdashbullet2"><span class="unixoutputc">CARD_NUMBER</span></li><li class="listdashbullet2"><span class="unixoutputc">CARD_EXPIRY_DATE</span></li><li class="listdashbullet2"><span class="unixoutputc">TURNOVER_CURRENCY_ID</span></li><li class="listdashbullet2"><span class="unixoutputc">TURNOVER</span></li><li class="listdashbullet2"><span class="unixoutputc">CREDIT_RATING_CODE</span></li><li class="listdashbullet2"><span class="unixoutputc">CREDIT_LIMIT_CURRENCY_ID</span></li><li class="listdashbullet2"><span class="unixoutputc">CREDIT_LIMIT</span></li><li class="listdashbullet2"><span class="unixoutputc">CREDIT_COMMENTS</span></li><li class="listdashbullet2"><span class="unixoutputc">COMPANY_NUMBER</span></li><li class="listdashbullet2"><span class="unixoutputc">INDUSTRY_CODE</span></li><li class="listdashbullet2"><span class="unixoutputc">REGION_CODE</span></li><li class="listdashbullet2"><span class="unixoutputc">GENERAL_1 - GENERAL_10</span></li><li class="listdashbullet2"><span class="unixoutputc">EXPECTED_REVENUE_CURRENCY_ID</span></li><li class="listdashbullet2"><span class="unixoutputc">EXPECTED_REVENUE</span>.</li></ul></li></ul><p class="bodytext">After customer node data is successfully inserted, the <span class="unixoutputc"><a id="h63245" class="jump" title="biCustomerNodePurge&amp;()" href="11751.htm" target="_self">biCustomerNodePurge&amp;()</a></span><a id="h63245_2" class="jump" title="biCustomerNodePurge&amp;()" href="11751.htm" target="_self"> function</a> is called to replicate the entity to separate rating instances. </p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="note">If customers are being updated in bulk, to prevent customer node data being replicated, the field name <span class="unixoutputc">DO_NOT_PURGE_IND_CODE</span> with an integer value (any integer value, but usually 1) must be passed to the <span class="unixoutputc">CustomerNodeInsert&amp;()</span> function.  If the entity needs to be replicated, the <span class="unixoutputc"><a id="h63245_3" class="jump" title="biCustomerNodePurge&amp;()" href="11751.htm" target="_self">biCustomerNodePurge&amp;()</a></span><a id="h63245_4" class="jump" title="biCustomerNodePurge&amp;()" href="11751.htm" target="_self"> function</a> must be called. </p></td></tr></table>
<p class="bodytext">To prevent the primary account from being replicated to other instances before the customer node is replicated, when the primary account is created, purging and entity replication of the account is suppressed.  The primary account is replicated as part of the customer node, so a separate purge is not required.</p>
<p class="syntaxheading">Customer Node ID</p>
<p class="bodytext">The customer node ID assigned to the new customer is generated automatically and returned.  However, if required, the customer node ID can be specified using the <span class="unixoutputc">CUSTOMER_NODE_ID</span> field.  If not specified, <span class="unixoutputc">CUSTOMER_NODE_ID</span> is derived from the sequence of the partition in to which the customer is inserted.  </p>
<p class="bodytext">The partition is determined for new:</p>
<ul class="listbullet"><li class="listbullet">Root customer nodes, as follows:<ul class="listdashbullet2"><li class="listdashbullet2">By <span class="unixoutputc">CUSTOMER_PARTITION_NR</span>.</li><li class="listdashbullet2">If <span class="unixoutputc">SCHEDULE_ID</span> is specified and not NULL, the same partition as the billing schedule.</li><li class="listdashbullet2">Default partition of the instance performing the insert (<span class="unixoutputc">$ATA_INSTANCE</span>).</li></ul></li><li class="listbullet">Child customer nodes using the same partition as the customer specified in <span class="unixoutputc">PARENT_CUSTOMER_NODE_ID</span>.</li></ul><table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="note"><span class="unixoutputc">CUSTOMER_PARTITION_NR</span> cannot be specified if <span class="unixoutputc">CUSTOMER_NODE_ID</span> or <span class="unixoutputc">PARENT_CUSTOMER_NODE_ID</span> are specified.</p></td></tr></table>
<p class="bodytext">Partition validation provides a means to check that customer data is not stored in default or billing partitions, which is essential in a High Availability implementation.</p>
<p class="bodytext">Partition validation can be configured by customising the <span class="unixoutputc"><a id="h77869" class="" title="CustomerPartitionValidationLevel&amp;()" href="77533.htm" target="_self">CustomerPartitionValidationLevel&amp;()</a></span> EPM function.  This function returns one of the following levels: disabled, warning, or error. The validation fails if <span class="unixoutputc">$ATA_INSTANCE</span> is set and the specified or derived partition is not a customer partition. If the validation fails, <span class="unixoutputc">CustomerNodeInsert&amp;()</span> does one of the following, depedning on the validation level:</p>
<ul class="listbullet"><li class="listbullet">Return</li><li class="listbullet">Return and log a warning message</li><li class="listbullet">Raise an error.</li></ul><p class="syntaxheading">Derived Attributes, Status, Start Date, Address</p>
<p class="bodytext">Any derived attribute instances with a context of Customer Node required by the customer type are created automatically for a new customer node.  Derived attributes with a context of Customer required by the customer type are created only if the customer is a root customer node.</p>
<p class="bodytext">If a value for the <span class="unixoutputc">CUSTOMER_NODE_STATUS_CODE</span> is not specified when a new customer is inserted, the status of the customer node defaults to Active.</p>
<p class="bodytext">If <span class="unixoutputc">EFFECTIVE_START_DATE</span> is specified in <span class="unixoutputc">FieldNames$[]</span> and a corresponding value exists in <span class="unixoutputc">DateFieldValues~[]</span>, the date-time specified in <span class="unixoutputc">DateFieldValues~[]</span>is used instead of <span class="unixoutputc">StartDate~</span> as the start date-time of the customer node.</p>
<p class="bodytext">If the postal or site address is specified, the ID of the address record is derived from the same partition as the customer node ID.</p>
<p class="syntaxheading">Date Ranging and Partitions</p>
<p class="bodytext">If the customer node being inserted is a child node referencing a parent customer node the following applies:</p>
<ul class="listbullet"><li class="listbullet">When multiple history records for the specified date range exist, a check is performed to determine whether the inserted customer node needs to be split to match the parent.<p class="listcontinue">A split is required to match each future change to <span class="unixoutputc">SCHEDULE_ID</span>, <span class="unixoutputc">HIERARCHY_LEVEL</span> or <span class="unixoutputc">ROOT_CUSTOMER_NODE_ID</span> on the parent customer node.  If the parent customer node has date-ranged records, <span class="unixoutputc">LastModified~</span> of the inserted customer node is returned as undefined, as the original insert fields match multiple rows in the customer table.</p>
</li><li class="listbullet">If the parent customer node exists in the <span class="unixoutputc">CustomerPartitionException</span> derived attribute table, an entry is inserted into the <span class="unixoutputc">CustomerPartitionException</span> derived attribute table for the new customer node.</li></ul><p class="syntaxheading">User ID and Security Group ID Values</p>
<p class="bodytext"><span class="unixoutputc">ATLANTA_OPERATOR_ID</span> is an ID for the user who last modified the customer record.  If not specified, the ID of the user who opened <span class="unixoutputc"><a id="h39486" class="jump" title="treConnect" href="51097.htm" target="_self">treConnect()</a></span> is used.</p>
<p class="bodytext"><span class="unixoutputc">ATLANTA_GROUP_ID</span> is an ID of the security group that has access to the customer information.  If not specified, the security group ID is obtained by mapping the user ID to its corresponding <span class="unixoutputc">PRIMARY_ATLANTA_GROUP_ID</span>.</p>
<p class="bodytext">The following table lists the methods used to obtain the user and security group ID.</p>
<p class="bodytext">&nbsp;</p>
<p class="caption">User ID and Security Group ID Values </p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td class="tableheading" style="border:1px solid #010101;" width="192"><p class="tableheading">ATLANTA_OPERATOR_ID</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="174"><p class="tableheading">ATLANTA_GROUP_ID</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="330"><p class="tableheading">Result</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="192"><p class="tablebodytext">Specified using <span class="unixoutputc">FieldNames$[]</span>.</p>
</td>
<td style="border:1px solid #010101;" width="174"><p class="tablebodytext">Not specified.</p>
</td>
<td style="border:1px solid #010101;" width="330"><p class="tablebodytext">Specified user ID is used.</p>
<p class="tablebodytext">Security Group ID is obtained by mapping the specified user ID to its corresponding <span class="unixoutputc">PRIMARY_ATLANTA_GROUP_ID</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="192"><p class="tablebodytext">Specified using <span class="unixoutputc">FieldNames$[]</span>.</p>
</td>
<td style="border:1px solid #010101;" width="174"><p class="tablebodytext">Specified using <span class="unixoutputc">FieldNames$[]</span>.</p>
</td>
<td style="border:1px solid #010101;" width="330"><p class="tablebodytext">Specified user and security group IDs are used.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="192"><p class="tablebodytext">Not specified.</p>
</td>
<td style="border:1px solid #010101;" width="174"><p class="tablebodytext">Specified using <span class="unixoutputc">FieldNames$[]</span>.</p>
</td>
<td style="border:1px solid #010101;" width="330"><p class="tablebodytext">Specified security group ID is used.</p>
<p class="tablebodytext">ID of user who opened the <span class="unixoutputc">treConnect()</span> is used.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="192"><p class="tablebodytext">Not specified.</p>
</td>
<td style="border:1px solid #010101;" width="174"><p class="tablebodytext">Not specified.</p>
</td>
<td style="border:1px solid #010101;" width="330"><p class="tablebodytext">ID of user who opened the <span class="unixoutputc">treConnect()</span> is used.</p>
<p class="tablebodytext">Security Group ID is obtained by mapping the user ID to its corresponding <span class="unixoutputc">PRIMARY_ATLANTA_GROUP_ID</span>.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="bodytext">The effective user must have insert security group access level for the security group associated with the record manipulated by this function call.  If no security group is specified, insert access level is required on the primary security group ID associated with the user profile.  </p>
<p class="bodytext">Update access level is required if a child customer node is inserted.  Direct update access level may be required on the security group associated with the parent customer.</p>
<p class="bodytext"><span class="unixoutputc">GROUP_ACCESS_TRE_V</span> view lists security group access level values.</p>


<br><div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="14498.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="14501.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div></body>
</html>


