<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title> AccountReservationInsert$() </title>
<script type="text/javascript" src="open_parent.js"></script>
<link rel="stylesheet" type="text/css" href="pkc.css">
<link rel="stylesheet" type="text/css" href="stylesheet.css">
<meta name="description" content="Configurer's Reference Guide for Singleview Convergent Billing 9.1 ">
<script language="javascript" type="text/javascript" src="dhtml_toc.js"></script>
<script language="JavaScript">
<!--

document.onkeydown = checkChangePage;
function checkChangePage(e)
{
   if (!e) var e = window.event;
   // Don't put the following into the first page
   if ((e.ctrlKey && (e.keyCode == 37))) {
      // Ctrl-Left Arrow was pressed or Page up key pressed at the top of the page
      document.location.href = "11032.htm";
   } else
   // Don't put the following into the late page for a document
   if ((e.ctrlKey && (e.keyCode == 39))) {
      // Ctrl-Right Arrow was pressed or Page down key pressed and at the bottom of the page
      document.location.href = "11034.htm";
   }
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function printpage()
{
	window.print();
}
//-->
</script>
</head>
<body onload="loadParent();MM_preloadImages('left_down.gif','right_down.gif','index_down.gif','contents_down.gif','search_down.gif','print_down.gif');if (isTOCLoaded()) {expand('11007');expand('10992');highlight('11033')}">
<div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="11032.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="11034.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%">
<h3 class="heading3">AccountReservationInsert$()</h3>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'AccountReservationInsert$()' (11033)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="syntaxheading">Syntax</p>
<pre class="unixinputp">AccountReservationInsert$(    const&nbsp;FieldNames$[],    const&nbsp;FieldValues?[])</pre>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Description</p>
<p class="bodytext">Inserts a new account reservation.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="note">This function is available only as part of the separate Commerce Engine licence option.</p></td></tr></table>
<p class="syntaxheading">Attributes</p>
<table class="tableintopic" width="288" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="bold">Application Environment</span></p>
</td>
<td style="border:1px solid #010101;" width="102"><p class="tablebodytext">Any</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="bold">Context</span></p>
</td>
<td style="border:1px solid #010101;" width="102"><p class="tablebodytext">Any</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="bold">Method</span></p>
</td>
<td style="border:1px solid #010101;" width="102"><p class="tablebodytext">Built-in</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td class="tableheading" style="border:1px solid #010101;" width="133"><p class="tableheading">Parameter</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="563"><p class="tableheading">Description</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="133"><p class="tablebodytext"><span class="unixoutputc">FieldNames$[]</span></p>
</td>
<td style="border:1px solid #010101;" width="563"><p class="tablebodytext">In:  Names of the fields to insert for the reservation (there is a direct mapping between this array and the <span class="unixoutputc">FieldValues?[]</span> array). </p>
<p class="tablebodytext">Valid field names can be found in the <span class="unixoutputc">ACCOUNT_RESERVATION_TRE_V</span> view.</p>
<p class="tablebodytext">The minimum set of fields are <span class="unixoutputc">ACCOUNT_ID</span> and <span class="unixoutputc">RESERVED_AMOUNT</span>.</p>
<p class="tablebodytext">If <span class="unixoutputc">RESERVATION</span> is not specified, it is generated with the format of &lt;<span class="unixoutputc">SEQNR&gt;_&lt;MMDDHHMMSS&gt;_&lt;INSTANCE&gt;_&lt;PID&gt;</span>, where <span class="unixoutputc">SEQNR</span> is a cyclic number of 1-999999999, <span class="unixoutputc">MMDDHHMMSS</span> is current date-time, <span class="unixoutputc">INSTANCE</span> is the local Convergent Billing instance name, and <span class="unixoutputc">PID</span> is the process ID of the calling process. </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="133"><p class="tablebodytext"><span class="unixoutputc">FieldValues?[]</span></p>
</td>
<td style="border:1px solid #010101;" width="563"><p class="tablebodytext">In:  Inserted field values (in the same order as the fields listed in <span class="unixoutputc">FieldNames$[])</span>.</p>
<p class="tablebodytext">If the reservation is to span multiple accounts, the values corresponding to the following fields can be expressed as arrays:</p>
<ul class="tablelistbullet"><li class="tablelistbullet"><span class="unixoutputc">ACCOUNT_ID</span></li><li class="tablelistbullet"><span class="unixoutputc">ACCOUNT_SEQNR</span></li><li class="tablelistbullet"><span class="unixoutputc">RESERVED_AMOUNT</span></li><li class="tablelistbullet"><span class="unixoutputc">CONSUMED_AMOUNT</span></li><li class="tablelistbullet"><span class="unixoutputc">RESERVED_AMOUNT_CURRENCY_ID</span>.</li></ul></td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Returns</p>
<p class="bodytext">String identifying the reservation. The returned string is either the value of the reservation passed in, or an internally generated ID. </p>
<p class="bodytext">Otherwise, an error is raised.</p>
<p class="syntaxheading">Remarks</p>
<p class="bodytext">On entry, the value of <span class="unixoutputc">ACCOUNT_SEQNR</span> is used to provide an optimistic locking mechanism and must correspond to the current sequence number of each account associated with the reservation.  In the locking mechanism, the calling process must have been the one to perform the latest operation on the account or fetched the current account details using <span class="unixoutputc">AccountFetchRealTime&amp;()</span>.</p>
<p class="bodytext">The total amount of the reservation is the sum of <span class="unixoutputc">RESERVED_AMOUNT</span> and <span class="unixoutputc">CONSUMED_AMOUNT</span>.</p>
<p class="bodytext">The <span class="unixoutputc">AUTO_CONSUMPTION_MODE</span> in the <span class="unixoutputc">ACCOUNT_RESERVATION_TRE_V</span> view can be specified to track the consumed amount of the reservation. Valid values are:</p>
<ul class="listbullet"><li class="listbullet">0 (Reserve All): The reserved amount is not automatically considered as being consumed. Consumed amounts are always zero. Default.</li><li class="listbullet">1 (Consume All): Consumed amounts are tracked. The reserved amount is automatically considered as being consumed. Reserved amounts are always zero.</li><li class="listbullet">2 (Consume Update): Consumed amounts are tracked. When a reservation is updated, any previously reserved amounts are added to the consumed amount. </li></ul><table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="note"><span class="unixoutputc">AUTO_CONSUMPTION_MODE</span> cannot be specified if <span class="unixoutputc">CONSUMED_AMOUNT</span> is specified. <span class="unixoutputc">CONSUMED_AMOUNT</span> overrides the mode of tracking reservation consumption, and replaces the existing consumed amount. </p></td></tr></table>
<p class="bodytext">For asset accounts when disputes impact the available credit is, the real-time available credit is:</p>
<p class="bodytext"><span class="unixoutputc">(credit limit + invoice disputed amount + account disputed amount) - (account balance + total unbilled amount + reserved amount + consumed amount)</span></p>
<p class="bodytext">For asset accounts when disputes do not impact the available credit, the real-time available credit is:</p>
<p class="bodytext"><span class="unixoutputc">credit limit - (account balance + total unbilled amount + reserved amount + consumed amount)</span></p>
<p class="bodytext">If handling of liability accounts is:</p>
<ul class="listbullet"><li class="listbullet">Enabled, the available credit for a liability account is calculated in the same way as for the asset account, except that the sign of the value of <span class="unixoutputc">account balance</span> is reversed (that is, the value of <span class="unixoutputc">account balance</span> is replaced with the value of <span class="unixoutputc">-account balance</span>).</li><li class="listbullet">Not enabled, when disputes:<ul class="listdashbullet2"><li class="listdashbullet2">Impact the available credit, the available credit is equal to:<p class="listcontinue2"><span class="unixoutputc">(credit limit + invoice disputed amount + account disputed amount) + (account balance + total unbilled amount - (reserved amount + consumed amount)</span>  </p>
</li><li class="listdashbullet2">Do not impact the available credit, the available credit is equal to:<p class="listcontinue2"><span class="unixoutputc">credit limit + (account balance + total unbilled amount - (reserved amount + consumed amount))</span></p>
</li></ul></li><li class="listbullet">Not enabled and the <span class="unixoutputc">ACCOUNT_NEGATE_CREDIT_LIMIT</span> reference type is TRUE, the available credit is calculated as for liability accounts, except that the the sign of the value of <span class="unixoutputc">credit limit</span> is reversed (that is, the value of <span class="unixoutputc">credit limit</span> is replaced with the value of <span class="unixoutputc">-credit limit</span>).</li></ul><p class="bodytext">The real-time available credit of the associated accounts is updated.</p>
<p class="bodytext">The following should be taken into consideration:</p>
<ul class="listbullet"><li class="listbullet">If the <span class="unixoutputc">RESERVATION</span> field is specified, it is used as the reservation ID.  If the specified <span class="unixoutputc">RESERVATION</span> value exists as a reservation, the function fails. If the <span class="unixoutputc">RESERVATION</span> field is not specified, the function derives a unique reservation ID, which is given as the return value. </li><li class="listbullet">If the <span class="unixoutputc">RESERVED_AMOUNT_CURRENCY_ID</span> field is supplied and differs from the account currency, the reservation amount is converted into the currency of the account.  If <span class="unixoutputc">RESERVED_AMOUNT_CURRENCY_ID</span> is not supplied, the reservation is assumed to be in the account currency.</li><li class="listbullet">If the <span class="unixoutputc">ACCOUNT_SEQNR</span> field is supplied, the <span class="unixoutputc">SEQNR</span> of the account is compared with the current account <span class="unixoutputc">SEQNR</span> parameter to implement an optimistic locking scheme.  The account and reservation are locked for the duration of the operation.  If the <span class="unixoutputc">SEQNR</span> of the account is not equal to the supplied <span class="unixoutputc">ACCOUNT_SEQNR</span> parameter, the reservation fails with an error indicating that the account was modified by another user. </li><li class="listbullet">If the <span class="unixoutputc">ACCOUNT_SEQNR</span> field is not supplied, the function only succeeds if the real-time available credit for the account does not go below zero because of the reservation.</li><li class="listbullet">If the <span class="unixoutputc">INVOICE_CREDIT_MODE</span> parameter is supplied and is non-zero (TRUE), the 'real-time available credit' (used to determine the authorisation of this reservation) uses <span class="unixoutputc">AVAILABLE_INVOICE_CREDIT</span> (rather than <span class="unixoutputc">AVAILABLE_CREDIT</span>).  If <span class="unixoutputc">INVOICE_CREDIT_MODE</span> is non-zero (TRUE) and the account is not an invoice point, an error is raised.  The real-time available credit of the account is updated.</li><li class="listbullet">If the <span class="unixoutputc">NON_VOLATILE</span> field is supplied and is non-zero (TRUE), the reservation is inserted into the <span class="unixoutputc">ACCOUNT_RESERVATION</span> table and a database commit performed.  Customers may want to use non-volatile reservations when reservations for large amounts are made.  However, non-volatile reservations should be used conservatively because each reservation operation then requires a database operation.</li><li class="listbullet">Reservations that span multiple accounts cannot be non-volatile. An error is raised if an attempt is made to insert a multiple account reservation with any <span class="unixoutputc">NON_VOLATILE</span> field supplied as a non-zero value.</li></ul>


<br><div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="11032.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="11034.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div></body>
</html>


