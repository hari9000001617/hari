<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title> ACMStats?{}() </title>
<script type="text/javascript" src="open_parent.js"></script>
<link rel="stylesheet" type="text/css" href="pkc.css">
<link rel="stylesheet" type="text/css" href="stylesheet.css">
<meta name="description" content="Configurer's Reference Guide for Singleview Convergent Billing 9.1 ">
<script language="javascript" type="text/javascript" src="dhtml_toc.js"></script>
<script language="JavaScript">
<!--

document.onkeydown = checkChangePage;
function checkChangePage(e)
{
   if (!e) var e = window.event;
   // Don't put the following into the first page
   if ((e.ctrlKey && (e.keyCode == 37))) {
      // Ctrl-Left Arrow was pressed or Page up key pressed at the top of the page
      document.location.href = "11052.htm";
   } else
   // Don't put the following into the late page for a document
   if ((e.ctrlKey && (e.keyCode == 39))) {
      // Ctrl-Right Arrow was pressed or Page down key pressed and at the bottom of the page
      document.location.href = "11054.htm";
   }
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function printpage()
{
	window.print();
}
//-->
</script>
</head>
<body onload="loadParent();MM_preloadImages('left_down.gif','right_down.gif','index_down.gif','contents_down.gif','search_down.gif','print_down.gif');if (isTOCLoaded()) {expand('11007');expand('10992');highlight('75380')}">
<div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="11052.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="11054.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%">
<h3 class="heading3">ACMStats?{}()</h3>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'ACMStats?{}()' (75380)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="syntaxheading">Syntax</p>
<pre class="unixinputp">ACMStats?{}()</pre>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Description</p>
<p class="bodytext">Provides statistics for the account cache (ACM) of the current instance. </p>
<p class="syntaxheading">Attributes</p>
<table class="tableintopic" width="288" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="180"><p class="tablebodytext"><span class="bold">Function Type</span></p>
</td>
<td style="border:1px solid #010101;" width="108"><p class="tablebodytext">Local Built-in</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="180"><p class="tablebodytext"><span class="bold">Service</span></p>
</td>
<td style="border:1px solid #010101;" width="108"><p class="tablebodytext">(Local)</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="180"><p class="tablebodytext"><span class="bold">Application Environment</span></p>
</td>
<td style="border:1px solid #010101;" width="108"><p class="tablebodytext">Any</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="180"><p class="tablebodytext"><span class="bold">Context</span></p>
</td>
<td style="border:1px solid #010101;" width="108"><p class="tablebodytext">Any</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<table class="tableintopic" width="486" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td class="tableheading" style="border:1px solid #010101;" width="138"><p class="tableheading">Parameter</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="348"><p class="tableheading">Description</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="138"><p class="tablebodytext">None.</p>
</td>
<td style="border:1px solid #010101;" width="348"><p class="tablebodytext">&nbsp;</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Returns</p>
<p class="bodytext">Unknown hash of account cache statistics; an exception is raised if an error is encountered.</p>
<p class="syntaxheading">Remarks</p>
<p class="bodytext">This function is used by the <span class="unixoutputc"><a id="h75383" class="jump" title="biCacheMonitor&amp;()" href="11533.htm" target="_self">biCacheMonitor&amp;()</a></span><a id="h75383_2" class="jump" title="biCacheMonitor&amp;()" href="11533.htm" target="_self"> function</a> when logging information to the tremon server process.</p>
<p class="bodytext">The following table lists ACM statistics.</p>
<p class="caption">ACM Statistics </p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<th class="tableheading" style="border:1px solid #010101;" width="258"><p class="tableheading">Key</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="72"><p class="tableheading">Type</p>
</th>
<th class="tableheading" style="border:1px solid #010101;" width="366"><p class="tableheading">Description</p>
</th>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">CreateDate</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Date</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Date when the cache was created.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">TotalSizeBytes</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Size of the cache, in bytes.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">ReplicationEnabled</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Set to 1 if account cache replication is enabled; otherwise, set to 0.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">ReplicationBackupAvailable</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Set to 1 if a remote instance is available; otherwise, set to 0.</p>
<p class="tablebodytext">If set on the master instance, cache replication is enabled.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">ReplicationMaster</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Set to 1 if the local instance is the master; otherwise, set to 0.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">ReplicationBackup</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Set to 1 if the local instance is the backup; otherwise, set to 0.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">StreamsActive</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Array</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Array of statistics for each active stream, listed in an unknown hash with the following keys:</p>
<ul class="tablelistbullet"><li class="tablelistbullet"><span class="unixoutputc">Instance</span>: instance that opened the stream, returned as a string. </li><li class="tablelistbullet"><span class="unixoutputc">StreamId</span>: ID of the stream, returned as an integer. </li><li class="tablelistbullet"><span class="unixoutputc">NrDeltas</span>: number of uncommitted updates, returned as an integer. </li><li class="tablelistbullet"><span class="unixoutputc">LastModified</span>: last modified date-time, returned as date.</li></ul></td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">StreamSize</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Size of a stream record, in bytes.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">StreamsFree</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of available free streams.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">StreamsUsed</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of used streams.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">StreamsUsedMax</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Maximum number of streams that have been used.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">StreamOpens</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of opened streams.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">StreamCloses</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of closed streams. </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">StreamCommits</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of stream commits.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">StreamRollbacks</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of stream rollbacks. </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">StreamErrors</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of stream errors.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">StreamRemoteOpens</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of opened remote streams.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">StreamRemoteCloses</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of closed remote streams.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">StreamRemoteCommits</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of remote stream commits. </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">StreamRemoteRollbacks</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of remote stream rollbacks.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">StreamRemoteErrors</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of remote stream errors. </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">AccountSize </span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Size of an account record, in bytes.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">AccountsFree </span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of free account records. </p>
<p class="tablebodytext">It is close to 0 in a well-sized cache. </p>
<p class="tablebodytext">If <span class="unixoutputc">AccountsFree</span> and <span class="unixoutputc">AccountsClean</span> are 0, the cache stops all account updates and reservations.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">AccountsClean </span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer </p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of account records that have no uncommitted updates or reservations (called clean account records). </p>
<p class="tablebodytext">It is above 0 in a well-sized cache. </p>
<p class="tablebodytext">If <span class="unixoutputc">AccountsFree</span> and <span class="unixoutputc">AccountsClean</span> are 0, the cache stops all account updates and reservations.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">AccountsDirty </span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of accounts that have uncommitted updates or reservations (called dirty accounts).</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">AccountsDirtyMax </span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer </p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Maximum number of dirty accounts.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">AccountsUsedBytes</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer </p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of bytes used for clean and dirty account records. </p>
<p class="tablebodytext">The size of an account record is calculated by dividing this value by (<span class="unixoutputc">AccountsClean + AccountsDirty</span>). </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">AccountInserts</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of loaded accounts. </p>
<p class="tablebodytext">This value can be smaller than the value of <span class="unixoutputc">AccountMisses</span>, as a miss can be due to a fetch of a non-existent account.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">AccountPurges</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of purged accounts. </p>
<p class="tablebodytext">Purges are performed when the account details are updated without performing the update using the account cache.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">AccountUpdates</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of account updates.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">AccountErrors</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of account operation errors. </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">AccountRemoteUpdates</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of account updates that have been replicated to this cache from a remote cache.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">AccountRemoteErrors</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of errors that have occurred during replicated account operations.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">AccountHits</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of account fetches performed on cached accounts.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">AccountHitRatio</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Float</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Percentage of account fetches performed on cached accounts.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">AccountHitTraversals</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Float</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Average number of hash slot-traversals needed to locate a cached account. </p>
<p class="tablebodytext">A value of 1 indicates a perfect hash algorithm. It is never less than 1.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">AccountMisses</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of account fetches performed on accounts not in the cache.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">AccountMissTraversals</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Average number of hash slot-traversals needed to determine that an account is not in the cache.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">DeltaSize</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Size of a delta record, in bytes. </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">DeltasFree</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of free account delta records. </p>
<p class="tablebodytext">This value indicates the number of account updates that can be performed before the next commit.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">DeltasUsed</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of current uncommitted account updates.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">DeltasUsedMax</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Maximum number of uncommitted account updates.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">DeltasUsedBytes </span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of bytes used to store the currently used deltas. </p>
<p class="tablebodytext">The size of a delta record is <span class="unixoutputc">DeltasUsedBytes</span> divided by <span class="unixoutputc">DeltasUsed</span>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">DeltasInserted</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Total number of deltas (that is, uncommitted account updates) inserted in the cache since the cache was opened. </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">ReservationSize</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Size of a reservation record, in bytes. </p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote">If a reservation uses general fields, additional storage is required from the reservation pool. </p></td></tr></table>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">ReservationsFree</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of free reservation records.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">ReservationsUsed</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of current account reservations.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">ReservationsUsedMax</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Maximum number of account reservations.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">ReservationsUsedBytes</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of bytes used to store the current account reservations. </p>
<p class="tablebodytext">This value excludes the storage of general fields, which are stored in the reservation pool. </p>
<p class="tablebodytext">To determine the size of a reservation without general fields, divide this value by <span class="unixoutputc">ReservationsUsed</span>. </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">ReservationInserts</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of account reservations.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">ReservationUpdates</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of reservation updates. </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">ReservationDeletes</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of reservation commits or deletes.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">ReservationErrors</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number reservation operations errors. </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">ReservationExpiryCount </span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Total number of reservations deleted from the cache due to their expiry date being exceeded. </p>
<p class="tablebodytext">This count applies only to reservations owned by the local instance. </p>
<p class="tablebodytext">Expired remote reservations are not included in this count unless they are first claimed by the local instance. </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">ReservationRemoteInserts</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of reservation inserts replicated from a remote cache. </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">ReservationRemoteUpdates</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of reservation updates replicated from a remote cache.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">ReservationRemoteDeletes</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of reservation commits or deletes replicated from a remote cache. </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">ReservationRemoteErrors</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of errors while processing replicated reservation operations.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">ReservationRemoteExpiryCount</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of reservations replicated from a remote instance that have been deleted from the cache due to their expiry date being exceeded.</p>
<p class="tablebodytext">Excludes expired reservations owned or claimed by the local instance.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">BalanceFunctionUpdates</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of local balance function updates applied to accounts. </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">BalanceFunctionRemoteUpdates</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of remote balance function updates applied to accounts.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">BalanceFunctionCalls</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Total number of balance function calls.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">RemoteAccountInconsistentCnt</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of inconsistent remote account records. </p>
<p class="tablebodytext">An inconsistent account is an account where the available amount cannot be resolved by applying all replicated deltas. </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">RemoteAccountInconsistentCntMax</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Maximum number of remote account records that were inconsistent at some point.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">RemoteStreamFreeCnt</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of free remote streams.   </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">RemoteStreamUsedCnt</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of remote streams being used.   </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">RemoteStreamUsedCntMax</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Maximum number of used remote streams.  </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">RemoteStreamInconsistentCnt</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of inconsistent remote stream records.</p>
<p class="tablebodytext">A stream becomes inconsistent when a commit or rollback replication message is processed, and the number of deltas in the stream being committed do not match the number of deltas associated with the stream locally, that is, one or more deltas have been lost during replication.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">RemoteStreamInconsistentCntMax</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Maximum number of inconsistent remote stream records.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">RemoteStreamLingerCnt</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Number of remote streams currently marked as closed but remaining in the cache for a period of time in case replication messages for the stream arrive late.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">RemoteStreamLingerCntMax</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Maximum number of remote streams that have been concurrently marked as closed and kept in the cache for a period of time in case replication messages for the stream arrived late. </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">RemoteStreamSize</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Integer</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Size of a remote stream record, in bytes.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">CreditExposure</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Real</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Credit exposure amount for post-paid accounts, that is, asset accounts with a positive credit limit defined. </p>
<p class="tablebodytext">This amount represents the accumulation of breach amounts to all post-paid accounts, where a charge has resulted in the credit limit being breached, or further exceeded. </p>
<p class="tablebodytext">The credit exposure amount is reported in the currency identified by the <span class="fieldname">System Default</span> reporting entity. </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">RevenueLoss</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Real</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Revenue loss amount for pre-paid accounts, that is, liability accounts or asset accounts with a defined credit limit of zero. </p>
<p class="tablebodytext">This amount represents the accumulation of breach amounts to all pre-paid accounts, where a charge has resulted in an account going into debt or further into debt. </p>
<p class="tablebodytext">The revenue loss amount is reported in the currency identified by the <span class="fieldname">System Default</span> reporting entity.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">ReportingCurrency</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">String</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Currency symbol of the reporting currency identified by the <span class="fieldname">System Default</span> reporting entity, which is used to report credit exposure and revenue loss amounts. </p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="258"><p class="tablebodytext"><span class="unixoutputc">AverageAccountsPerReservation</span></p>
</td>
<td style="border:1px solid #010101;" width="72"><p class="tablebodytext">Float</p>
</td>
<td style="border:1px solid #010101;" width="366"><p class="tablebodytext">Average number of accounts associated with each account reservation. </p>
<p class="tablebodytext">This number cannot be less than 1. It is greater than 1 if at least one multiple-account reservation has been created, in which case this value is returned. </p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="bodytext">ACM statistics also include statistic for the memory pools listed in the following table.</p>
<p class="bodytext">&nbsp;</p>
<p class="caption">ACM Statistics for Memory Pools</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td class="tableheading" style="border:1px solid #010101;" width="186"><p class="tableheading">Memory Pool</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="510"><p class="tableheading">Description</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext">Extended delta pool</p>
</td>
<td style="border:1px solid #010101;" width="510"><p class="tablebodytext">Used for storing previous values of an account, changed by an account type expression before being post-committed.  </p>
<p class="tablebodytext"><a id="h75439" class="jump" title="Memory Pool Statistics" href="75438.htm" target="_self">Statistics for this memory pool have each key prefixed with </a><span class="unixoutputc"><a id="h75439_2" class="jump" title="Memory Pool Statistics" href="75438.htm" target="_self">ExtendedDeltaPool</a></span><a id="h75439_3" class="jump" title="Memory Pool Statistics" href="75438.htm" target="_self"> (for example, </a><span class="unixoutputc"><a id="h75439_4" class="jump" title="Memory Pool Statistics" href="75438.htm" target="_self">ExtendedDeltaPoolTotalAllocatedBytes</a></span><a id="h75439_5" class="jump" title="Memory Pool Statistics" href="75438.htm" target="_self">)</a>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext">Extended attributes pool</p>
</td>
<td style="border:1px solid #010101;" width="510"><p class="tablebodytext">Used for storing the following stored fields for accounts:</p>
<ul class="tablelistbullet"><li class="tablelistbullet"><span class="unixoutputc">GENERAL_1</span> - <span class="unixoutputc">GENERAL_10</span></li><li class="tablelistbullet"><span class="unixoutputc">FIRST_USE_DATE</span></li><li class="tablelistbullet"><span class="unixoutputc">ACCOUNT_RESTRICTION_DATE</span></li><li class="tablelistbullet"><span class="unixoutputc">BALANCE_EXPIRY_DATE</span>. <p class="tablelistcontinue">If none of these stored fields is used, no allocation is required from this pool.</p>
</li></ul><p class="tablebodytext"><a id="h75439_6" class="jump" title="Memory Pool Statistics" href="75438.htm" target="_self">Statistics for this memory pool have each key prefixed with </a><span class="unixoutputc"><a id="h75439_7" class="jump" title="Memory Pool Statistics" href="75438.htm" target="_self">ExtendedAttrPool</a></span><a id="h75439_8" class="jump" title="Memory Pool Statistics" href="75438.htm" target="_self"> (for example, </a><span class="unixoutputc"><a id="h75439_9" class="jump" title="Memory Pool Statistics" href="75438.htm" target="_self">ExtendedAttrPoolTotalAllocatedBytes</a></span><a id="h75439_10" class="jump" title="Memory Pool Statistics" href="75438.htm" target="_self">)</a>.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext">Reservations pool</p>
</td>
<td style="border:1px solid #010101;" width="510"><p class="tablebodytext">Used for storing the general fields of account reservations, as well as details of accounts against which reservations have been made. </p>
<p class="tablebodytext"><a id="h75439_11" class="jump" title="Memory Pool Statistics" href="75438.htm" target="_self">Statistics for this memory pool have each key prefixed with </a><span class="unixoutputc"><a id="h75439_12" class="jump" title="Memory Pool Statistics" href="75438.htm" target="_self">ReservationPool</a></span><a id="h75439_13" class="jump" title="Memory Pool Statistics" href="75438.htm" target="_self"> (for example, </a><span class="unixoutputc"><a id="h75439_14" class="jump" title="Memory Pool Statistics" href="75438.htm" target="_self">ReservationPoolTotalAllocatedBytes</a></span><a id="h75439_15" class="jump" title="Memory Pool Statistics" href="75438.htm" target="_self">)</a>.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>


<br><div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="11052.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="11054.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div></body>
</html>


