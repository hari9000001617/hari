<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title> fEV_ContractUpdate&amp;() </title>
<script type="text/javascript" src="open_parent.js"></script>
<link rel="stylesheet" type="text/css" href="pkc.css">
<link rel="stylesheet" type="text/css" href="stylesheet.css">
<meta name="description" content="Configurer's Reference Guide for Singleview Convergent Billing 9.1 ">
<script language="javascript" type="text/javascript" src="dhtml_toc.js"></script>
<script language="JavaScript">
<!--

document.onkeydown = checkChangePage;
function checkChangePage(e)
{
   if (!e) var e = window.event;
   // Don't put the following into the first page
   if ((e.ctrlKey && (e.keyCode == 37))) {
      // Ctrl-Left Arrow was pressed or Page up key pressed at the top of the page
      document.location.href = "28077.htm";
   } else
   // Don't put the following into the late page for a document
   if ((e.ctrlKey && (e.keyCode == 39))) {
      // Ctrl-Right Arrow was pressed or Page down key pressed and at the bottom of the page
      document.location.href = "28079.htm";
   }
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function printpage()
{
	window.print();
}
//-->
</script>
</head>
<body onload="loadParent();MM_preloadImages('left_down.gif','right_down.gif','index_down.gif','contents_down.gif','search_down.gif','print_down.gif');if (isTOCLoaded()) {expand('51544');expand('28068');expand('45618');highlight('28078')}">
<div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="28077.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="28079.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%">
<h4 class="heading4">fEV_ContractUpdate&amp;()</h4>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'fEV_ContractUpdate&amp;()' (28078)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="syntaxheading">Syntax</p>
<table class="tableintopic" width="516" cellpadding="2" cellspacing="0" border="0" style="border-collapse:collapse">
<tr align="left" valign="top">
<td class="tableheading" width="228"><p class="tableheading">Interface 1</p>
</td>
<td width="48"><p class="tablebodytext">&nbsp;</p>
</td>
<td class="tableheading" width="240"><p class="tableheading">Interface 2</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="228"><pre class="unixinputp">fEV_ContractUpdate&amp;(    contractId&amp;,    effectiveDate~,    var lastModified~,    fieldNames$[],    fieldValues?[])&nbsp;</pre>
</td>
<td width="48"><p class="bodytext">&nbsp;</p>
</td>
<td width="240"><pre class="unixinputp">fEV_ContractUpdate&amp;(    contractId&amp;,    effectiveDate~,    var lastModified~,    const fieldValues?{})</pre>
</td>
</tr>
<tr align="left" valign="top">
<td class="tableheading" width="228"><p class="tableheading">Interface 3</p>
</td>
<td width="48"><p class="bodytext">&nbsp;</p>
</td>
<td class="tableheading" width="240"><p class="tableheading">Interface 4</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="228"><pre class="unixinputp">fEV_ContractUpdate&amp;(    const Keys?{},    var LastModified~,    const FieldValues?{})</pre>
</td>
<td width="48"><p class="bodytext">&nbsp;</p>
</td>
<td width="240"><pre class="unixinputp">fEV_ContractUpdate&amp;(    const Keys?{},    var LastModified~,    const FieldValues?{},    var IdentifierKeys?{})</pre>
</td>
</tr>

</table>
<p class="syntaxheading">Description</p>
<p class="bodytext">Updates a contract in the database.  The function is similar to and wraps the <span class="unixoutputc">ContractUpdate&amp;()</span> function.</p>
<p class="syntaxheading">Context</p>
<p class="bodytext">The following groups of variables are available throughout all stages of processing a contract update request, except where otherwise specified:</p>
<ul class="listbullet"><li class="listbullet">System client</li><li class="listbullet">Operator</li><li class="listbullet">Miscellaneous<ul class="listdashbullet2"><li class="listdashbullet2"><span class="unixoutputc">evFormCode$</span> contains the value <span class="unixoutputc">CNTRSVR</span>.</li><li class="listdashbullet2"><span class="unixoutputc">evLastRowInd&amp;</span> contains the value <span class="unixoutputc">0</span> during all stages of processing except for the evaluation of the contract pre-commit expressions.</li><li class="listdashbullet2"><span class="unixoutputc">evRowStatus$</span> contains the value <span class="unixoutputc">Update</span>.</li></ul></li><li class="listbullet">Contract.</li></ul><p class="syntaxheading">Parameters</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td class="tableheading" style="border:1px solid #010101;" width="151"><p class="tableheading">Parameter</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="545"><p class="tableheading">Description</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="151"><p class="tablebodytext"><span class="unixoutputc">contractId&amp;</span></p>
</td>
<td style="border:1px solid #010101;" width="545"><p class="tablebodytext">ID of the contract being updated.</p>
<p class="tablebodytext">A contract with the specified ID must exist in the database for the effective date specified; otherwise, an error is raised.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="151"><p class="tablebodytext"><span class="unixoutputc">Keys?{}</span></p>
</td>
<td style="border:1px solid #010101;" width="545"><p class="tablebodytext">Keys that identify the contract to be updated.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="151"><p class="tablebodytext"><span class="unixoutputc">effectiveDate~</span></p>
</td>
<td style="border:1px solid #010101;" width="545"><p class="tablebodytext">Effective date used to identify the historical contract record that is updated.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="151"><p class="tablebodytext"><span class="unixoutputc">lastModified~</span></p>
<p class="tablebodytext"><span class="unixoutputc">LastModified~</span></p>
</td>
<td style="border:1px solid #010101;" width="545"><p class="tablebodytext">Initial value of <span class="unixoutputc">lastModified~</span> must match the value in the record matching the specified <span class="unixoutputc">contractId&amp;</span> and <span class="unixoutputc">oldEffectiveDate~</span>.</p>
<p class="tablebodytext">If <span class="unixoutputc">Keys?{}</span> is specified, <span class="unixoutputc">lastModified~</span> can be undefined.</p>
<p class="tablebodytext">If <span class="unixoutputc">lastModified~</span> is not defined, it is automatically derived.</p>
<p class="tablebodytext">On successful return, the value is the date-time of this update.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="151"><p class="tablebodytext"><span class="unixoutputc">fieldValues?{}</span></p>
<p class="tablebodytext"><span class="unixoutputc">fieldNames$[]</span></p>
<p class="tablebodytext"><span class="unixoutputc">fieldValues?[]</span></p>
<p class="tablebodytext"><span class="unixoutputc">FieldValues?{}</span></p>
</td>
<td style="border:1px solid #010101;" width="545"><p class="tablebodytext">Data to be updated for the specified contract.</p>
<p class="tablebodytext">The data can be keyed according to the corresponding column name in the <span class="unixoutputc">CONTRACT_TRE_V</span> view.  When keyed according to database column name, the data passed must match in both type and value, the data stored in the database.</p>
<p class="tablebodytext">If attribute validation is enabled, data can also be keyed by interface or display label specified in the appropriate entity validation, or in Convergent Billing defaults.</p>
<p class="tablebodytext">When keyed by a label, the data passed must match the type and value expected as defined in the appropriate attribute type.  Denormalised fields must pass the denormalised string values.  Other fields must pass data of the type defined in the attribute type.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="151"><p class="tablebodytext"><span class="unixoutputc">IdentifierKeys?{}</span></p>
</td>
<td style="border:1px solid #010101;" width="545"><p class="tablebodytext">Populated on successful return with the values of the <span class="unixoutputc">CONTRACT_HISTORY</span> identifier fields derived from <span class="unixoutputc">Keys?{}</span>.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Processing</p>
<p class="bodytext">If <span class="unixoutputc">Keys?{}</span> has been specified, the entity lookup function specified for contracts is called to retrieve the primary IDs of the contract to update.  If <span class="unixoutputc">Keys?{}</span> does not identify a unique contract, an error is raised. </p>
<p class="bodytext">Assuming that all processing stages are enabled, the following is the order of evaluation of expressions and constraints before the update of the contract:</p>
<ol class="listnumber"><li class="listnumber">Bundle direct variables if the call is nested.</li><li class="listnumber">Decrypt any encrypted values and mask any appropriate values. </li><li class="listnumber">Apply attribute type defaults and validation.</li><li class="listnumber">Apply core defaults.</li><li class="listnumber">Apply configuration specific defaults.</li><li class="listnumber">Check mandatory fields.</li><li class="listnumber">Evaluate attribute type validation expressions.</li><li class="listnumber">Evaluate the contract row expressions.</li><li class="listnumber">Evaluate the contract pre-commit expressions.</li><li class="listnumber">Unmask any masked values and encrypt any variable values configured for encryption.</li><li class="listnumber">Update the contract.</li><li class="listnumber">Evaluate the contract in-transaction expressions.</li><li class="listnumber">Queue and evaluate the contract post-commit expressions.</li><li class="listnumber">Unbundle variables stored in step 1.</li></ol><p class="syntaxheading">Returns</p>
<p class="bodytext">If any stage up to and including the contract update fails, an error is raised and this function call does not return.  If no error occurs, a non-zero value is returned.  </p>
<p class="bodytext">If any error occurs during any later processing stage and an error handler is defined, the error handler function is called and passed the relevant details.</p>
<p class="syntaxheading">Remarks</p>
<p class="bodytext">The function can be used to cancel a contract by specifying Cancelled as the value of <span class="unixoutputc">CONTRACT_STATUS_CODE</span> field.</p>


<br><div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="28077.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="28079.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div></body>
</html>


