<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title> treForward&amp;() </title>
<script type="text/javascript" src="open_parent.js"></script>
<link rel="stylesheet" type="text/css" href="pkc.css">
<link rel="stylesheet" type="text/css" href="stylesheet.css">
<meta name="description" content="Configurer's Reference Guide for Singleview Convergent Billing 9.1 ">
<script language="javascript" type="text/javascript" src="dhtml_toc.js"></script>
<script language="JavaScript">
<!--

document.onkeydown = checkChangePage;
function checkChangePage(e)
{
   if (!e) var e = window.event;
   // Don't put the following into the first page
   if ((e.ctrlKey && (e.keyCode == 37))) {
      // Ctrl-Left Arrow was pressed or Page up key pressed at the top of the page
      document.location.href = "14076.htm";
   } else
   // Don't put the following into the late page for a document
   if ((e.ctrlKey && (e.keyCode == 39))) {
      // Ctrl-Right Arrow was pressed or Page down key pressed and at the bottom of the page
      document.location.href = "14078.htm";
   }
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function printpage()
{
	window.print();
}
//-->
</script>
</head>
<body onload="loadParent();MM_preloadImages('left_down.gif','right_down.gif','index_down.gif','contents_down.gif','search_down.gif','print_down.gif');if (isTOCLoaded()) {expand('11007');expand('10992');highlight('14077')}">
<div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="14076.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="14078.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%">
<h3 class="heading3">treForward&amp;()</h3>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'treForward&amp;()' (14077)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="syntaxheading">Syntax</p>
<table class="tableintopic" width="534" cellpadding="2" cellspacing="0" border="0" style="border-collapse:collapse">
<tr align="left" valign="top">
<td class="tableheading" width="204"><p class="tableheading">Interface 1</p>
</td>
<td width="48"><p class="tablebodytext">&nbsp;</p>
</td>
<td class="tableheading" width="282"><p class="tableheading">Interface 2</p>
</td>
</tr>
<tr align="left" valign="top">
<td width="204"><pre class="unixinputp">treForward&amp;(    const ServiceName$)</pre>
</td>
<td width="48"><pre class="unixinputp">&nbsp;</pre>
</td>
<td width="282"><pre class="unixinputp">treForward&amp;(    const FunctionName$,    const FunctionParameters?[])</pre>
</td>
</tr>

</table>
<p class="syntaxheading">Description</p>
<p class="bodytext">Initiates forwarding of the executing request to the specified service or function.</p>
<p class="syntaxheading">Attributes</p>
<table class="tableintopic" width="288" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="187"><p class="tablebodytext"><span class="bold">Application Environment</span></p>
</td>
<td style="border:1px solid #010101;" width="101"><p class="tablebodytext">Any</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="187"><p class="tablebodytext"><span class="bold">Context</span></p>
</td>
<td style="border:1px solid #010101;" width="101"><p class="tablebodytext">Any</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="187"><p class="tablebodytext"><span class="bold">Method</span></p>
</td>
<td style="border:1px solid #010101;" width="101"><p class="tablebodytext">Remote</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td class="tableheading" style="border:1px solid #010101;" width="186"><p class="tableheading">Parameter</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="510"><p class="tableheading">Description</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">ServiceName$</span></p>
</td>
<td style="border:1px solid #010101;" width="510"><p class="tablebodytext">In:  Name of the service that is to receive the forwarded request.</p>
<p class="tablebodytext">The service name may include the instance specifier of another instance within the cluster if a multi-instance mode is configured.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">FunctionName$</span></p>
</td>
<td style="border:1px solid #010101;" width="510"><p class="tablebodytext">In:  Name of the remote function to receive the forwarded request.</p>
<p class="tablebodytext">Both functions must have the same return type and parameters.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="unixoutputc">FunctionParameters?[]</span></p>
</td>
<td style="border:1px solid #010101;" width="510"><p class="tablebodytext">In:  Parameters passed in the TRE request made to the specified function.</p>
<p class="tablebodytext">The data types and parameter positions of <span class="unixoutputc">var</span> parameters of the function calling <span class="unixoutputc">treForward</span> and the function called from <span class="unixoutputc">treForward</span> must match.</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Returns</p>
<p class="bodytext">None.</p>
<p class="syntaxheading">Remarks</p>
<p class="bodytext">Forwarding is achieved by <span class="unixoutputc">treForward&amp;()</span> setting the TRE error to <span class="unixoutputc">TRE_REQ_FORWARDED</span> (interface 1) or <span class="unixoutputc">TRE_REQ_FORWARD_FUNCTION</span> (interface 2) and raising an error.  The error causes the current request to abort and the error is trapped by the service processing the current request.</p>
<p class="bodytext">Interface 1 initiates the forwarding of the executing request to the service specified by the <span class="unixoutputc">ServiceName$</span> parameter. The request is forwarded as it was originally received.</p>
<p class="bodytext">Interface 2 allows a request to be forwarded to another function. It initiates the forwarding of the executing function to the function specified by <span class="unixoutputc">FunctionName$</span>.  The interface checks:</p>
<ul class="listbullet"><li class="listbullet">That the specified function is a remote function compatible with details supplied in <span class="unixoutputc">FunctionParameters?[]</span>.</li><li class="listbullet">If the functions have the same return type.  </li></ul><p class="bodytext">If either of these checks fail, an error is raised.  If the functions are compatible, a service request for the specified <span class="unixoutputc">FunctionName$</span> is encoded with the specified set of <span class="unixoutputc">FunctionParameters?[]</span> and the <span class="unixoutputc">TRE_REQ_FORWARD_FUNCTION</span> error is raised.</p>
<p class="bodytext">The final stage of handling the error is to forward the request to the service specified by <span class="unixoutputc">ServiceName$</span>, or the function specified by <span class="unixoutputc">FunctionName$</span> with the parameters specified in <span class="unixoutputc">FunctionParameters?[]</span>.</p>
<p class="bodytext">The use of an error by the function means that when it is called, any user-defined exception handler (<span class="unixoutputc">try ... except ...</span>) that is in effect (either for the scope of the <span class="unixoutputc">treForward&amp;()</span> call or from a parent (calling) function) intercepts the error.  Therefore, any active exception handler must allow for an error from the function and raise it again (using <span class="unixoutputc">abort()</span>), so that function processing can complete and forward the request.</p>
<p class="bodytext">If the request is transactional, it is recommended that the request be forwarded before any transactional changes are performed as any changes made before the forwarding are preserved if the transaction is committed.  No attempt must be made to roll back the request before forwarding.</p>
<p class="bodytext">The forwarding of the request is functionally transparent to the caller of the request.</p>
<p class="bodytext">The function can be used, for example, to guide a customer enquiry request to a server on another Convergent Billing instance when customer partitioning is implemented.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="note"><span class="unixoutputc">TRE_REQ_FORWARDED</span> and <span class="unixoutputc">TRE_REQ_FORWARD_FUNCTION</span> are defined in <span class="unixoutputc">$ATA_REL_SERVER_INCLUDE/tre_api.h</span>.</p></td></tr></table>


<br><div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="14076.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="14078.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div></body>
</html>


