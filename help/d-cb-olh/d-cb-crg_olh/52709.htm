<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title> ScheduleInsert&amp;() </title>
<script type="text/javascript" src="open_parent.js"></script>
<link rel="stylesheet" type="text/css" href="pkc.css">
<link rel="stylesheet" type="text/css" href="stylesheet.css">
<meta name="description" content="Configurer's Reference Guide for Singleview Convergent Billing 9.1 ">
<script language="javascript" type="text/javascript" src="dhtml_toc.js"></script>
<script language="JavaScript">
<!--

document.onkeydown = checkChangePage;
function checkChangePage(e)
{
   if (!e) var e = window.event;
   // Don't put the following into the first page
   if ((e.ctrlKey && (e.keyCode == 37))) {
      // Ctrl-Left Arrow was pressed or Page up key pressed at the top of the page
      document.location.href = "13740.htm";
   } else
   // Don't put the following into the late page for a document
   if ((e.ctrlKey && (e.keyCode == 39))) {
      // Ctrl-Right Arrow was pressed or Page down key pressed and at the bottom of the page
      document.location.href = "52689.htm";
   }
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function printpage()
{
	window.print();
}
//-->
</script>
</head>
<body onload="loadParent();MM_preloadImages('left_down.gif','right_down.gif','index_down.gif','contents_down.gif','search_down.gif','print_down.gif');if (isTOCLoaded()) {expand('11007');expand('10992');highlight('52709')}">
<div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="13740.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="52689.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%">
<h3 class="heading3">ScheduleInsert&amp;()</h3>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'ScheduleInsert&amp;()' (52709)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="syntaxheading">Syntax</p>
<pre class="unixinputp">ScheduleInsert&amp;(    var&nbsp;LastModified~,    FieldNames$[],    FieldValues?[])</pre>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Description</p>
<p class="bodytext">Inserts schedule details into the database.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="note">The function notifies the STD of the new schedule using transactional queuing.  Therefore, on return from a <span class="unixoutputc"><span class="unixoutputc">ScheduleInsert&amp;()</span></span> call, the STD usually has not completed processing the new schedule.</p></td></tr></table>
<p class="syntaxheading">Attributes</p>
<table class="tableintopic" width="288" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="bold"><span class="bold">Application Environment</span></span></p>
</td>
<td style="border:1px solid #010101;" width="102"><p class="tablebodytext">Any</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="bold"><span class="bold">Context</span></span></p>
</td>
<td style="border:1px solid #010101;" width="102"><p class="tablebodytext">Any</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="186"><p class="tablebodytext"><span class="bold"><span class="bold">Method</span></span></p>
</td>
<td style="border:1px solid #010101;" width="102"><p class="tablebodytext">Local</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<table class="tableintopic" width="696" cellpadding="2" cellspacing="0" border="1" style="border-collapse:collapse; border:1px solid #010101">
<tr align="left" valign="top">
<td class="tableheading" style="border:1px solid #010101;" width="133"><p class="tableheading">Parameter</p>
</td>
<td class="tableheading" style="border:1px solid #010101;" width="563"><p class="tableheading">Description</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="133"><p class="tablebodytext"><span class="unixoutputc"><span class="unixoutputc">LastModified~</span></span></p>
</td>
<td style="border:1px solid #010101;" width="563"><p class="tablebodytext">Out:  Last modified date-time of the inserted schedule.</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="133"><p class="tablebodytext"><span class="unixoutputc"><span class="unixoutputc">FieldNames$[]</span></span></p>
</td>
<td style="border:1px solid #010101;" width="563"><p class="tablebodytext">In:  Names of the fields to insert for the schedule from the <span class="unixoutputc"><span class="unixoutputc">SCHEDULE_TRE_V</span></span> view (there is a direct mapping between this array and the <span class="unixoutputc"><span class="unixoutputc">FieldValues?[]</span></span> array).</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="tablenote">Some fields in the <span class="unixoutputc"><span class="unixoutputc">SCHEDULE_TRE_V</span></span> view have an ID field and an equivalent name field; for example, <span class="unixoutputc"><span class="unixoutputc">SCHEDULE_TYPE_ID</span></span> and <span class="unixoutputc"><span class="unixoutputc">SCHEDULE_TYPE_NAME</span></span>.  Only one of each type of field can be specified, not both.</p></td></tr></table>
<p class="tablebodytext">The ID of the schedule belongs to the default customer partition of the instance specified in the <span class="unixoutputc"><span class="unixoutputc">INSTANCE_NAME</span></span> field.</p>
<p class="tablebodytext">If <span class="unixoutputc"><span class="unixoutputc">INSTANCE_NAME</span></span> is not specified, the default customer partition of the instance performing the insert is used (that is, <span class="unixoutputc"><span class="unixoutputc">$ATA_INSTANCE</span></span>).</p>
</td>
</tr>
<tr align="left" valign="top">
<td style="border:1px solid #010101;" width="133"><p class="tablebodytext"><span class="unixoutputc"><span class="unixoutputc">FieldValues?[]</span></span></p>
</td>
<td style="border:1px solid #010101;" width="563"><p class="tablebodytext">In:  Field values to insert (corresponds to the fields listed in <span class="unixoutputc"><span class="unixoutputc">FieldNames$[]</span></span>).</p>
</td>
</tr>

</table>
<p class="bodytext">&nbsp;</p>
<p class="syntaxheading">Returns</p>
<p class="bodytext">ID of the schedule if successful; otherwise, an error is raised.</p>
<p class="syntaxheading">Remarks</p>
<p class="bodytext">If the server's Convergent Billing instance is the same as the STD instance, this function is called by the remote function to perform the schedule insert.</p>
<p class="bodytext">If the server's Convergent Billing instance is not the same as the STD's server instance, the <span class="unixoutputc"><span class="unixoutputc">CLIENT_ID</span></span> and <span class="unixoutputc"><span class="unixoutputc">CLIENT_INSTANCE</span></span> fields must be set for client notification to work across domains.&nbsp; If these fields are not set, they are added to the <span class="unixoutputc"><span class="unixoutputc">FieldNames$[]</span></span> array and their corresponding values in the <span class="unixoutputc"><span class="unixoutputc">FieldValues?[]</span></span> array are set to the current client's ID and the current server's Convergent Billing instance name.  The function specific to the STD's Convergent Billing instance is called to perform the insert; that is, <span class="unixoutputc"><span class="unixoutputc">&lt;STD Convergent Billing Instance&gt;::ScheduleInsert&amp;</span></span><span class="bold">.</span></p>
<p class="bodytext">If values for the fields <span class="unixoutputc"><span class="unixoutputc">BASELINE_DURATION</span></span> and <span class="unixoutputc"><span class="unixoutputc">MAX_DURATION</span></span> are specified for the insert and expressions defined for the type, the following applies:</p>
<ul class="listbullet"><li class="listbullet">The expression is evaluated to determine whether it evaluates to a constant.</li><li class="listbullet">If the expression evaluates to a constant, the value supplied in the schedule insert overrides the result of the expression.</li><li class="listbullet">If the expression does not evaluate to a constant, the value of the expression is used instead of the supplied value.</li></ul><p class="bodytext">If <span class="unixoutputc"><span class="unixoutputc">BASELINE_DURATION</span></span> or <span class="unixoutputc"><span class="unixoutputc">MAX_DURATION</span></span> are not specified:</p>
<ul class="listbullet"><li class="listbullet"><span class="unixoutputc"><span class="unixoutputc">TASK_QUEUE</span></span> entity validation variables for column names that exist in both the <span class="unixoutputc"><span class="unixoutputc">SCHEDULE</span></span> and <span class="unixoutputc"><span class="unixoutputc">TASK_QUEUE</span></span> table are populated.</li><li class="listbullet"><span class="unixoutputc"><span class="unixoutputc">TASK_QUEUE</span></span> entity validation variables for <span class="unixoutputc"><span class="unixoutputc">START_DATE</span></span>, <span class="unixoutputc"><span class="unixoutputc">BASELINE_START_DATE</span></span>, and <span class="unixoutputc"><span class="unixoutputc">SCHEDULED_START_DATE</span></span> are set to the value of the <span class="unixoutputc"><span class="unixoutputc">FIRST_DATE</span></span> column of the schedule.</li><li class="listbullet">If <span class="unixoutputc"><span class="unixoutputc">BASELINE_DURATION</span></span>&nbsp;is not specified, it is set to the result value of the <span class="unixoutputc"><span class="unixoutputc">BASELINE_DURATION_EXPR</span></span> expression.</li><li class="listbullet">If <span class="unixoutputc"><span class="unixoutputc">MAX_DURATION</span></span> is not specified, the <span class="unixoutputc"><span class="unixoutputc">TASK_QUEUE</span></span> entity validation variable for <span class="unixoutputc"><span class="unixoutputc">BASELINE_DURATION</span></span> is set, and <span class="unixoutputc"><span class="unixoutputc">MAX_DURATION</span></span> is set to the result value of the <span class="unixoutputc"><span class="unixoutputc">MAX_DURATION_EPXR </span></span>expression.</li></ul><table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="note">If the resulting <span class="unixoutputc"><span class="unixoutputc">BASELINE_DURATION</span></span> is less than 1.0, or the resulting <span class="unixoutputc"><span class="unixoutputc">MAX_DURATION</span></span> is less than the <span class="unixoutputc"><span class="unixoutputc">BASELINE_DURATION</span></span>, an error is raised</p></td></tr></table>
<p class="bodytext">When the record is successfully inserted, the scheduler is notified that a new schedule was inserted, unless:</p>
<ul class="listbullet"><li class="listbullet">The schedule inserted has a status of Completed.</li><li class="listbullet">The <span class="unixoutputc"><span class="unixoutputc">DO_NOT_NOTIFY_IND_CODE </span></span>field is set to 1.  If <span class="unixoutputc"><span class="unixoutputc">DO_NOT_NOTIFY_IND_CODE </span></span>is specified, none of the other schedule notification control columns (for example, <span class="unixoutputc"><span class="unixoutputc">REGENERATE_TASKS_IND_CODE</span></span>, <span class="unixoutputc"><span class="unixoutputc">ACK_IND_CODE,</span></span> or <span class="unixoutputc"><span class="unixoutputc">RESPONSE_IND_CODE)</span></span> can be specified.</li></ul><p class="bodytext">If the <span class="unixoutputc"><span class="unixoutputc">REPLICATE_IND_CODE</span></span> and <span class="unixoutputc"><span class="unixoutputc">REPLICATE_GROUP_CODE</span></span> fields are specified, the schedule is replicated to other Singleview instances associated with the replication group.  The <span class="unixoutputc"><span class="unixoutputc">ScheduleReplicationGroup</span></span> derived attribute table defines the set of instances in each replication group.</p>


<br><div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="13740.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="52689.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div></body>
</html>


