<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title> Composite Business Functions </title>
<script type="text/javascript" src="open_parent.js"></script>
<link rel="stylesheet" type="text/css" href="pkc.css">
<link rel="stylesheet" type="text/css" href="stylesheet.css">
<meta name="description" content="Configurer's Reference Guide for Singleview Convergent Billing 9.1 ">
<script language="javascript" type="text/javascript" src="dhtml_toc.js"></script>
<script language="JavaScript">
<!--

document.onkeydown = checkChangePage;
function checkChangePage(e)
{
   if (!e) var e = window.event;
   // Don't put the following into the first page
   if ((e.ctrlKey && (e.keyCode == 37))) {
      // Ctrl-Left Arrow was pressed or Page up key pressed at the top of the page
      document.location.href = "40664.htm";
   } else
   // Don't put the following into the late page for a document
   if ((e.ctrlKey && (e.keyCode == 39))) {
      // Ctrl-Right Arrow was pressed or Page down key pressed and at the bottom of the page
      document.location.href = "26796.htm";
   }
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function printpage()
{
	window.print();
}
//-->
</script>
</head>
<body onload="loadParent();MM_preloadImages('left_down.gif','right_down.gif','index_down.gif','contents_down.gif','search_down.gif','print_down.gif');if (isTOCLoaded()) {expand('40664');highlight('26609')}">
<div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="40664.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="26796.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div><table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%">
<h2 class="heading2">Composite Business Functions</h2>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'Composite Business Functions' (26609)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="bodytext">Composite Business Functions (CBFs) encapsulate the core logic used to search for, create, and update Convergent Billing entities in succinct business functions.  CBFs help in easy integration of external third party systems with Convergent Billing by simplifying the interface.</p>
<p class="bodytext">Convergent Billing has an array of APIs externally available through many development environments including Delphi, C, C++, Java, Perl, and shell scripting.  The API functions are commonly known as built-in functions and are identified in Convergent Billing with the prefix 'bi' (for example, <span class="unixoutputc">biCustomerNodeInsert&amp;()</span>).  </p>
<p class="bodytext">The APIs perform searches, inserts, updates, and deletions of Convergent Billing entities and are used by external systems and the Convergent Billing client to view and manipulate entity types.  The APIs are implemented as Tuxedo services, and act as a middle tier and contain business rules to maintain data integrity. </p>
<p class="bodytext">Although the APIs are functional and flexible, for many implementations they need to be 'glued' together to map an external system's logic to Convergent Billing logic.  For example, an external Customer Relationship Management (CRM) system requests Convergent Billing to create a service with a phone number, address, and other miscellaneous attributes.  From the external CRM system's perspective, this is a simple task; however, implementing the request in Convergent Billing requires substantial control logic to efficiently manipulate Convergent Billing's API set.</p>
<p class="bodytext">CBFs simplify the interface to external systems by encapsulating the Convergent Billing core APIs into higher-level business functions.  The higher-level CBFs hide the entity creation logic and ordering constraints from external systems and are guided by the configuration in Convergent Billing.  In addition, data passed to the CBFs guide the logic when creating optional components of these entities, and at the same time validate the data.</p>
<p class="bodytext">CBFs use the Singleview Entity Validation Server (EVS) (see the <span class="referrals">System Configuration Guide for Singleview Convergent Billing</span>) to validate data and entities before they are created or updated in the Convergent Billing database.</p>
<p class="bodytext">All CBFs that represent the external interface are synchronous, remote functions advertised using the trerwdb Tuxedo service.</p>
<p class="bodytext">CBF functions are grouped in the following categories:</p>
<ul class="listbullet"><li class="listbullet"><a id="h28281" class="jump" title="Customer Node CBF Interface" href="26796.htm" target="_self">Customer node</a></li><li class="listbullet"><a id="h28282" class="jump" title="Product Instance CBF Interface" href="26960.htm" target="_self">Product instance</a></li><li class="listbullet"><a id="h28283" class="jump" title="Payment Batch CBF Interface" href="28265.htm" target="_self">Payment batch</a></li><li class="listbullet"><a id="h28284" class="jump" title="Adjustment Batch CBF Interface" href="28268.htm" target="_self">Adjustment batch</a>.</li></ul>
<table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%"><a name="o26610"></a><h3 class="heading3">CBF Architecture</h3>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'CBF Architecture' (26610)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="bodytext">The following diagram displays the relationship between remote systems, an optional EAI platform, the Composite Business Functions, EVS, and Convergent Billing API functions.</p>
<p class="bodytext">&nbsp;</p>
<p class="bodytext"><img src="26632_cbf_achitecture.png" alt="Composite Business Functions Architecture" height="462" width="368" vspace="2" hspace="2" align="bottom" border="0"></p>
<p class="caption">Composite Business Functions Architecture</p>
<p class="bodytext">&nbsp;</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="note">All functions that represent the external interface to CBFs have a function name prefix of <span class="unixoutputc">fCMN_TRE</span>.</p></td></tr></table>
<p class="bodytext">CBF functionality is configured using the <span class="unixoutputc">CBF</span> configuration item type (see the <span class="referrals">System Configuration Guide for Singleview Convergent Billing</span>).</p>
<p class="bodytext">For information about how Convergent Billing interfaces to external systems (for example, Enterprise Application Interface), refer to the <span class="referrals">Technical Integration Guide for Singleview Convergent Billing</span>.</p>
<table class="cautionstyle" width="100%"><tr><td><p class="caution">Caution:</p><p class="caution">CBFs require EVS to be operating in 'Enhanced' or 'Traditional' data typing modes.  'Weak' data typing mode is not supported.</p></td></tr></table>
<p class="bodytext">EVS is a set of functions for executing entity validation, in addition to calling the underlying Convergent Billing API function.  For example, an EVS service insert function creates the service, and also executes pre-commit and post-commit expressions configured in entity validation for that service.  This means that the CBFs have no knowledge of the entity validation attached to the entity (actioned by EVS).</p>
<p class="bodytext">Exceptions are raised for errors in the CBFs, EVS functions, or the Convergent Billing API functions if they fail to satisfy data requirements.  The Convergent Billing API function errors are passed to the CBFs without interpretation.</p>
<table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%"><a name="o26611"></a><h3 class="heading3">Supported Entities</h3>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'Supported Entities' (26611)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="bodytext">The two main Convergent Billing entities supported by CBFs are customers and product instances.  However, there is also support for batch payments and batch adjustments.</p>
<table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%"><a name="o26612"></a><h4 class="heading4">Customer CBF Interface</h4>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'Customer CBF Interface' (26612)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="bodytext"><a id="h28281_2" class="jump" title="Customer Node CBF Interface" href="26796.htm" target="_self">CBFs</a> support retrieving, inserting, updating, and deleting customer nodes and the following underlying entities:</p>
<ul class="listbullet"><li class="listbullet">Primary contact</li><li class="listbullet">Secondary contact</li><li class="listbullet">Accounts, excluding real-time data (in specific reservations)</li><li class="listbullet">Customer lists</li><li class="listbullet">Contracts</li><li class="listbullet">Invoice formats.</li></ul>
<table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%"><a name="o26613"></a><h4 class="heading4">Product CBF Interface</h4>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'Product CBF Interface' (26613)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="bodytext">CBFs support retrieving, inserting, updating, and deleting product instances and the following underlying <a id="h38471" class="jump" title="Product Instance Composite Business Functions" href="26961.htm" target="_self">entities</a>:</p>
<ul class="listbullet"><li class="listbullet">Service</li><li class="listbullet">Service list</li><li class="listbullet">Equipment</li><li class="listbullet">Companion product</li><li class="listbullet">Facility group</li><li class="listbullet">Contract.</li></ul>
<table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%"><a name="o26614"></a><h4 class="heading4">Payment CBF Interface</h4>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'Payment CBF Interface' (26614)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="bodytext">The core TRE API provides mechanisms to insert payment batch records, individual payments for the batch and invoice allocations for each of these payments.  </p>
<p class="bodytext"><a id="h28283_2" class="jump" title="Payment Batch CBF Interface" href="28265.htm" target="_self">Payment batch creation</a> allows the user to insert a complete batch that includes all subordinate objects in a single transaction.</p>
<table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%"><a name="o26615"></a><h4 class="heading4">Adjustment CBF Interface</h4>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'Adjustment CBF Interface' (26615)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="bodytext">The core TRE API provides mechanisms to insert adjustment batch records, individual adjustments for the batch and invoice allocations for each of these <a id="h28284_2" class="jump" title="Adjustment Batch CBF Interface" href="28268.htm" target="_self">adjustments</a>.  </p>
<p class="bodytext">Adjustment batch creation allows the user to insert a complete batch that includes all subordinate objects in a single transaction.</p>
<table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%"><a name="o26616"></a><h4 class="heading4">Reliance on Data and Configuration</h4>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'Reliance on Data and Configuration' (26616)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="bodytext">Convergent Billing entity creation can become complex and CBFs simplify the creation process.  However, callers using the CBFs must be aware of how the entities are configured; for example, some fields are mandatory.  </p>
<p class="bodytext">The entity creation process validates the data using the TRE and EVS and raises exceptions on errors, and subsequently rolls back all previous actions (including any post-commit actions). </p>
<p class="bodytext">Data, included or excluded in conjunction with the configuration, controls the behaviour of the CBF creation processes.  This can also be performed using the Convergent Billing client.</p>
<table width="100%" cellpadding="0" cellspacing="0" border="0"><tr><td width="100%"><a name="o26617"></a><h3 class="heading3">Entity Validation Server (EVS) Relationship</h3>
</td><td class="feedback"><p><a href="mailto:ipoint@csgi.com?subject=Feedback on Topic 'Entity Validation Server (EVS) Relationship' (26617)"><img border=0 src="email.png" alt="Provide feedback on this topic"></a></p></td></tr></table><p class="bodytext">Entity validation is supported by EVS.  CBF functions are independent of the entity validation attached to the entity type being modified.</p>
<p class="bodytext">EVS handles entity validation in lower-level functions called during processing. </p>
<p class="bodytext">Errors may be raised in CBFs, EVS functions, and Convergent Billing API functions because of validation, data, and logic errors.  Lower-level errors are passed up without interpretation.</p>
<p class="bodytext">Field names specified in this section refer only to Oracle field names, because entity validation dependent field names (labels) are usually implementation or template dependent.</p>
<table width="100%" class="notestyle"><tr><td><p class="note">Note:</p><p class="note">CBFs are supported only when the EVS <span class="unixoutputc">DATA_TYPING</span> configuration attribute is set to Enhanced.</p></td></tr></table>


<br><div class="menubar">  <table width="100%" border="0" cellspacing="0" cellpadding="0">    <tr valign="middle">      <td width="70">        <a href="40664.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('left','','left_down.gif',1)">        <img name="left" border="0" src="left_up.gif" width="26" height="26" alt="Previous topic" title="Previous topic"></a>        <a href="26796.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('right','','right_down.gif',1)">        <img name="right" border="0" src="right_up.gif" width="26" height="26" alt="Next topic" title="Next topic"></a></td>        <td class="bodytext">Configurer's Reference Guide for Singleview Convergent Billing 9.1 </td>        <td width="40">        <div align="center">        <a href="javascript:printpage();" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('print','','print_down.gif',1)">        <img name="print" border="0" src="print_up.gif" width="26" height="26" alt="Print this page" title="Print this page"></a>      </div>       </td></tr>  </table></div></body>
</html>


